classdef QuadCopter < Vehicle
    %% Class representing a quadcopter drone
    properties
        capacity = 10   % How much can the quadcopter carry (weight)?
        charge = 1      % Fraction of range remaining
        maxRange = 100  % Distance drone can travel on full charge
        cargo = []      % Vector of Items that the quadcopter is carrying
        waypointTargets = []  % vector of requests/ground vehicles located 
                              % at the lat/lons listed in the route property
        speed = 0.004     % Arbitrary, for MATLAB Kinematics
        nWaypointsCovered = 1;   % The initial position is covered already
        lockWaypoint = [];      % List of flags indicating which waypoints in the route have GVs locked
        waitingGV = [];         % Array of GV Handles waiting at waypoints(max of one GV per waypoint) 
    end
    
    methods
        function obj = QuadCopter(IDIn,LocationIn)
            obj = obj@Vehicle(IDIn,LocationIn);
            obj.route = zeros(0,2);     % Set dimensionality of route
        end
        
        
        function waypointReached(obj, ReqManager)
            obj.route = obj.route(2:end,:);
            obj.nWaypointsCovered = obj.nWaypointsCovered+1;
            mc = metaclass(obj.waypointTargets{obj.nWaypointsCovered});
            if (strcmp(mc.Name,'Request'))
                idx = find(ReqManager.getRequests() == obj.waypointTargets{obj.nWaypointsCovered},1,'last');
                ReqManager.removeRequest(idx);
            end
        end
    end
    
end

