function demoMission
    
    imData = imread('SFHiRes.png');
    [nodes, graph, deployment] = loadNodeDataFromMapFile('SanFrancisco.map');
    theaterXlim = [-122.459450, -122.381392];
    theaterYlim = [37.773665, 37.811574];

    GV = GroundVehicleManager(nodes);
    QC = QuadCopterManager;
    KU = KukaManager; 
    BB = BiobotManager;
    AT = AtlasManager;
    
    RM = RequestManager;
    
    GV.addVehicle(380);
    GV.addVehicle(720);
    QC.addVehicle([37.79, -122.4]);
    QC.addVehicle([37.80, -122.45]);
    
    quadcopterOptimizer = QuadrotorOptimizationDispatchAdaptor('127.0.0.1',...
                                                               10005,...
                                                               10004,...
                                                               RM,...
                                                               QC,...
                                                               GV);

    simMission = Simulator(GV,QC,RM,0.05);

    freq = 6;
    t = timer('Name','Reoptimization Timer',...
              'Period',freq,...
              'ExecutionMode','FixedRate',...
              'TimerFcn',@(~,~)quadcopterOptimizer.optimize(freq-1));
          
    MIT = shAirConnection('',9527);
    lis = addlistener(MIT,'validDatagramReceived',@newRequest);
    
    missionMap(imData,...
               nodes,...
               RM,GV,QC,KU,BB,AT,deployment,...
               graph,...
               theaterXlim,theaterYlim);
    set(gcf,'CloseRequestFcn',@cleanup);
    set(gcf,'KeyPressFcn',@freeze);
    
    simMission.start;
    start(t);
    
    function newRequest(src,~)
        itemMap = {'Defibrillator',...
                   'Thermal Camera',...
                   'Mobile Camera',...
                   'Stabilizer',...
                   'Sterile Band',...
                   'Thrombolytics',...
                   'Thermal Blanket',...
                   'Carbamazepine',...
                   'Oral Airway',...
                   'Endotracheal Tube',...
                   'Mask'};
        isPickup = (src.lastValidData.pickupDropoff==2);
        itemRequested = ItemFactory.makeItem(itemMap{src.lastValidData.itemID});
        if src.lastValidData.quantity*itemRequested.weight <=QuadCopter.capacity
            RM.addRequest([src.lastValidData.latitude, src.lastValidData.longitude],...
                          itemRequested,...
                          'MIT shAir',...
                          src.lastValidData.priority,...
                          now,...
                          now,...
                          src.lastValidData.quantity,...
                          ~isPickup,...
                          isPickup);
        end
    end

    function freeze(~,~)
        stop(t);
        simMission.stop;
        delete(lis);
    end

    function cleanup(src,~)
        simMission.stop;
        stop(t);
        delete(t);
        delete(MIT);
        delete(src);
    end

end

