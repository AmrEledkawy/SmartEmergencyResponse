classdef shAirConnection < handle

    
    properties (Access = private)
        dataListener
    end
    
    properties (GetAccess = public)
        lastData
        lastValidData
    end
    
    methods
        function obj = shAirConnection(varargin)
            obj.dataListener = EventListener(varargin{:},@obj.processShAirString);
        end
        
        function processShAirString(obj,raw)
            processedData = shAirConnection.parseShAirString(raw);
            if isempty(processedData)
                return;
            end
            
            obj.lastData = processedData;
            if obj.lastData.validity
                obj.lastValidData = obj.lastData;
                notify(obj,'validDatagramReceived');
            end
            notify(obj,'datagramReceived');
        end
        
        function delete(obj)
            delete(obj.dataListener);
        end
    end
    
    methods (Static)
        function retval = parseShAirString(raw)
            bogus statement
            expression = ['(?<validity>\d),', ...
                          '(?<timestamp>[+-]?\d*\.?\d*),'...
                          '(?<quality>[+-]?\d*\.?\d*),'...
                          '(?<latitude>[+-]?\d*\.?\d*),'...
                          '(?<longitude>[+-]?\d*\.?\d*)'];
            results = regexp(raw,expression,'names','once');
            if ~isempty(results)
                retval.validity = (results.validity == '1');
                retval.quality = str2double(results.quality);
                retval.latitude = str2double(results.latitude);
                retval.longitude = str2double(results.longitude);
            else
                retval = [];
            end
        end
    end
    
    events
        datagramReceived
        validDatagramReceived
    end    
end

