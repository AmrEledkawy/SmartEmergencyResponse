#include "__cf_MultiVehicleModel.h"
#include <math.h>
#include "MultiVehicleModel_acc.h"
#include "MultiVehicleModel_acc_private.h"
#include <stdio.h>
#include "simstruc.h"
#include "fixedpoint.h"
#define CodeFormat S-Function
#define AccDefine1 Accelerator_S-Function
#ifndef __RTW_UTFREE__  
extern void * utMalloc ( size_t ) ; extern void utFree ( void * ) ;
#endif
boolean_T MultiVehicleModel_acc_rt_TDelayUpdateTailOrGrowBuf ( int_T *
bufSzPtr , int_T * tailPtr , int_T * headPtr , int_T * lastPtr , real_T
tMinusDelay , real_T * * tBufPtr , real_T * * uBufPtr , real_T * * xBufPtr ,
boolean_T isfixedbuf , boolean_T istransportdelay , int_T * maxNewBufSzPtr )
{ int_T testIdx ; int_T tail = * tailPtr ; int_T bufSz = * bufSzPtr ; real_T
* tBuf = * tBufPtr ; real_T * xBuf = ( NULL ) ; int_T numBuffer = 2 ; if (
istransportdelay ) { numBuffer = 3 ; xBuf = * xBufPtr ; } testIdx = ( tail <
( bufSz - 1 ) ) ? ( tail + 1 ) : 0 ; if ( ( tMinusDelay <= tBuf [ testIdx ] )
&& ! isfixedbuf ) { int_T j ; real_T * tempT ; real_T * tempU ; real_T *
tempX = ( NULL ) ; real_T * uBuf = * uBufPtr ; int_T newBufSz = bufSz + 1024
; if ( newBufSz > * maxNewBufSzPtr ) { * maxNewBufSzPtr = newBufSz ; } tempU
= ( real_T * ) utMalloc ( numBuffer * newBufSz * sizeof ( real_T ) ) ; if (
tempU == ( NULL ) ) { return ( false ) ; } tempT = tempU + newBufSz ; if (
istransportdelay ) tempX = tempT + newBufSz ; for ( j = tail ; j < bufSz ; j
++ ) { tempT [ j - tail ] = tBuf [ j ] ; tempU [ j - tail ] = uBuf [ j ] ; if
( istransportdelay ) tempX [ j - tail ] = xBuf [ j ] ; } for ( j = 0 ; j <
tail ; j ++ ) { tempT [ j + bufSz - tail ] = tBuf [ j ] ; tempU [ j + bufSz -
tail ] = uBuf [ j ] ; if ( istransportdelay ) tempX [ j + bufSz - tail ] =
xBuf [ j ] ; } if ( * lastPtr > tail ) { * lastPtr -= tail ; } else { *
lastPtr += ( bufSz - tail ) ; } * tailPtr = 0 ; * headPtr = bufSz ; utFree (
uBuf ) ; * bufSzPtr = newBufSz ; * tBufPtr = tempT ; * uBufPtr = tempU ; if (
istransportdelay ) * xBufPtr = tempX ; } else { * tailPtr = testIdx ; }
return ( true ) ; } void CalcAtmosCOESA ( const real_T * altitude , real_T *
temp , real_T * pressure , real_T * density , real_T * speedofsound , real_T
* temperature76 , real_T * pressureRatio76 , int_T numPoints ) { int_T i ;
for ( i = 0 ; i < numPoints ; i ++ ) { int_T bottom = 0 ; int_T top =
NUM1976PTS - 1 ; int_T idx ; if ( altitude [ i ] <= altitude76 [ bottom ] ) {
idx = bottom ; } else if ( altitude [ i ] >= altitude76 [ top ] ) { idx =
NUM1976PTS - 2 ; } else { for ( ; ; ) { idx = ( bottom + top ) / 2 ; if (
altitude [ i ] < altitude76 [ idx ] ) { top = idx - 1 ; } else if ( altitude
[ i ] >= altitude76 [ idx + 1 ] ) { bottom = idx + 1 ; } else { break ; } } }
if ( tempGradient76 [ idx ] != 0.0 ) { temp [ i ] = temperature76 [ idx ] +
tempGradient76 [ idx ] * ( altitude [ i ] - altitude76 [ idx ] ) ; pressure [
i ] = PRESSURE0 * pressureRatio76 [ idx ] * muDoubleScalarPower (
temperature76 [ idx ] / temp [ i ] , GMR / tempGradient76 [ idx ] ) ; } else
{ temp [ i ] = temperature76 [ idx ] ; pressure [ i ] = PRESSURE0 *
pressureRatio76 [ idx ] * muDoubleScalarExp ( ( - GMR ) * ( altitude [ i ] -
altitude76 [ idx ] ) / temperature76 [ idx ] ) ; } density [ i ] = pressure [
i ] / ( ( R_HAT / MOL_WT ) * temp [ i ] ) ; speedofsound [ i ] =
muDoubleScalarSqrt ( GAMMA * temp [ i ] * ( R_HAT / MOL_WT ) ) ; } } void
wgs84_taylor_series ( real_T * h , real_T * phi , real_T opt_m2ft , real_T *
y , int_T k ) { real_T gamma_ts , m , sinphi , sin2phi ; int_T i ; for ( i =
0 ; i < k ; i ++ ) { sinphi = muDoubleScalarSin ( phi [ i ] ) ; sin2phi =
sinphi * sinphi ; gamma_ts = ( WGS84_G_E ) * ( 1.0 + ( WGS84_K ) * sin2phi )
/ ( muDoubleScalarSqrt ( 1.0 - ( WGS84_E_2 ) * sin2phi ) ) ; m = ( WGS84_A )
* ( WGS84_A ) * ( WGS84_B ) * ( WGS84_W_DEF ) * ( WGS84_W_DEF ) / (
WGS84_GM_DEF ) ; y [ i ] = opt_m2ft * gamma_ts * ( 1.0 - 2.0 * ( 1.0 + 1.0 /
( WGS84_INV_F ) + m - 2.0 * sin2phi / ( WGS84_INV_F ) ) * h [ i ] / ( WGS84_A
) + 3.0 * h [ i ] * h [ i ] / ( ( WGS84_A ) * ( WGS84_A ) ) ) ; } } real_T
MultiVehicleModel_acc_rt_TDelayInterpolate ( real_T tMinusDelay , real_T
tStart , real_T * tBuf , real_T * uBuf , int_T bufSz , int_T * lastIdx ,
int_T oldestIdx , int_T newIdx , real_T initOutput , boolean_T discrete ,
boolean_T minorStepAndTAtLastMajorOutput ) { int_T i ; real_T yout , t1 , t2
, u1 , u2 ; if ( ( newIdx == 0 ) && ( oldestIdx == 0 ) && ( tMinusDelay >
tStart ) ) return initOutput ; if ( tMinusDelay <= tStart ) return initOutput
; if ( ( tMinusDelay <= tBuf [ oldestIdx ] ) ) { if ( discrete ) { return (
uBuf [ oldestIdx ] ) ; } else { int_T tempIdx = oldestIdx + 1 ; if (
oldestIdx == bufSz - 1 ) tempIdx = 0 ; t1 = tBuf [ oldestIdx ] ; t2 = tBuf [
tempIdx ] ; u1 = uBuf [ oldestIdx ] ; u2 = uBuf [ tempIdx ] ; if ( t2 == t1 )
{ if ( tMinusDelay >= t2 ) { yout = u2 ; } else { yout = u1 ; } } else {
real_T f1 = ( t2 - tMinusDelay ) / ( t2 - t1 ) ; real_T f2 = 1.0 - f1 ; yout
= f1 * u1 + f2 * u2 ; } return yout ; } } if ( minorStepAndTAtLastMajorOutput
) { if ( newIdx != 0 ) { if ( * lastIdx == newIdx ) { ( * lastIdx ) -- ; }
newIdx -- ; } else { if ( * lastIdx == newIdx ) { * lastIdx = bufSz - 1 ; }
newIdx = bufSz - 1 ; } } i = * lastIdx ; if ( tBuf [ i ] < tMinusDelay ) {
while ( tBuf [ i ] < tMinusDelay ) { if ( i == newIdx ) break ; i = ( i < (
bufSz - 1 ) ) ? ( i + 1 ) : 0 ; } } else { while ( tBuf [ i ] >= tMinusDelay
) { i = ( i > 0 ) ? i - 1 : ( bufSz - 1 ) ; } i = ( i < ( bufSz - 1 ) ) ? ( i
+ 1 ) : 0 ; } * lastIdx = i ; if ( discrete ) { double tempEps = (
DBL_EPSILON ) * 128.0 ; double localEps = tempEps * muDoubleScalarAbs ( tBuf
[ i ] ) ; if ( tempEps > localEps ) { localEps = tempEps ; } localEps =
localEps / 2.0 ; if ( tMinusDelay >= ( tBuf [ i ] - localEps ) ) { yout =
uBuf [ i ] ; } else { if ( i == 0 ) { yout = uBuf [ bufSz - 1 ] ; } else {
yout = uBuf [ i - 1 ] ; } } } else { if ( i == 0 ) { t1 = tBuf [ bufSz - 1 ]
; u1 = uBuf [ bufSz - 1 ] ; } else { t1 = tBuf [ i - 1 ] ; u1 = uBuf [ i - 1
] ; } t2 = tBuf [ i ] ; u2 = uBuf [ i ] ; if ( t2 == t1 ) { if ( tMinusDelay
>= t2 ) { yout = u2 ; } else { yout = u1 ; } } else { real_T f1 = ( t2 -
tMinusDelay ) / ( t2 - t1 ) ; real_T f2 = 1.0 - f1 ; yout = f1 * u1 + f2 * u2
; } } return ( yout ) ; } void mul_wide_s32 ( int32_T in0 , int32_T in1 ,
uint32_T * ptrOutBitsHi , uint32_T * ptrOutBitsLo ) { uint32_T absIn0 ;
uint32_T absIn1 ; uint32_T in0Lo ; uint32_T in0Hi ; uint32_T in1Hi ; uint32_T
productHiLo ; uint32_T productLoHi ; absIn0 = ( uint32_T ) ( in0 < 0 ? - in0
: in0 ) ; absIn1 = ( uint32_T ) ( in1 < 0 ? - in1 : in1 ) ; in0Hi = absIn0 >>
16U ; in0Lo = absIn0 & 65535U ; in1Hi = absIn1 >> 16U ; absIn0 = absIn1 &
65535U ; productHiLo = in0Hi * absIn0 ; productLoHi = in0Lo * in1Hi ; absIn0
*= in0Lo ; absIn1 = 0U ; in0Lo = ( productLoHi << 16U ) + absIn0 ; if ( in0Lo
< absIn0 ) { absIn1 = 1U ; } absIn0 = in0Lo ; in0Lo += productHiLo << 16U ;
if ( in0Lo < absIn0 ) { absIn1 ++ ; } absIn0 = ( ( ( productLoHi >> 16U ) + (
productHiLo >> 16U ) ) + in0Hi * in1Hi ) + absIn1 ; if ( ! ( ( in0 == 0 ) ||
( ( in1 == 0 ) || ( ( in0 > 0 ) == ( in1 > 0 ) ) ) ) ) { absIn0 = ~ absIn0 ;
in0Lo = ~ in0Lo ; in0Lo ++ ; if ( in0Lo == 0U ) { absIn0 ++ ; } } *
ptrOutBitsHi = absIn0 ; * ptrOutBitsLo = in0Lo ; } int32_T
mul_s32_s32_s32_sat ( int32_T a , int32_T b ) { int32_T result ; uint32_T
u32_chi ; uint32_T u32_clo ; mul_wide_s32 ( a , b , & u32_chi , & u32_clo ) ;
if ( ( ( int32_T ) u32_chi > 0 ) || ( ( u32_chi == 0U ) && ( u32_clo >=
2147483648U ) ) ) { result = MAX_int32_T ; } else if ( ( ( int32_T ) u32_chi
< - 1 ) || ( ( ( int32_T ) u32_chi == - 1 ) && ( u32_clo < 2147483648U ) ) )
{ result = MIN_int32_T ; } else { result = ( int32_T ) u32_clo ; } return
result ; } uint32_T plook_bincpa ( real_T u , const real_T bp [ ] , uint32_T
maxIndex , real_T * fraction , uint32_T * prevIndex ) { uint32_T bpIndex ;
uint32_T startIndex ; if ( u <= bp [ 0U ] ) { bpIndex = 0U ; * fraction = 0.0
; } else if ( u < bp [ maxIndex ] ) { startIndex = * prevIndex ; bpIndex =
binsearch_u32d_prevIdx ( u , bp , startIndex , maxIndex ) ; * fraction = ( u
- bp [ bpIndex ] ) / ( bp [ bpIndex + 1U ] - bp [ bpIndex ] ) ; } else {
bpIndex = maxIndex ; * fraction = 0.0 ; } * prevIndex = bpIndex ; return
bpIndex ; } real_T intrp2d_la_pw ( const uint32_T bpIndex [ ] , const real_T
frac [ ] , const real_T table [ ] , uint32_T stride , const uint32_T maxIndex
[ ] ) { real_T y ; real_T yL_1d ; real_T yR_1d ; uint32_T offset_1d ;
offset_1d = bpIndex [ 1U ] * stride + bpIndex [ 0U ] ; if ( bpIndex [ 0U ] ==
maxIndex [ 0U ] ) { yL_1d = table [ offset_1d ] ; } else { yL_1d = ( table [
offset_1d + 1U ] - table [ offset_1d ] ) * frac [ 0U ] + table [ offset_1d ]
; } if ( bpIndex [ 1U ] == maxIndex [ 1U ] ) { y = yL_1d ; } else { offset_1d
+= stride ; if ( bpIndex [ 0U ] == maxIndex [ 0U ] ) { yR_1d = table [
offset_1d ] ; } else { yR_1d = ( table [ offset_1d + 1U ] - table [ offset_1d
] ) * frac [ 0U ] + table [ offset_1d ] ; } y = ( yR_1d - yL_1d ) * frac [ 1U
] + yL_1d ; } return y ; } uint32_T binsearch_u32d_prevIdx ( real_T u , const
real_T bp [ ] , uint32_T startIndex , uint32_T maxIndex ) { uint32_T iRght ;
uint32_T iLeft ; uint32_T bpIdx ; uint32_T found ; bpIdx = startIndex ; iLeft
= 0U ; iRght = maxIndex ; found = 0U ; while ( found == 0U ) { if ( u < bp [
bpIdx ] ) { iRght = bpIdx - 1U ; bpIdx = ( iRght + iLeft ) >> 1U ; } else if
( u < bp [ bpIdx + 1U ] ) { found = 1U ; } else { iLeft = bpIdx + 1U ; bpIdx
= ( iRght + iLeft ) >> 1U ; } } return bpIdx ; } void lrp1efvmp1 ( const
real_T hbvbggl05o [ 300 ] , olv1gstxld * localB , nephd1lxln * localDW ,
kljb3jfx1k * localP ) { real_T d0fztd5ikb ; real_T giu5ad4ada ; real_T
ec2ji1kjyp ; real_T bflo1oovf1 ; real_T kk4p1dhbby ; real_T avnrrkfpae ;
real_T po3o4wcfpr_idx_0 ; real_T po3o4wcfpr_idx_1 ; localDW -> d0o3rxwkwd = 0
; while ( localDW -> d0o3rxwkwd < 100 ) { ec2ji1kjyp = muDoubleScalarRem (
hbvbggl05o [ 3 * localDW -> d0o3rxwkwd ] , localP -> caerwfkxfe . P_2 ) ;
kk4p1dhbby = ec2ji1kjyp / localP -> caerwfkxfe . P_3 ; if ( kk4p1dhbby < 0.0
) { kk4p1dhbby = muDoubleScalarCeil ( kk4p1dhbby ) ; } else { kk4p1dhbby =
muDoubleScalarFloor ( kk4p1dhbby ) ; } ec2ji1kjyp -= localP -> caerwfkxfe .
P_4 * kk4p1dhbby ; bflo1oovf1 = ec2ji1kjyp / localP -> caerwfkxfe . P_5 ; if
( bflo1oovf1 < 0.0 ) { kk4p1dhbby = muDoubleScalarCeil ( bflo1oovf1 ) ; }
else { kk4p1dhbby = muDoubleScalarFloor ( bflo1oovf1 ) ; } bflo1oovf1 *=
localP -> caerwfkxfe . P_7 ; bflo1oovf1 *= bflo1oovf1 ; bflo1oovf1 =
muDoubleScalarSqrt ( bflo1oovf1 ) ; if ( bflo1oovf1 < 0.0 ) { bflo1oovf1 =
muDoubleScalarCeil ( bflo1oovf1 ) ; } else { bflo1oovf1 = muDoubleScalarFloor
( bflo1oovf1 ) ; } bflo1oovf1 *= localP -> caerwfkxfe . P_8 ; ec2ji1kjyp = (
ec2ji1kjyp - localP -> caerwfkxfe . P_6 * kk4p1dhbby ) - bflo1oovf1 *
muDoubleScalarRem ( ec2ji1kjyp , localP -> caerwfkxfe . P_9 ) ; giu5ad4ada =
muDoubleScalarRem ( ( real_T ) ( bflo1oovf1 != 0.0 ) * localP -> caerwfkxfe .
P_10 + hbvbggl05o [ 3 * localDW -> d0o3rxwkwd + 1 ] , localP -> caerwfkxfe .
P_11 ) ; kk4p1dhbby = giu5ad4ada / localP -> caerwfkxfe . P_12 ; if (
kk4p1dhbby < 0.0 ) { kk4p1dhbby = muDoubleScalarCeil ( kk4p1dhbby ) ; } else
{ kk4p1dhbby = muDoubleScalarFloor ( kk4p1dhbby ) ; } giu5ad4ada -= localP ->
caerwfkxfe . P_13 * kk4p1dhbby ; po3o4wcfpr_idx_0 = ( ec2ji1kjyp - localP ->
caerwfkxfe . P_1 [ 0 ] ) * localP -> caerwfkxfe . P_14 ; po3o4wcfpr_idx_1 = (
giu5ad4ada - localP -> caerwfkxfe . P_1 [ 1 ] ) * localP -> caerwfkxfe . P_14
; kk4p1dhbby = localP -> caerwfkxfe . P_20 - localP -> caerwfkxfe . P_19 ;
d0fztd5ikb = muDoubleScalarSqrt ( localP -> caerwfkxfe . P_18 - kk4p1dhbby *
kk4p1dhbby ) ; avnrrkfpae = localP -> caerwfkxfe . P_22 * localP ->
caerwfkxfe . P_21 ; kk4p1dhbby = muDoubleScalarSin ( avnrrkfpae ) ;
ec2ji1kjyp = localP -> caerwfkxfe . P_17 - d0fztd5ikb * d0fztd5ikb *
kk4p1dhbby * kk4p1dhbby ; bflo1oovf1 = localP -> caerwfkxfe . P_16 /
muDoubleScalarSqrt ( ec2ji1kjyp ) ; kk4p1dhbby = po3o4wcfpr_idx_0 /
muDoubleScalarAtan2 ( localP -> caerwfkxfe . P_15 , ( localP -> caerwfkxfe .
P_23 - d0fztd5ikb * d0fztd5ikb ) * bflo1oovf1 / ec2ji1kjyp ) ;
muDoubleScalarSinCos ( localP -> caerwfkxfe . P_25 * localP -> caerwfkxfe .
P_24 , & d0fztd5ikb , & giu5ad4ada ) ; avnrrkfpae = 1.0 / muDoubleScalarAtan2
( localP -> caerwfkxfe . P_26 , bflo1oovf1 * muDoubleScalarCos ( avnrrkfpae )
) * po3o4wcfpr_idx_1 ; bflo1oovf1 = kk4p1dhbby * giu5ad4ada + avnrrkfpae *
d0fztd5ikb ; avnrrkfpae = avnrrkfpae * giu5ad4ada - kk4p1dhbby * d0fztd5ikb ;
localB -> fodp0k1wmj [ 3 * localDW -> d0o3rxwkwd ] = bflo1oovf1 ; localB ->
fodp0k1wmj [ 1 + 3 * localDW -> d0o3rxwkwd ] = avnrrkfpae ; localB ->
fodp0k1wmj [ 2 + 3 * localDW -> d0o3rxwkwd ] = - ( hbvbggl05o [ 3 * localDW
-> d0o3rxwkwd + 2 ] + localP -> caerwfkxfe . P_0 ) ; localDW -> d0o3rxwkwd ++
; } } void anq55orn2j ( SimStruct * const S ) { } void ge2n33wzlq (
bw1rqnuzxz * localP , ogd05noz2v * localX ) { localX -> nd4hq3hzk1 = localP
-> P_1 ; } void hhpy1jenry ( pp3iplrmnr * localDW ) { localDW -> gmpj3fzvis =
false ; } void gamgx1mju3 ( SimStruct * const S , boolean_T atvgqiuycn ,
mwyxnu3o3s * localB , pp3iplrmnr * localDW , bw1rqnuzxz * localP , ogd05noz2v
* localX ) { if ( ssIsSampleHit ( S , 1 , 0 ) && ssIsMajorTimeStep ( S ) ) {
if ( atvgqiuycn ) { if ( ! localDW -> gmpj3fzvis ) { ge2n33wzlq ( localP ,
localX ) ; localDW -> gmpj3fzvis = true ; } } else { if ( localDW ->
gmpj3fzvis ) { hhpy1jenry ( localDW ) ; } } } if ( localDW -> gmpj3fzvis ) {
if ( localX -> nd4hq3hzk1 >= localP -> P_2 ) { if ( localX -> nd4hq3hzk1 !=
localP -> P_2 ) { localX -> nd4hq3hzk1 = localP -> P_2 ;
ssSetSolverNeedsReset ( S ) ; } } else if ( localX -> nd4hq3hzk1 <= localP ->
P_3 ) { if ( localX -> nd4hq3hzk1 != localP -> P_3 ) { localX -> nd4hq3hzk1 =
localP -> P_3 ; ssSetSolverNeedsReset ( S ) ; } } localB -> nulslvd1ds =
localX -> nd4hq3hzk1 ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( localDW
-> h4mjzxg4bn ) ; } } } void mn1012evq4 ( pp3iplrmnr * localDW ) { if (
localDW -> gmpj3fzvis ) { } } void bdg4dfoelg ( real_T b1315upiar ,
pp3iplrmnr * localDW , bw1rqnuzxz * localP , ogd05noz2v * localX , khi5eapfzb
* localXdot ) { if ( localDW -> gmpj3fzvis ) { { boolean_T lsat ; boolean_T
usat ; lsat = ( localX -> nd4hq3hzk1 <= localP -> P_3 ) ; usat = ( localX ->
nd4hq3hzk1 >= localP -> P_2 ) ; if ( ( ! lsat && ! usat ) || ( lsat && (
b1315upiar > 0 ) ) || ( usat && ( b1315upiar < 0 ) ) ) { localXdot ->
nd4hq3hzk1 = b1315upiar ; } else { localXdot -> nd4hq3hzk1 = 0.0 ; } } } else
{ localXdot -> nd4hq3hzk1 = 0.0 ; } } void olmlwlyikl ( SimStruct * const S )
{ } real_T rt_urand_Upu32_Yd_f_pw_snf ( uint32_T * u ) { uint32_T lo ;
uint32_T hi ; lo = * u % 127773U * 16807U ; hi = * u / 127773U * 2836U ; if (
lo < hi ) { * u = 2147483647U - ( hi - lo ) ; } else { * u = lo - hi ; }
return ( real_T ) * u * 4.6566128752457969E-10 ; } real_T
rt_nrand_Upu32_Yd_f_pw_snf ( uint32_T * u ) { real_T y ; real_T sr ; real_T
si ; do { sr = 2.0 * rt_urand_Upu32_Yd_f_pw_snf ( u ) - 1.0 ; si = 2.0 *
rt_urand_Upu32_Yd_f_pw_snf ( u ) - 1.0 ; si = sr * sr + si * si ; } while (
si > 1.0 ) ; y = muDoubleScalarSqrt ( - 2.0 * muDoubleScalarLog ( si ) / si )
* sr ; return y ; } void rt_mrdivide_U1d1x3_U2d3x3_Yd1x3_snf ( const real_T
u0 [ 3 ] , const real_T u1 [ 9 ] , real_T y [ 3 ] ) { real_T A [ 9 ] ;
int32_T r1 ; int32_T r2 ; int32_T r3 ; real_T maxval ; real_T a21 ; int32_T
rtemp ; memcpy ( & A [ 0 ] , & u1 [ 0 ] , 9U * sizeof ( real_T ) ) ; r1 = 1 ;
r2 = 2 ; r3 = 3 ; maxval = muDoubleScalarAbs ( u1 [ 0 ] ) ; a21 =
muDoubleScalarAbs ( u1 [ 1 ] ) ; if ( a21 > maxval ) { maxval = a21 ; r1 = 2
; r2 = 1 ; } if ( muDoubleScalarAbs ( u1 [ 2 ] ) > maxval ) { r1 = 3 ; r2 = 2
; r3 = 1 ; } A [ r2 - 1 ] = u1 [ r2 - 1 ] / u1 [ r1 - 1 ] ; A [ r3 - 1 ] /= A
[ r1 - 1 ] ; A [ r2 + 2 ] -= A [ r2 - 1 ] * A [ r1 + 2 ] ; A [ r3 + 2 ] -= A
[ r3 - 1 ] * A [ r1 + 2 ] ; A [ r2 + 5 ] -= A [ r2 - 1 ] * A [ r1 + 5 ] ; A [
r3 + 5 ] -= A [ r3 - 1 ] * A [ r1 + 5 ] ; if ( muDoubleScalarAbs ( A [ r3 + 2
] ) > muDoubleScalarAbs ( A [ r2 + 2 ] ) ) { rtemp = r2 ; r2 = r3 ; r3 =
rtemp ; } A [ r3 + 2 ] /= A [ r2 + 2 ] ; A [ r3 + 5 ] -= A [ r3 + 2 ] * A [
r2 + 5 ] ; y [ r1 - 1 ] = u0 [ 0 ] / A [ r1 - 1 ] ; y [ r2 - 1 ] = u0 [ 1 ] -
y [ r1 - 1 ] * A [ r1 + 2 ] ; y [ r3 - 1 ] = u0 [ 2 ] - y [ r1 - 1 ] * A [ r1
+ 5 ] ; y [ r2 - 1 ] /= A [ r2 + 2 ] ; y [ r3 - 1 ] -= y [ r2 - 1 ] * A [ r2
+ 5 ] ; y [ r3 - 1 ] /= A [ r3 + 5 ] ; y [ r2 - 1 ] -= y [ r3 - 1 ] * A [ r3
+ 2 ] ; y [ r1 - 1 ] -= y [ r3 - 1 ] * A [ r3 - 1 ] ; y [ r1 - 1 ] -= y [ r2
- 1 ] * A [ r2 - 1 ] ; } static void mdlOutputs ( SimStruct * S , int_T tid )
{ real_T nosdiig03u [ 169 ] ; real_T augykoos5l [ 169 ] ; real_T msy4xojx4u [
4 ] ; real_T cer2wchkb3 ; real_T p3wzaspxbp [ 3 ] ; real_T f03gfuzt3a ;
real_T d4ajp443jd ; real_T egqvaqn2aq ; real_T iuixc4td42 ; real_T ezloddc3bo
; real_T cwtd4tub5j ; real_T bhh1f5lzvq ; real_T gha5nk3fuu ; boolean_T
o2xdurj54y ; real_T ljakha3p0t [ 300 ] ; real_T a2wn4uspir [ 300 ] ; real_T
tmp [ 3 ] ; real_T tmp_p [ 3 ] ; real_T tmp_e [ 3 ] ; real_T jbe23ejmq4 [ 6 ]
; real_T dji2o12wzn ; real_T i5s0bgfbyv ; uint32_T fph4c4pnan ; real_T
l4uine0f5r ; real_T k2pgjttwjz ; real_T cnkhciwxyc ; real_T kq2lyhvs2k ;
real_T dclw24just ; real_T moyzuytyxz ; real_T p4gomrxwts ; real_T glbkg2z2pc
; real_T j4y5quitjt ; real_T j4aqh4ovvp ; real_T ewjdtgxpyu ; real_T
pydf4ae103 ; real_T cqc1jds2od ; boolean_T lwtpwyeioi ; real_T ht1jy4ffdq ;
boolean_T lwz1urnuzn ; boolean_T e34g13vyp1 ; boolean_T ggd4siidnl ; real_T
g5o314ttux [ 3 ] ; real_T phxjodriat ; real_T hg4dcusulx ; real_T i5dtnopdzy
; real_T pg4naehcgd ; real_T eog11ippyj ; real_T fy45xp05wx ; real_T
pl4jpj0hcq ; real_T bhgkwh20ck [ 3 ] ; real_T jz4qqgqklu ; real_T dw55yfpcss
[ 3 ] ; real_T gdgwwi2lmx [ 9 ] ; real_T d52lfbl3ao ; real_T pj5dx0krjn [ 3 ]
; real_T peirsr4iz0 [ 3 ] ; int32_T s202_iter ; int8_T rtAction ; real_T
mnz5fs4iuo [ 3 ] ; real_T pjk02b11oj [ 3 ] ; real_T iabk2erc5l ; int32_T
s251_iter ; real_T oqfpopasi5 [ 11 ] ; real_T po2mgfbnrk [ 11 ] ; int32_T
s210_iter ; real_T l4b0e1ozlo [ 13 ] ; int32_T gjwdsuon2d ; real_T frac [ 2 ]
; uint32_T bpIndex [ 2 ] ; real_T kb4gbgtxnr [ 18 ] ; int32_T i ; real_T
fuirhvhf5t [ 3 ] ; real_T tmp_i [ 3 ] ; real_T tmp_m [ 13 ] ; boolean_T tmp_g
; boolean_T tmp_j ; real_T mcxhbnq5q4_idx_2 ; real_T gwnuww4u05_idx_1 ;
real_T mjmouk13zx_idx_0 ; real_T mjmouk13zx_idx_1 ; real_T k1qflq4l35_idx_0 ;
real_T brnqslniho_idx_0 ; real_T brnqslniho_idx_1 ; real_T brnqslniho_idx_2 ;
real_T c5gnm55e3f_idx_0 ; real_T c5gnm55e3f_idx_2 ; int32_T qY ; int32_T qY_p
; int32_T qY_e ; int32_T qY_i ; int32_T qY_m ; int32_T qY_g ; int32_T qY_j ;
int32_T qY_f ; n3qi1whofz * _rtB ; loikxjbxjg * _rtP ; f1xhd02yjc * _rtX ;
ew10rzwqr2 * _rtDW ; _rtDW = ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ; _rtX
= ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ; _rtP = ( ( loikxjbxjg * )
ssGetDefaultParam ( S ) ) ; _rtB = ( ( n3qi1whofz * ) _ssGetBlockIO ( S ) ) ;
if ( ssIsSampleHit ( S , 1 , 0 ) ) { ssCallAccelRunBlock ( S , 57 , 0 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 1 ,
SS_CALL_MDL_OUTPUTS ) ; _rtB -> gwopvjsamg [ 0 ] = _rtP -> P_0 [ 0 ] ; _rtB
-> gwopvjsamg [ 1 ] = _rtP -> P_0 [ 1 ] ; _rtB -> gwopvjsamg [ 2 ] = _rtP ->
P_0 [ 2 ] ; ssCallAccelRunBlock ( S , 7 , 0 , SS_CALL_MDL_OUTPUTS ) ; _rtB ->
kity0pstnv [ 0 ] = _rtP -> P_1 [ 0 ] ; _rtB -> kity0pstnv [ 1 ] = _rtP -> P_1
[ 1 ] ; _rtB -> kity0pstnv [ 2 ] = _rtP -> P_1 [ 2 ] ; _rtB -> kity0pstnv [ 3
] = _rtP -> P_1 [ 3 ] ; } _rtDW -> bpzo543yxr = 0 ; while ( _rtDW ->
bpzo543yxr < 2 ) { ssCallAccelCopyCacheForIIS ( S , 5 , ( void * ) 1 ) ; for
( i = 0 ; i < 100 ; i ++ ) { a2wn4uspir [ 3 * i ] = _rtB -> a403tlsu5c [ 3 *
i + 300 * _rtDW -> bpzo543yxr ] ; a2wn4uspir [ 1 + 3 * i ] = _rtB ->
a403tlsu5c [ ( 3 * i + 300 * _rtDW -> bpzo543yxr ) + 1 ] ; a2wn4uspir [ 2 + 3
* i ] = _rtB -> a403tlsu5c [ ( 3 * i + 300 * _rtDW -> bpzo543yxr ) + 2 ] ; }
_rtB -> kbid4ztlyb [ 0 ] = _rtB -> kity0pstnv [ _rtDW -> bpzo543yxr << 1 ] ;
_rtB -> kbid4ztlyb [ 1 ] = _rtB -> kity0pstnv [ ( _rtDW -> bpzo543yxr << 1 )
+ 1 ] ; _rtB -> aaudqhh00f = _rtB -> jxgvc3ym2b [ _rtDW -> bpzo543yxr ] ; if
( ssIsSampleHit ( S , 1 , 0 ) ) { lrp1efvmp1 ( a2wn4uspir , & _rtB ->
caerwfkxfe [ 0 ] . lrp1efvmp1z , & _rtDW -> caerwfkxfe [ 0 ] . lrp1efvmp1z ,
( kljb3jfx1k * ) & _rtP -> caerwfkxfe . lrp1efvmp1z ) ; _rtB -> caerwfkxfe [
0 ] . nd3opxaiog = _rtP -> caerwfkxfe . P_0 ; } if ( _rtDW -> caerwfkxfe [ 0
] . hjm4gwoouy . IcNeedsLoading ) { ( ( f1xhd02yjc * ) ssGetContStates ( S )
) -> caerwfkxfe [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> bpzo543yxr ] .
eohuwdncyi [ 0 ] = _rtB -> kbid4ztlyb [ 0 ] ; ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfe [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S
) ) -> bpzo543yxr ] . eohuwdncyi [ 1 ] = _rtB -> kbid4ztlyb [ 1 ] ; ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfe [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> bpzo543yxr ] . eohuwdncyi [ 2 ] = _rtB ->
caerwfkxfe [ 0 ] . nd3opxaiog ; } _rtB -> caerwfkxfe [ 0 ] . jhj3xqdp44 [ 0 ]
= ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfe [ ( ( ew10rzwqr2 *
) ssGetRootDWork ( S ) ) -> bpzo543yxr ] . eohuwdncyi [ 0 ] ; _rtB ->
caerwfkxfe [ 0 ] . jhj3xqdp44 [ 1 ] = ( ( f1xhd02yjc * ) ssGetContStates ( S
) ) -> caerwfkxfe [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> bpzo543yxr ]
. eohuwdncyi [ 1 ] ; _rtB -> caerwfkxfe [ 0 ] . jhj3xqdp44 [ 2 ] = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfe [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> bpzo543yxr ] . eohuwdncyi [ 2 ] ;
ssCallAccelRunBlock ( S , 1 , 0 , SS_CALL_MDL_OUTPUTS ) ; _rtB -> caerwfkxfe
[ 0 ] . bj13bsqkpx = 0.0 ; _rtB -> caerwfkxfe [ 0 ] . bj13bsqkpx += _rtP ->
caerwfkxfe . P_1 * _rtB -> caerwfkxfe [ 0 ] . i4dpwdbox2 ; j4aqh4ovvp = _rtB
-> caerwfkxfe [ 0 ] . bj13bsqkpx ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB
-> caerwfkxfe [ 0 ] . l0uywpcbts [ 0 ] = _rtP -> caerwfkxfe . P_2 [ 0 ] ;
_rtB -> caerwfkxfe [ 0 ] . l0uywpcbts [ 1 ] = _rtP -> caerwfkxfe . P_2 [ 1 ]
; muDoubleScalarSinCos ( _rtP -> caerwfkxfe . P_4 * _rtP -> caerwfkxfe . P_3
, & _rtB -> caerwfkxfe [ 0 ] . ajhmvy5vos , & _rtB -> caerwfkxfe [ 0 ] .
ogviq23brw ) ; i5dtnopdzy = _rtP -> caerwfkxfe . P_10 - _rtP -> caerwfkxfe .
P_9 ; jz4qqgqklu = muDoubleScalarSqrt ( _rtP -> caerwfkxfe . P_8 - i5dtnopdzy
* i5dtnopdzy ) ; phxjodriat = _rtP -> caerwfkxfe . P_12 * _rtP -> caerwfkxfe
. P_11 ; i5dtnopdzy = muDoubleScalarSin ( phxjodriat ) ; i5dtnopdzy = _rtP ->
caerwfkxfe . P_7 - jz4qqgqklu * jz4qqgqklu * i5dtnopdzy * i5dtnopdzy ;
pl4jpj0hcq = _rtP -> caerwfkxfe . P_6 / muDoubleScalarSqrt ( i5dtnopdzy ) ;
_rtB -> caerwfkxfe [ 0 ] . gkqc5fqjwt = muDoubleScalarAtan2 ( _rtP ->
caerwfkxfe . P_5 , ( _rtP -> caerwfkxfe . P_13 - jz4qqgqklu * jz4qqgqklu ) *
pl4jpj0hcq / i5dtnopdzy ) ; _rtB -> caerwfkxfe [ 0 ] . hlseod05s5 =
muDoubleScalarAtan2 ( _rtP -> caerwfkxfe . P_14 , pl4jpj0hcq *
muDoubleScalarCos ( phxjodriat ) ) ; _rtB -> caerwfkxfe [ 0 ] . bsdw3gxzh3 =
_rtP -> caerwfkxfe . P_16 ; } fy45xp05wx = muDoubleScalarRem ( ( _rtB ->
caerwfkxfe [ 0 ] . jhj3xqdp44 [ 0 ] * _rtB -> caerwfkxfe [ 0 ] . ogviq23brw -
_rtB -> caerwfkxfe [ 0 ] . jhj3xqdp44 [ 1 ] * _rtB -> caerwfkxfe [ 0 ] .
ajhmvy5vos ) * _rtB -> caerwfkxfe [ 0 ] . gkqc5fqjwt * _rtP -> caerwfkxfe .
P_15 + _rtB -> caerwfkxfe [ 0 ] . l0uywpcbts [ 0 ] , _rtB -> caerwfkxfe [ 0 ]
. bsdw3gxzh3 ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfe [ 0
] . o5mlnwmkak = _rtP -> caerwfkxfe . P_17 ; } gwnuww4u05_idx_1 = fy45xp05wx
/ _rtB -> caerwfkxfe [ 0 ] . o5mlnwmkak ; if ( gwnuww4u05_idx_1 < 0.0 ) {
gwnuww4u05_idx_1 = muDoubleScalarCeil ( gwnuww4u05_idx_1 ) ; } else {
gwnuww4u05_idx_1 = muDoubleScalarFloor ( gwnuww4u05_idx_1 ) ; } fy45xp05wx -=
_rtP -> caerwfkxfe . P_18 * gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0
) ) { _rtB -> caerwfkxfe [ 0 ] . exzou2korr = _rtP -> caerwfkxfe . P_19 ; }
i5dtnopdzy = fy45xp05wx / _rtB -> caerwfkxfe [ 0 ] . exzou2korr ; if (
i5dtnopdzy < 0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil ( i5dtnopdzy ) ; }
else { gwnuww4u05_idx_1 = muDoubleScalarFloor ( i5dtnopdzy ) ; } i5dtnopdzy
*= _rtP -> caerwfkxfe . P_21 ; i5dtnopdzy *= i5dtnopdzy ; i5dtnopdzy =
muDoubleScalarSqrt ( i5dtnopdzy ) ; if ( i5dtnopdzy < 0.0 ) { i5dtnopdzy =
muDoubleScalarCeil ( i5dtnopdzy ) ; } else { i5dtnopdzy = muDoubleScalarFloor
( i5dtnopdzy ) ; } i5dtnopdzy *= _rtP -> caerwfkxfe . P_22 ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfe [ 0 ] . ndjfk4qudy = _rtP
-> caerwfkxfe . P_23 ; } fy45xp05wx = ( fy45xp05wx - _rtP -> caerwfkxfe .
P_20 * gwnuww4u05_idx_1 ) - i5dtnopdzy * muDoubleScalarRem ( fy45xp05wx ,
_rtB -> caerwfkxfe [ 0 ] . ndjfk4qudy ) ; if ( ssIsSampleHit ( S , 1 , 0 ) )
{ _rtB -> caerwfkxfe [ 0 ] . dpjrmf0hjr = _rtP -> caerwfkxfe . P_25 ; }
i5dtnopdzy = muDoubleScalarRem ( ( ( _rtB -> caerwfkxfe [ 0 ] . jhj3xqdp44 [
0 ] * _rtB -> caerwfkxfe [ 0 ] . ajhmvy5vos + _rtB -> caerwfkxfe [ 0 ] .
jhj3xqdp44 [ 1 ] * _rtB -> caerwfkxfe [ 0 ] . ogviq23brw ) * _rtB ->
caerwfkxfe [ 0 ] . hlseod05s5 * _rtP -> caerwfkxfe . P_15 + _rtB ->
caerwfkxfe [ 0 ] . l0uywpcbts [ 1 ] ) + ( real_T ) ( i5dtnopdzy != 0.0 ) *
_rtP -> caerwfkxfe . P_24 , _rtB -> caerwfkxfe [ 0 ] . dpjrmf0hjr ) ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfe [ 0 ] . ea41bukumz = _rtP
-> caerwfkxfe . P_26 ; } gwnuww4u05_idx_1 = i5dtnopdzy / _rtB -> caerwfkxfe [
0 ] . ea41bukumz ; if ( gwnuww4u05_idx_1 < 0.0 ) { gwnuww4u05_idx_1 =
muDoubleScalarCeil ( gwnuww4u05_idx_1 ) ; } else { gwnuww4u05_idx_1 =
muDoubleScalarFloor ( gwnuww4u05_idx_1 ) ; } i5dtnopdzy -= _rtP -> caerwfkxfe
. P_27 * gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfe [ 0 ] . eofrflyzal = _rtP -> caerwfkxfe . P_28 ; } jz4qqgqklu =
_rtP -> caerwfkxfe . P_31 * _rtB -> caerwfkxfe [ 0 ] . bj13bsqkpx ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfe [ 0 ] . d0ys2rpaa3 = _rtP
-> caerwfkxfe . P_32 ; } _rtB -> caerwfkxfe [ 0 ] . mgrpru3rw4 = 0.0 ; _rtB
-> caerwfkxfe [ 0 ] . mgrpru3rw4 += _rtP -> caerwfkxfe . P_34 * _rtX ->
caerwfkxfe [ _rtDW -> bpzo543yxr ] . aknjejchsh ; ssCallAccelRunBlock ( S , 0
, 0 , SS_CALL_MDL_OUTPUTS ) ; if ( _rtB -> caerwfkxfe [ 0 ] . n3b4ri0hl1 >
_rtP -> caerwfkxfe . P_35 ) { _rtB -> caerwfkxfe [ 0 ] . n2lo13q3bt = _rtP ->
caerwfkxfe . P_35 ; } else if ( _rtB -> caerwfkxfe [ 0 ] . n3b4ri0hl1 < _rtP
-> caerwfkxfe . P_36 ) { _rtB -> caerwfkxfe [ 0 ] . n2lo13q3bt = _rtP ->
caerwfkxfe . P_36 ; } else { _rtB -> caerwfkxfe [ 0 ] . n2lo13q3bt = _rtB ->
caerwfkxfe [ 0 ] . n3b4ri0hl1 ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB
-> caerwfkxfe [ 0 ] . fni2ay52ur = _rtP -> caerwfkxfe . P_37 ; } _rtB ->
pymioqh1ea [ _rtDW -> bpzo543yxr * 6 ] = fy45xp05wx ; _rtB -> pymioqh1ea [ 1
+ _rtDW -> bpzo543yxr * 6 ] = i5dtnopdzy ; mcxhbnq5q4_idx_2 = - _rtB ->
caerwfkxfe [ 0 ] . jhj3xqdp44 [ 2 ] - _rtB -> caerwfkxfe [ 0 ] . eofrflyzal ;
if ( mcxhbnq5q4_idx_2 > _rtP -> caerwfkxfe . P_29 ) { _rtB -> pymioqh1ea [ 2
+ _rtDW -> bpzo543yxr * 6 ] = _rtP -> caerwfkxfe . P_29 ; } else if (
mcxhbnq5q4_idx_2 < _rtP -> caerwfkxfe . P_30 ) { _rtB -> pymioqh1ea [ 2 +
_rtDW -> bpzo543yxr * 6 ] = _rtP -> caerwfkxfe . P_30 ; } else { _rtB ->
pymioqh1ea [ 2 + _rtDW -> bpzo543yxr * 6 ] = mcxhbnq5q4_idx_2 ; } _rtB ->
pymioqh1ea [ 3 + _rtDW -> bpzo543yxr * 6 ] = jz4qqgqklu ; _rtB -> pymioqh1ea
[ 4 + _rtDW -> bpzo543yxr * 6 ] = _rtB -> caerwfkxfe [ 0 ] . d0ys2rpaa3 ;
_rtB -> pymioqh1ea [ 5 + _rtDW -> bpzo543yxr * 6 ] = _rtB -> caerwfkxfe [ 0 ]
. d0ys2rpaa3 ; _rtB -> a4jof1hftw [ _rtDW -> bpzo543yxr << 2 ] = _rtB ->
caerwfkxfe [ 0 ] . jhj3xqdp44 [ 0 ] ; _rtB -> a4jof1hftw [ 1 + ( _rtDW ->
bpzo543yxr << 2 ) ] = _rtB -> caerwfkxfe [ 0 ] . jhj3xqdp44 [ 1 ] ; _rtB ->
a4jof1hftw [ 2 + ( _rtDW -> bpzo543yxr << 2 ) ] = _rtB -> caerwfkxfe [ 0 ] .
jhj3xqdp44 [ 2 ] ; _rtB -> a4jof1hftw [ 3 + ( _rtDW -> bpzo543yxr << 2 ) ] =
j4aqh4ovvp ; ssCallAccelCopyCacheForIIS ( S , 5 , ( void * ) 0 ) ; _rtDW ->
bpzo543yxr ++ ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { ssCallAccelRunBlock (
S , 57 , 6 , SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 7 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 8 ,
SS_CALL_MDL_OUTPUTS ) ; _rtB -> kxask3c3iy [ 0 ] = _rtP -> P_2 [ 0 ] ; _rtB
-> kxask3c3iy [ 1 ] = _rtP -> P_2 [ 1 ] ; _rtB -> kxask3c3iy [ 2 ] = _rtP ->
P_2 [ 2 ] ; ssCallAccelRunBlock ( S , 8 , 0 , SS_CALL_MDL_OUTPUTS ) ; } _rtDW
-> poe1w2tyiw = 0 ; while ( _rtDW -> poe1w2tyiw < 2 ) {
ssCallAccelCopyCacheForIIS ( S , 56 , ( void * ) 1 ) ; for ( i = 0 ; i < 100
; i ++ ) { ljakha3p0t [ 3 * i ] = _rtB -> dm3jawt2bh [ 3 * i + 300 * _rtDW ->
poe1w2tyiw ] ; ljakha3p0t [ 1 + 3 * i ] = _rtB -> dm3jawt2bh [ ( 3 * i + 300
* _rtDW -> poe1w2tyiw ) + 1 ] ; ljakha3p0t [ 2 + 3 * i ] = _rtB -> dm3jawt2bh
[ ( 3 * i + 300 * _rtDW -> poe1w2tyiw ) + 2 ] ; } for ( i = 0 ; i < 100 ; i
++ ) { _rtB -> ouetaealzl [ i << 1 ] = _rtB -> fkiqa3jr4p [ ( i << 1 ) + 200
* _rtDW -> poe1w2tyiw ] ; _rtB -> ouetaealzl [ 1 + ( i << 1 ) ] = _rtB ->
fkiqa3jr4p [ ( ( i << 1 ) + 200 * _rtDW -> poe1w2tyiw ) + 1 ] ; } _rtB ->
i4cdhs10kk = _rtB -> grc3ce3t2d [ _rtDW -> poe1w2tyiw ] ; if ( ssIsSampleHit
( S , 1 , 0 ) ) { lrp1efvmp1 ( ljakha3p0t , & _rtB -> caerwfkxfedn [ 0 ] .
kaghf00me2 , & _rtDW -> caerwfkxfedn [ 0 ] . kaghf00me2 , ( kljb3jfx1k * ) &
_rtP -> caerwfkxfedn . kaghf00me2 ) ; } _rtB -> caerwfkxfedn [ 0 ] .
gfj4ecxnuw = ssGetT ( S ) ; ssCallAccelRunBlock ( S , 55 , 2 ,
SS_CALL_MDL_OUTPUTS ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfedn [ 0 ] . alncatz4jq = _rtP -> caerwfkxfedn . P_0 ; } { real_T * *
uBuffer = ( real_T * * ) & _rtDW -> caerwfkxfedn [ 0 ] . m3pamfoj4l .
TUbufferPtrs [ 0 ] ; real_T * * tBuffer = ( real_T * * ) & _rtDW ->
caerwfkxfedn [ 0 ] . m3pamfoj4l . TUbufferPtrs [ 4 ] ; real_T simTime =
ssGetT ( S ) ; real_T appliedDelay ; appliedDelay = _rtB -> caerwfkxfedn [ 0
] . alncatz4jq ; if ( appliedDelay > _rtP -> caerwfkxfedn . P_1 ) {
appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } if ( appliedDelay < 0.0 ) {
appliedDelay = 0.0 ; } msy4xojx4u [ 0 ] =
MultiVehicleModel_acc_rt_TDelayInterpolate ( simTime - appliedDelay , 0.0 , *
tBuffer , * uBuffer , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 0 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 0
] , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 0 ] , _rtDW ->
caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 0 ] , _rtP -> caerwfkxfedn . P_2 [ 0
] , 0 , ( boolean_T ) ( ssIsMinorTimeStep ( S ) && ( ssGetTimeOfLastOutput (
S ) == ssGetT ( S ) ) ) ) ; tBuffer ++ ; uBuffer ++ ; appliedDelay = _rtB ->
caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP -> caerwfkxfedn .
P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } if ( appliedDelay < 0.0
) { appliedDelay = 0.0 ; } msy4xojx4u [ 1 ] =
MultiVehicleModel_acc_rt_TDelayInterpolate ( simTime - appliedDelay , 0.0 , *
tBuffer , * uBuffer , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 1 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 1
] , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 1 ] , _rtDW ->
caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 1 ] , _rtP -> caerwfkxfedn . P_2 [ 1
] , 0 , ( boolean_T ) ( ssIsMinorTimeStep ( S ) && ( ssGetTimeOfLastOutput (
S ) == ssGetT ( S ) ) ) ) ; tBuffer ++ ; uBuffer ++ ; appliedDelay = _rtB ->
caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP -> caerwfkxfedn .
P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } if ( appliedDelay < 0.0
) { appliedDelay = 0.0 ; } msy4xojx4u [ 2 ] =
MultiVehicleModel_acc_rt_TDelayInterpolate ( simTime - appliedDelay , 0.0 , *
tBuffer , * uBuffer , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 2 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 2
] , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 2 ] , _rtDW ->
caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 2 ] , _rtP -> caerwfkxfedn . P_2 [ 2
] , 0 , ( boolean_T ) ( ssIsMinorTimeStep ( S ) && ( ssGetTimeOfLastOutput (
S ) == ssGetT ( S ) ) ) ) ; tBuffer ++ ; uBuffer ++ ; appliedDelay = _rtB ->
caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP -> caerwfkxfedn .
P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } if ( appliedDelay < 0.0
) { appliedDelay = 0.0 ; } msy4xojx4u [ 3 ] =
MultiVehicleModel_acc_rt_TDelayInterpolate ( simTime - appliedDelay , 0.0 , *
tBuffer , * uBuffer , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 3 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 3
] , _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 3 ] , _rtDW ->
caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 3 ] , _rtP -> caerwfkxfedn . P_2 [ 3
] , 0 , ( boolean_T ) ( ssIsMinorTimeStep ( S ) && ( ssGetTimeOfLastOutput (
S ) == ssGetT ( S ) ) ) ) ; } if ( msy4xojx4u [ 1 ] > _rtP -> caerwfkxfedn .
P_3 ) { _rtB -> caerwfkxfedn [ 0 ] . lhaxx34w2u = _rtP -> caerwfkxfedn . P_3
; } else if ( msy4xojx4u [ 1 ] < _rtP -> caerwfkxfedn . P_4 ) { _rtB ->
caerwfkxfedn [ 0 ] . lhaxx34w2u = _rtP -> caerwfkxfedn . P_4 ; } else { _rtB
-> caerwfkxfedn [ 0 ] . lhaxx34w2u = msy4xojx4u [ 1 ] ; } if ( msy4xojx4u [ 0
] > _rtP -> caerwfkxfedn . P_5 ) { _rtB -> caerwfkxfedn [ 0 ] . n2yhmwdnxy =
_rtP -> caerwfkxfedn . P_5 ; } else if ( msy4xojx4u [ 0 ] < _rtP ->
caerwfkxfedn . P_6 ) { _rtB -> caerwfkxfedn [ 0 ] . n2yhmwdnxy = _rtP ->
caerwfkxfedn . P_6 ; } else { _rtB -> caerwfkxfedn [ 0 ] . n2yhmwdnxy =
msy4xojx4u [ 0 ] ; } if ( msy4xojx4u [ 3 ] > _rtP -> caerwfkxfedn . P_7 ) {
_rtB -> caerwfkxfedn [ 0 ] . gw2c2lyxy5 = _rtP -> caerwfkxfedn . P_7 ; } else
if ( msy4xojx4u [ 3 ] < _rtP -> caerwfkxfedn . P_8 ) { _rtB -> caerwfkxfedn [
0 ] . gw2c2lyxy5 = _rtP -> caerwfkxfedn . P_8 ; } else { _rtB -> caerwfkxfedn
[ 0 ] . gw2c2lyxy5 = msy4xojx4u [ 3 ] ; } if ( msy4xojx4u [ 2 ] > _rtP ->
caerwfkxfedn . P_9 ) { _rtB -> caerwfkxfedn [ 0 ] . cwkmcmdzfo = _rtP ->
caerwfkxfedn . P_9 ; } else if ( msy4xojx4u [ 2 ] < _rtP -> caerwfkxfedn .
P_10 ) { _rtB -> caerwfkxfedn [ 0 ] . cwkmcmdzfo = _rtP -> caerwfkxfedn .
P_10 ; } else { _rtB -> caerwfkxfedn [ 0 ] . cwkmcmdzfo = msy4xojx4u [ 2 ] ;
} _rtB -> caerwfkxfedn [ 0 ] . he5eulzw1o = _rtP -> caerwfkxfedn . P_12 *
_rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . fqzeriji0s * _rtP ->
caerwfkxfedn . P_13 ; _rtB -> caerwfkxfedn [ 0 ] . mamxjb0wjs = _rtP ->
caerwfkxfedn . P_15 * _rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
an4vvbaly0 * _rtP -> caerwfkxfedn . P_16 ; ssCallAccelRunBlock ( S , 52 , 0 ,
SS_CALL_MDL_OUTPUTS ) ; _rtB -> caerwfkxfedn [ 0 ] . mbhzv5o4u4 = _rtP ->
caerwfkxfedn . P_18 * _rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
c1j0xx0tdy * _rtP -> caerwfkxfedn . P_25 ; _rtB -> caerwfkxfedn [ 0 ] .
onquqayms1 = _rtP -> caerwfkxfedn . P_22 * _rtX -> caerwfkxfedn [ _rtDW ->
poe1w2tyiw ] . ekznrhxfnh * _rtP -> caerwfkxfedn . P_26 ; _rtB ->
caerwfkxfedn [ 0 ] . ajggpqb1ch = _rtP -> caerwfkxfedn . P_20 * _rtX ->
caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . jbtfdrl5ag * _rtP -> caerwfkxfedn .
P_27 ; _rtB -> caerwfkxfedn [ 0 ] . p0ypdf02cf = _rtP -> caerwfkxfedn . P_24
* _rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . duh05ekusm * _rtP ->
caerwfkxfedn . P_28 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfedn [ 0 ] . et35mbqibq [ 0 ] = _rtP -> caerwfkxfedn . P_30 [ 0 ] ;
_rtB -> caerwfkxfedn [ 0 ] . et35mbqibq [ 1 ] = _rtP -> caerwfkxfedn . P_30 [
1 ] ; muDoubleScalarSinCos ( _rtP -> caerwfkxfedn . P_32 * _rtP ->
caerwfkxfedn . P_31 , & _rtB -> caerwfkxfedn [ 0 ] . jupmljx0oy , & _rtB ->
caerwfkxfedn [ 0 ] . ihos5w3vtq ) ; i5dtnopdzy = _rtP -> caerwfkxfedn . P_38
- _rtP -> caerwfkxfedn . P_37 ; fy45xp05wx = muDoubleScalarSqrt ( _rtP ->
caerwfkxfedn . P_36 - i5dtnopdzy * i5dtnopdzy ) ; gwnuww4u05_idx_1 = _rtP ->
caerwfkxfedn . P_40 * _rtP -> caerwfkxfedn . P_39 ; i5dtnopdzy =
muDoubleScalarSin ( gwnuww4u05_idx_1 ) ; i5dtnopdzy = _rtP -> caerwfkxfedn .
P_35 - fy45xp05wx * fy45xp05wx * i5dtnopdzy * i5dtnopdzy ; eog11ippyj = _rtP
-> caerwfkxfedn . P_34 / muDoubleScalarSqrt ( i5dtnopdzy ) ; _rtB ->
caerwfkxfedn [ 0 ] . cix2n5jj2k = muDoubleScalarAtan2 ( _rtP -> caerwfkxfedn
. P_33 , ( _rtP -> caerwfkxfedn . P_41 - fy45xp05wx * fy45xp05wx ) *
eog11ippyj / i5dtnopdzy ) ; _rtB -> caerwfkxfedn [ 0 ] . nifmytmpod =
muDoubleScalarAtan2 ( _rtP -> caerwfkxfedn . P_42 , eog11ippyj *
muDoubleScalarCos ( gwnuww4u05_idx_1 ) ) ; _rtB -> caerwfkxfedn [ 0 ] .
mjbagnzghx = _rtP -> caerwfkxfedn . P_44 ; } d52lfbl3ao = muDoubleScalarRem (
( _rtB -> caerwfkxfedn [ 0 ] . h144a2mn2d [ 0 ] * _rtB -> caerwfkxfedn [ 0 ]
. ihos5w3vtq - _rtB -> caerwfkxfedn [ 0 ] . h144a2mn2d [ 1 ] * _rtB ->
caerwfkxfedn [ 0 ] . jupmljx0oy ) * _rtB -> caerwfkxfedn [ 0 ] . cix2n5jj2k *
_rtP -> caerwfkxfedn . P_43 + _rtB -> caerwfkxfedn [ 0 ] . et35mbqibq [ 0 ] ,
_rtB -> caerwfkxfedn [ 0 ] . mjbagnzghx ) ; if ( ssIsSampleHit ( S , 1 , 0 )
) { _rtB -> caerwfkxfedn [ 0 ] . nmpy4whlf1 = _rtP -> caerwfkxfedn . P_45 ; }
gwnuww4u05_idx_1 = d52lfbl3ao / _rtB -> caerwfkxfedn [ 0 ] . nmpy4whlf1 ; if
( gwnuww4u05_idx_1 < 0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil (
gwnuww4u05_idx_1 ) ; } else { gwnuww4u05_idx_1 = muDoubleScalarFloor (
gwnuww4u05_idx_1 ) ; } d52lfbl3ao -= _rtP -> caerwfkxfedn . P_46 *
gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfedn
[ 0 ] . mwmwff5if0 = _rtP -> caerwfkxfedn . P_47 ; } hg4dcusulx = d52lfbl3ao
/ _rtB -> caerwfkxfedn [ 0 ] . mwmwff5if0 ; if ( hg4dcusulx < 0.0 ) {
gwnuww4u05_idx_1 = muDoubleScalarCeil ( hg4dcusulx ) ; } else {
gwnuww4u05_idx_1 = muDoubleScalarFloor ( hg4dcusulx ) ; } hg4dcusulx *= _rtP
-> caerwfkxfedn . P_49 ; hg4dcusulx *= hg4dcusulx ; hg4dcusulx =
muDoubleScalarSqrt ( hg4dcusulx ) ; if ( hg4dcusulx < 0.0 ) { hg4dcusulx =
muDoubleScalarCeil ( hg4dcusulx ) ; } else { hg4dcusulx = muDoubleScalarFloor
( hg4dcusulx ) ; } hg4dcusulx *= _rtP -> caerwfkxfedn . P_50 ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfedn [ 0 ] . pqokx4a2ep =
_rtP -> caerwfkxfedn . P_51 ; } d52lfbl3ao = ( d52lfbl3ao - _rtP ->
caerwfkxfedn . P_48 * gwnuww4u05_idx_1 ) - hg4dcusulx * muDoubleScalarRem (
d52lfbl3ao , _rtB -> caerwfkxfedn [ 0 ] . pqokx4a2ep ) ; if ( ssIsSampleHit (
S , 1 , 0 ) ) { _rtB -> caerwfkxfedn [ 0 ] . i4xxj33zfq = _rtP ->
caerwfkxfedn . P_53 ; } hg4dcusulx = muDoubleScalarRem ( ( ( _rtB ->
caerwfkxfedn [ 0 ] . h144a2mn2d [ 0 ] * _rtB -> caerwfkxfedn [ 0 ] .
jupmljx0oy + _rtB -> caerwfkxfedn [ 0 ] . h144a2mn2d [ 1 ] * _rtB ->
caerwfkxfedn [ 0 ] . ihos5w3vtq ) * _rtB -> caerwfkxfedn [ 0 ] . nifmytmpod *
_rtP -> caerwfkxfedn . P_43 + _rtB -> caerwfkxfedn [ 0 ] . et35mbqibq [ 1 ] )
+ ( real_T ) ( hg4dcusulx != 0.0 ) * _rtP -> caerwfkxfedn . P_52 , _rtB ->
caerwfkxfedn [ 0 ] . i4xxj33zfq ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB
-> caerwfkxfedn [ 0 ] . e2w10au1w2 = _rtP -> caerwfkxfedn . P_54 ; }
gwnuww4u05_idx_1 = hg4dcusulx / _rtB -> caerwfkxfedn [ 0 ] . e2w10au1w2 ; if
( gwnuww4u05_idx_1 < 0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil (
gwnuww4u05_idx_1 ) ; } else { gwnuww4u05_idx_1 = muDoubleScalarFloor (
gwnuww4u05_idx_1 ) ; } hg4dcusulx -= _rtP -> caerwfkxfedn . P_55 *
gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfedn
[ 0 ] . bdlsk4ikgk = _rtP -> caerwfkxfedn . P_56 ; } mcxhbnq5q4_idx_2 = - (
_rtP -> caerwfkxfedn . P_29 * _rtB -> caerwfkxfedn [ 0 ] . h144a2mn2d [ 2 ] )
- _rtB -> caerwfkxfedn [ 0 ] . bdlsk4ikgk ; pg4naehcgd = _rtP -> caerwfkxfedn
. P_59 * _rtB -> caerwfkxfedn [ 0 ] . ekdcexblas ; _rtB -> caerwfkxfedn [ 0 ]
. nymklsvb3d [ 0 ] = _rtB -> caerwfkxfedn [ 0 ] . klcmsej0on - _rtB ->
caerwfkxfedn [ 0 ] . h144a2mn2d [ 0 ] ; _rtB -> caerwfkxfedn [ 0 ] .
nymklsvb3d [ 1 ] = _rtB -> caerwfkxfedn [ 0 ] . iprabelc10 - _rtB ->
caerwfkxfedn [ 0 ] . h144a2mn2d [ 1 ] ; ssCallAccelRunBlock ( S , 49 , 0 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 48 , 0 ,
SS_CALL_MDL_OUTPUTS ) ; _rtB -> caerwfkxfedn [ 0 ] . bcbfy2i3tg = ( ( _rtB ->
caerwfkxfedn [ 0 ] . hykkdjfx5z - _rtB -> caerwfkxfedn [ 0 ] . h144a2mn2d [ 2
] ) - 0.0 ) * _rtP -> caerwfkxfedn . P_62 ; _rtB -> caerwfkxfedn [ 0 ] .
jrvxsg5s30 = ( _rtB -> caerwfkxfedn [ 0 ] . daysgkvjhq - _rtB -> caerwfkxfedn
[ 0 ] . pndf1mql5y ) * _rtP -> caerwfkxfedn . P_63 ; _rtB -> caerwfkxfedn [ 0
] . i4b0fffgqb [ 0 ] = _rtP -> caerwfkxfedn . P_64 * _rtB -> caerwfkxfedn [ 0
] . c0diqf41xf [ 0 ] ; _rtB -> caerwfkxfedn [ 0 ] . i4b0fffgqb [ 1 ] = _rtP
-> caerwfkxfedn . P_64 * _rtB -> caerwfkxfedn [ 0 ] . c0diqf41xf [ 1 ] ; _rtB
-> caerwfkxfedn [ 0 ] . cnhz12lf03 = _rtP -> caerwfkxfedn . P_65 * _rtB ->
caerwfkxfedn [ 0 ] . i4b0fffgqb [ 0 ] ; _rtB -> jpsbwe2egc [ _rtDW ->
poe1w2tyiw * 6 ] = d52lfbl3ao ; _rtB -> jpsbwe2egc [ 1 + _rtDW -> poe1w2tyiw
* 6 ] = hg4dcusulx ; if ( mcxhbnq5q4_idx_2 > _rtP -> caerwfkxfedn . P_57 ) {
_rtB -> jpsbwe2egc [ 2 + _rtDW -> poe1w2tyiw * 6 ] = _rtP -> caerwfkxfedn .
P_57 ; } else if ( mcxhbnq5q4_idx_2 < _rtP -> caerwfkxfedn . P_58 ) { _rtB ->
jpsbwe2egc [ 2 + _rtDW -> poe1w2tyiw * 6 ] = _rtP -> caerwfkxfedn . P_58 ; }
else { _rtB -> jpsbwe2egc [ 2 + _rtDW -> poe1w2tyiw * 6 ] = mcxhbnq5q4_idx_2
; } _rtB -> jpsbwe2egc [ 3 + _rtDW -> poe1w2tyiw * 6 ] = pg4naehcgd ; _rtB ->
jpsbwe2egc [ 4 + _rtDW -> poe1w2tyiw * 6 ] = _rtP -> caerwfkxfedn . P_60 *
_rtB -> caerwfkxfedn [ 0 ] . mbhzv5o4u4 ; _rtB -> jpsbwe2egc [ 5 + _rtDW ->
poe1w2tyiw * 6 ] = _rtP -> caerwfkxfedn . P_61 * _rtB -> caerwfkxfedn [ 0 ] .
ajggpqb1ch ; _rtB -> fv4oyrwsif [ _rtDW -> poe1w2tyiw * 3 ] = _rtB ->
caerwfkxfedn [ 0 ] . h144a2mn2d [ 0 ] ; _rtB -> fv4oyrwsif [ 1 + _rtDW ->
poe1w2tyiw * 3 ] = _rtB -> caerwfkxfedn [ 0 ] . h144a2mn2d [ 1 ] ; _rtB ->
fv4oyrwsif [ 2 + _rtDW -> poe1w2tyiw * 3 ] = _rtB -> caerwfkxfedn [ 0 ] .
h144a2mn2d [ 2 ] ; ssCallAccelCopyCacheForIIS ( S , 56 , ( void * ) 0 ) ;
_rtDW -> poe1w2tyiw ++ ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) {
ssCallAccelRunBlock ( S , 57 , 12 , SS_CALL_MDL_OUTPUTS ) ;
ssCallAccelRunBlock ( S , 57 , 13 , SS_CALL_MDL_OUTPUTS ) ;
ssCallAccelRunBlock ( S , 57 , 14 , SS_CALL_MDL_OUTPUTS ) ;
ssCallAccelRunBlock ( S , 57 , 15 , SS_CALL_MDL_OUTPUTS ) ;
ssCallAccelRunBlock ( S , 57 , 16 , SS_CALL_MDL_OUTPUTS ) ;
ssCallAccelRunBlock ( S , 57 , 17 , SS_CALL_MDL_OUTPUTS ) ;
ssCallAccelRunBlock ( S , 57 , 18 , SS_CALL_MDL_OUTPUTS ) ; _rtB ->
crlwh1we0j [ 0 ] = _rtP -> P_3 [ 0 ] ; _rtB -> crlwh1we0j [ 1 ] = _rtP -> P_3
[ 1 ] ; _rtB -> crlwh1we0j [ 2 ] = _rtP -> P_3 [ 2 ] ; ssCallAccelRunBlock (
S , 6 , 0 , SS_CALL_MDL_OUTPUTS ) ; _rtB -> eyhhjczxkk [ 0 ] = _rtP -> P_4 [
0 ] ; _rtB -> eyhhjczxkk [ 1 ] = _rtP -> P_4 [ 1 ] ; _rtB -> eyhhjczxkk [ 2 ]
= _rtP -> P_4 [ 2 ] ; _rtB -> eyhhjczxkk [ 3 ] = _rtP -> P_5 ; } _rtDW ->
fbn0fcdbpe = 0 ; while ( _rtDW -> fbn0fcdbpe < 1 ) {
ssCallAccelCopyCacheForIIS ( S , 47 , ( void * ) 1 ) ; _rtB -> o1jfak3lo1 [ 0
] = _rtB -> eyhhjczxkk [ 0 ] ; _rtB -> o1jfak3lo1 [ 1 ] = _rtB -> eyhhjczxkk
[ 1 ] ; _rtB -> o1jfak3lo1 [ 2 ] = _rtB -> eyhhjczxkk [ 2 ] ; _rtB ->
o1jfak3lo1 [ 3 ] = _rtB -> eyhhjczxkk [ 3 ] ; _rtB -> nik1o2xbkx = _rtB ->
meexz54w2k ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { k2pgjttwjz = _rtP ->
caerwfkxfed . P_109 * _rtDW -> caerwfkxfed [ 0 ] . ng1z2jrijs ; l4uine0f5r =
_rtDW -> caerwfkxfed [ 0 ] . nj0axyifa2 ; cnkhciwxyc = _rtP -> caerwfkxfed .
P_112 * _rtDW -> caerwfkxfed [ 0 ] . nj0axyifa2 ; _rtDW -> caerwfkxfed [ 0 ]
. bdrkmrjmcy = 0 ; while ( _rtDW -> caerwfkxfed [ 0 ] . bdrkmrjmcy < 100 ) {
pg4naehcgd = muDoubleScalarRem ( _rtB -> blfec1n33p [ 3 * _rtDW ->
caerwfkxfed [ 0 ] . bdrkmrjmcy ] , _rtP -> caerwfkxfed . caerwfkxfe . P_9 ) ;
gwnuww4u05_idx_1 = pg4naehcgd / _rtP -> caerwfkxfed . caerwfkxfe . P_10 ; if
( gwnuww4u05_idx_1 < 0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil (
gwnuww4u05_idx_1 ) ; } else { gwnuww4u05_idx_1 = muDoubleScalarFloor (
gwnuww4u05_idx_1 ) ; } pg4naehcgd -= _rtP -> caerwfkxfed . caerwfkxfe . P_11
* gwnuww4u05_idx_1 ; fy45xp05wx = pg4naehcgd / _rtP -> caerwfkxfed .
caerwfkxfe . P_12 ; if ( fy45xp05wx < 0.0 ) { gwnuww4u05_idx_1 =
muDoubleScalarCeil ( fy45xp05wx ) ; } else { gwnuww4u05_idx_1 =
muDoubleScalarFloor ( fy45xp05wx ) ; } fy45xp05wx *= _rtP -> caerwfkxfed .
caerwfkxfe . P_14 ; fy45xp05wx *= fy45xp05wx ; fy45xp05wx =
muDoubleScalarSqrt ( fy45xp05wx ) ; if ( fy45xp05wx < 0.0 ) { fy45xp05wx =
muDoubleScalarCeil ( fy45xp05wx ) ; } else { fy45xp05wx = muDoubleScalarFloor
( fy45xp05wx ) ; } fy45xp05wx *= _rtP -> caerwfkxfed . caerwfkxfe . P_15 ;
pg4naehcgd = ( pg4naehcgd - _rtP -> caerwfkxfed . caerwfkxfe . P_13 *
gwnuww4u05_idx_1 ) - fy45xp05wx * muDoubleScalarRem ( pg4naehcgd , _rtP ->
caerwfkxfed . caerwfkxfe . P_16 ) ; i5dtnopdzy = muDoubleScalarRem ( ( real_T
) ( fy45xp05wx != 0.0 ) * _rtP -> caerwfkxfed . caerwfkxfe . P_17 + _rtB ->
blfec1n33p [ 3 * _rtDW -> caerwfkxfed [ 0 ] . bdrkmrjmcy + 1 ] , _rtP ->
caerwfkxfed . caerwfkxfe . P_18 ) ; gwnuww4u05_idx_1 = i5dtnopdzy / _rtP ->
caerwfkxfed . caerwfkxfe . P_19 ; if ( gwnuww4u05_idx_1 < 0.0 ) {
gwnuww4u05_idx_1 = muDoubleScalarCeil ( gwnuww4u05_idx_1 ) ; } else {
gwnuww4u05_idx_1 = muDoubleScalarFloor ( gwnuww4u05_idx_1 ) ; } i5dtnopdzy -=
_rtP -> caerwfkxfed . caerwfkxfe . P_20 * gwnuww4u05_idx_1 ; mjmouk13zx_idx_0
= ( pg4naehcgd - _rtP -> caerwfkxfed . caerwfkxfe . P_8 [ 0 ] ) * _rtP ->
caerwfkxfed . caerwfkxfe . P_21 ; mjmouk13zx_idx_1 = ( i5dtnopdzy - _rtP ->
caerwfkxfed . caerwfkxfe . P_8 [ 1 ] ) * _rtP -> caerwfkxfed . caerwfkxfe .
P_21 ; fy45xp05wx = _rtP -> caerwfkxfed . caerwfkxfe . P_27 - _rtP ->
caerwfkxfed . caerwfkxfe . P_26 ; pl4jpj0hcq = muDoubleScalarSqrt ( _rtP ->
caerwfkxfed . caerwfkxfe . P_25 - fy45xp05wx * fy45xp05wx ) ; jz4qqgqklu =
_rtP -> caerwfkxfed . caerwfkxfe . P_29 * _rtP -> caerwfkxfed . caerwfkxfe .
P_28 ; fy45xp05wx = muDoubleScalarSin ( jz4qqgqklu ) ; fy45xp05wx = _rtP ->
caerwfkxfed . caerwfkxfe . P_24 - pl4jpj0hcq * pl4jpj0hcq * fy45xp05wx *
fy45xp05wx ; pg4naehcgd = _rtP -> caerwfkxfed . caerwfkxfe . P_23 /
muDoubleScalarSqrt ( fy45xp05wx ) ; fy45xp05wx = mjmouk13zx_idx_0 /
muDoubleScalarAtan2 ( _rtP -> caerwfkxfed . caerwfkxfe . P_22 , ( _rtP ->
caerwfkxfed . caerwfkxfe . P_30 - pl4jpj0hcq * pl4jpj0hcq ) * pg4naehcgd /
fy45xp05wx ) ; muDoubleScalarSinCos ( _rtP -> caerwfkxfed . caerwfkxfe . P_32
* _rtP -> caerwfkxfed . caerwfkxfe . P_31 , & pl4jpj0hcq , & i5dtnopdzy ) ;
jz4qqgqklu = 1.0 / muDoubleScalarAtan2 ( _rtP -> caerwfkxfed . caerwfkxfe .
P_33 , pg4naehcgd * muDoubleScalarCos ( jz4qqgqklu ) ) * mjmouk13zx_idx_1 ;
pg4naehcgd = fy45xp05wx * i5dtnopdzy + jz4qqgqklu * pl4jpj0hcq ; jz4qqgqklu =
jz4qqgqklu * i5dtnopdzy - fy45xp05wx * pl4jpj0hcq ; _rtB -> caerwfkxfed [ 0 ]
. a1vbgn3jqm [ 3 * _rtDW -> caerwfkxfed [ 0 ] . bdrkmrjmcy ] = pg4naehcgd ;
_rtB -> caerwfkxfed [ 0 ] . a1vbgn3jqm [ 1 + 3 * _rtDW -> caerwfkxfed [ 0 ] .
bdrkmrjmcy ] = jz4qqgqklu ; _rtB -> caerwfkxfed [ 0 ] . a1vbgn3jqm [ 2 + 3 *
_rtDW -> caerwfkxfed [ 0 ] . bdrkmrjmcy ] = ( ( rt_Lookup2D_Normal ( _rtP ->
caerwfkxfed . caerwfkxfe . P_3 , 181 , _rtP -> caerwfkxfed . caerwfkxfe . P_4
, 360 , _rtP -> caerwfkxfed . caerwfkxfe . P_5 , muDoubleScalarMod ( _rtB ->
blfec1n33p [ 3 * _rtDW -> caerwfkxfed [ 0 ] . bdrkmrjmcy ] + _rtP ->
caerwfkxfed . caerwfkxfe . P_0 , _rtP -> caerwfkxfed . caerwfkxfe . P_1 ) -
_rtP -> caerwfkxfed . caerwfkxfe . P_0 , muDoubleScalarMod ( _rtB ->
blfec1n33p [ 3 * _rtDW -> caerwfkxfed [ 0 ] . bdrkmrjmcy + 1 ] , _rtP ->
caerwfkxfed . caerwfkxfe . P_2 ) ) + _rtB -> blfec1n33p [ 3 * _rtDW ->
caerwfkxfed [ 0 ] . bdrkmrjmcy + 2 ] ) + _rtP -> caerwfkxfed . caerwfkxfe .
P_6 ) - _rtP -> caerwfkxfed . caerwfkxfe . P_7 ; _rtDW -> caerwfkxfed [ 0 ] .
bdrkmrjmcy ++ ; } _rtB -> caerwfkxfed [ 0 ] . isk4ovwjyy [ 0 ] = _rtP ->
caerwfkxfed . P_113 [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . isk4ovwjyy [ 1 ] =
_rtP -> caerwfkxfed . P_113 [ 1 ] ; } if ( _rtDW -> caerwfkxfed [ 0 ] .
fz52nilcra . IcNeedsLoading ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
n0vhadqx00 [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . isk4ovwjyy [ 0 ] ; ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . n0vhadqx00 [ 1 ] = _rtB ->
caerwfkxfed [ 0 ] . isk4ovwjyy [ 1 ] ; ( ( f1xhd02yjc * ) ssGetContStates ( S
) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe
] . n0vhadqx00 [ 2 ] = _rtB -> o1jfak3lo1 [ 3 ] ; } p3wzaspxbp [ 0 ] = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . n0vhadqx00 [ 0 ] ; p3wzaspxbp [ 1 ]
= ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2
* ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . n0vhadqx00 [ 1 ] ; p3wzaspxbp [
2 ] = ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . n0vhadqx00 [ 2 ] ; if
( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . lkf1zdstjv =
_rtP -> caerwfkxfed . P_114 ; } _rtB -> caerwfkxfed [ 0 ] . h5gaeqtcng =
muDoubleScalarMod ( p3wzaspxbp [ 2 ] , _rtB -> caerwfkxfed [ 0 ] . lkf1zdstjv
) ; _rtB -> caerwfkxfed [ 0 ] . c1ljjzcvru [ 0 ] = _rtX -> caerwfkxfed [
_rtDW -> fbn0fcdbpe ] . ihl3kytsj1 [ 0 ] + _rtB -> o1jfak3lo1 [ 0 ] ; _rtB ->
caerwfkxfed [ 0 ] . c1ljjzcvru [ 1 ] = _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . ihl3kytsj1 [ 1 ] + _rtB -> o1jfak3lo1 [ 1 ] ; _rtB ->
caerwfkxfed [ 0 ] . c1ljjzcvru [ 2 ] = _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . ihl3kytsj1 [ 2 ] + _rtB -> o1jfak3lo1 [ 2 ] ;
ssCallAccelRunBlock ( S , 42 , 0 , SS_CALL_MDL_OUTPUTS ) ; _rtB ->
caerwfkxfed [ 0 ] . e4nc4dmvws = _rtB -> caerwfkxfed [ 0 ] . cc0t2b2jp5 +
_rtB -> o1jfak3lo1 [ 2 ] ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { kq2lyhvs2k =
_rtB -> caerwfkxfed [ 0 ] . e4nc4dmvws - ( _rtP -> caerwfkxfed . P_116 *
_rtDW -> caerwfkxfed [ 0 ] . gtkkyzyaof - _rtP -> caerwfkxfed . P_119 ) ;
l4uine0f5r = _rtP -> caerwfkxfed . P_120 * kq2lyhvs2k + cnkhciwxyc ; memcpy (
& _rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 0 ] , & _rtDW -> caerwfkxfed [ 0 ]
. ecr3a224ty [ 0 ] , 19U * sizeof ( real_T ) ) ; if ( l4uine0f5r > _rtP ->
caerwfkxfed . P_121 ) { gwnuww4u05_idx_1 = _rtP -> caerwfkxfed . P_121 ; }
else if ( l4uine0f5r < _rtP -> caerwfkxfed . P_122 ) { gwnuww4u05_idx_1 =
_rtP -> caerwfkxfed . P_122 ; } else { gwnuww4u05_idx_1 = l4uine0f5r ; }
dclw24just = gwnuww4u05_idx_1 - ( _rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 1
] - _rtP -> caerwfkxfed . P_124 ) ; moyzuytyxz = ( _rtP -> caerwfkxfed .
P_125 * dclw24just + k2pgjttwjz ) - _rtP -> caerwfkxfed . P_126 * _rtB ->
caerwfkxfed [ 0 ] . ldtz5l21bv [ 4 ] ; p4gomrxwts = _rtP -> caerwfkxfed .
P_129 ; if ( moyzuytyxz > _rtP -> caerwfkxfed . P_127 ) { gwnuww4u05_idx_1 =
_rtP -> caerwfkxfed . P_127 ; } else if ( moyzuytyxz < _rtP -> caerwfkxfed .
P_128 ) { gwnuww4u05_idx_1 = _rtP -> caerwfkxfed . P_128 ; } else {
gwnuww4u05_idx_1 = moyzuytyxz ; } _rtB -> caerwfkxfed [ 0 ] . pidu5mopdu =
gwnuww4u05_idx_1 + _rtP -> caerwfkxfed . P_129 ; } if ( _rtDW -> caerwfkxfed
[ 0 ] . ippukhhcqi . IcNeedsLoading ) { ( ( f1xhd02yjc * ) ssGetContStates (
S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
fbn0fcdbpe ] . ckcker4qqi = _rtB -> caerwfkxfed [ 0 ] . pidu5mopdu ; } if ( (
( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . ckcker4qqi >= _rtP -> caerwfkxfed .
P_130 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ (
( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . ckcker4qqi != _rtP
-> caerwfkxfed . P_130 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
ckcker4qqi = _rtP -> caerwfkxfed . P_130 ; ssSetSolverNeedsReset ( S ) ; } }
else if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . ckcker4qqi <= _rtP ->
caerwfkxfed . P_131 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
ckcker4qqi != _rtP -> caerwfkxfed . P_131 ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . ckcker4qqi = _rtP -> caerwfkxfed . P_131 ;
ssSetSolverNeedsReset ( S ) ; } } cer2wchkb3 = ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . ckcker4qqi ; ezloddc3bo = ( _rtB -> caerwfkxfed [ 0 ]
. pidu5mopdu - cer2wchkb3 ) * _rtP -> caerwfkxfed . P_132 ; if ( ezloddc3bo >
_rtP -> caerwfkxfed . P_133 ) { _rtB -> caerwfkxfed [ 0 ] . lf33jo1eey = _rtP
-> caerwfkxfed . P_133 ; } else if ( ezloddc3bo < _rtP -> caerwfkxfed . P_134
) { _rtB -> caerwfkxfed [ 0 ] . lf33jo1eey = _rtP -> caerwfkxfed . P_134 ; }
else { _rtB -> caerwfkxfed [ 0 ] . lf33jo1eey = ezloddc3bo ; } if (
ssIsSampleHit ( S , 1 , 0 ) ) { p4gomrxwts = _rtDW -> caerwfkxfed [ 0 ] .
pdjtn40ptq ; glbkg2z2pc = _rtP -> caerwfkxfed . P_137 * _rtDW -> caerwfkxfed
[ 0 ] . pdjtn40ptq ; } _rtB -> caerwfkxfed [ 0 ] . irikytf0pe = _rtB ->
caerwfkxfed [ 0 ] . cwdm51wlya - _rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 2 ]
; ssCallAccelRunBlock ( S , 45 , 0 , SS_CALL_MDL_OUTPUTS ) ; ezloddc3bo =
_rtP -> caerwfkxfed . P_138 * _rtB -> caerwfkxfed [ 0 ] . ppxa1m2xzw ; if (
ezloddc3bo > _rtP -> caerwfkxfed . P_139 ) { _rtB -> caerwfkxfed [ 0 ] .
lr5i1dbr3u = _rtP -> caerwfkxfed . P_139 ; } else if ( ezloddc3bo < _rtP ->
caerwfkxfed . P_140 ) { _rtB -> caerwfkxfed [ 0 ] . lr5i1dbr3u = _rtP ->
caerwfkxfed . P_140 ; } else { _rtB -> caerwfkxfed [ 0 ] . lr5i1dbr3u =
ezloddc3bo ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { p4gomrxwts = _rtB ->
caerwfkxfed [ 0 ] . lr5i1dbr3u - ( _rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 0
] - _rtP -> caerwfkxfed . P_141 ) ; j4y5quitjt = ( _rtP -> caerwfkxfed .
P_142 * p4gomrxwts + glbkg2z2pc ) - _rtP -> caerwfkxfed . P_143 * _rtB ->
caerwfkxfed [ 0 ] . ldtz5l21bv [ 3 ] ; if ( j4y5quitjt > _rtP -> caerwfkxfed
. P_144 ) { i5s0bgfbyv = _rtP -> caerwfkxfed . P_144 ; } else if ( j4y5quitjt
< _rtP -> caerwfkxfed . P_145 ) { i5s0bgfbyv = _rtP -> caerwfkxfed . P_145 ;
} else { i5s0bgfbyv = j4y5quitjt ; } dji2o12wzn = _rtP -> caerwfkxfed . P_147
; _rtB -> caerwfkxfed [ 0 ] . jxhl3ahhhy = _rtP -> caerwfkxfed . P_146 *
i5s0bgfbyv + _rtP -> caerwfkxfed . P_147 ; } if ( _rtDW -> caerwfkxfed [ 0 ]
. mdtrpadce1 . IcNeedsLoading ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) )
-> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
jl2gr241to = _rtB -> caerwfkxfed [ 0 ] . jxhl3ahhhy ; } if ( ( ( f1xhd02yjc *
) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork
( S ) ) -> fbn0fcdbpe ] . jl2gr241to >= _rtP -> caerwfkxfed . P_148 ) { if (
( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 *
) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to != _rtP -> caerwfkxfed
. P_148 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to = _rtP ->
caerwfkxfed . P_148 ; ssSetSolverNeedsReset ( S ) ; } } else if ( ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to <= _rtP -> caerwfkxfed .
P_149 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ (
( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to != _rtP
-> caerwfkxfed . P_149 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
jl2gr241to = _rtP -> caerwfkxfed . P_149 ; ssSetSolverNeedsReset ( S ) ; } }
ezloddc3bo = ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to ;
f03gfuzt3a = ( _rtB -> caerwfkxfed [ 0 ] . jxhl3ahhhy - ezloddc3bo ) * _rtP
-> caerwfkxfed . P_150 ; if ( f03gfuzt3a > _rtP -> caerwfkxfed . P_151 ) {
_rtB -> caerwfkxfed [ 0 ] . mzqc2pyano = _rtP -> caerwfkxfed . P_151 ; } else
if ( f03gfuzt3a < _rtP -> caerwfkxfed . P_152 ) { _rtB -> caerwfkxfed [ 0 ] .
mzqc2pyano = _rtP -> caerwfkxfed . P_152 ; } else { _rtB -> caerwfkxfed [ 0 ]
. mzqc2pyano = f03gfuzt3a ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { dji2o12wzn
= _rtP -> caerwfkxfed . P_153 ; _rtB -> caerwfkxfed [ 0 ] . dx0xnxsskx = _rtP
-> caerwfkxfed . P_153 + _rtP -> caerwfkxfed . P_154 ; } if ( _rtDW ->
caerwfkxfed [ 0 ] . ezyys0x2oe . IcNeedsLoading ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . bz1moouyu2 = _rtB -> caerwfkxfed [ 0 ] . dx0xnxsskx ;
} if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . bz1moouyu2 >= _rtP ->
caerwfkxfed . P_155 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
bz1moouyu2 != _rtP -> caerwfkxfed . P_155 ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . bz1moouyu2 = _rtP -> caerwfkxfed . P_155 ;
ssSetSolverNeedsReset ( S ) ; } } else if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . bz1moouyu2 <= _rtP -> caerwfkxfed . P_156 ) { if ( (
( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . bz1moouyu2 != _rtP -> caerwfkxfed .
P_156 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . bz1moouyu2 = _rtP ->
caerwfkxfed . P_156 ; ssSetSolverNeedsReset ( S ) ; } } f03gfuzt3a = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . bz1moouyu2 ; d4ajp443jd = ( _rtB ->
caerwfkxfed [ 0 ] . dx0xnxsskx - f03gfuzt3a ) * _rtP -> caerwfkxfed . P_157 ;
if ( d4ajp443jd > _rtP -> caerwfkxfed . P_158 ) { _rtB -> caerwfkxfed [ 0 ] .
eeaqjfivi2 = _rtP -> caerwfkxfed . P_158 ; } else if ( d4ajp443jd < _rtP ->
caerwfkxfed . P_159 ) { _rtB -> caerwfkxfed [ 0 ] . eeaqjfivi2 = _rtP ->
caerwfkxfed . P_159 ; } else { _rtB -> caerwfkxfed [ 0 ] . eeaqjfivi2 =
d4ajp443jd ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ]
. bgznp4l5rd = i5s0bgfbyv + _rtP -> caerwfkxfed . P_160 ; } if ( _rtDW ->
caerwfkxfed [ 0 ] . o5qsrxtfr0 . IcNeedsLoading ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . he501jqmwr = _rtB -> caerwfkxfed [ 0 ] . bgznp4l5rd ;
} if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . he501jqmwr >= _rtP ->
caerwfkxfed . P_161 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
he501jqmwr != _rtP -> caerwfkxfed . P_161 ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . he501jqmwr = _rtP -> caerwfkxfed . P_161 ;
ssSetSolverNeedsReset ( S ) ; } } else if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . he501jqmwr <= _rtP -> caerwfkxfed . P_162 ) { if ( (
( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . he501jqmwr != _rtP -> caerwfkxfed .
P_162 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . he501jqmwr = _rtP ->
caerwfkxfed . P_162 ; ssSetSolverNeedsReset ( S ) ; } } d4ajp443jd = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . he501jqmwr ; egqvaqn2aq = ( _rtB ->
caerwfkxfed [ 0 ] . bgznp4l5rd - d4ajp443jd ) * _rtP -> caerwfkxfed . P_163 ;
if ( egqvaqn2aq > _rtP -> caerwfkxfed . P_164 ) { _rtB -> caerwfkxfed [ 0 ] .
mxwdorti1i = _rtP -> caerwfkxfed . P_164 ; } else if ( egqvaqn2aq < _rtP ->
caerwfkxfed . P_165 ) { _rtB -> caerwfkxfed [ 0 ] . mxwdorti1i = _rtP ->
caerwfkxfed . P_165 ; } else { _rtB -> caerwfkxfed [ 0 ] . mxwdorti1i =
egqvaqn2aq ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ]
. jd31lfyhqv = dji2o12wzn + _rtP -> caerwfkxfed . P_166 ; } if ( _rtDW ->
caerwfkxfed [ 0 ] . buaseqaif4 . IcNeedsLoading ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . fhxf25u0ju = _rtB -> caerwfkxfed [ 0 ] . jd31lfyhqv ;
} if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . fhxf25u0ju >= _rtP ->
caerwfkxfed . P_167 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
fhxf25u0ju != _rtP -> caerwfkxfed . P_167 ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . fhxf25u0ju = _rtP -> caerwfkxfed . P_167 ;
ssSetSolverNeedsReset ( S ) ; } } else if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . fhxf25u0ju <= _rtP -> caerwfkxfed . P_168 ) { if ( (
( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . fhxf25u0ju != _rtP -> caerwfkxfed .
P_168 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . fhxf25u0ju = _rtP ->
caerwfkxfed . P_168 ; ssSetSolverNeedsReset ( S ) ; } } egqvaqn2aq = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . fhxf25u0ju ; iuixc4td42 = ( _rtB ->
caerwfkxfed [ 0 ] . jd31lfyhqv - egqvaqn2aq ) * _rtP -> caerwfkxfed . P_169 ;
if ( iuixc4td42 > _rtP -> caerwfkxfed . P_170 ) { _rtB -> caerwfkxfed [ 0 ] .
fsyxgxizlr = _rtP -> caerwfkxfed . P_170 ; } else if ( iuixc4td42 < _rtP ->
caerwfkxfed . P_171 ) { _rtB -> caerwfkxfed [ 0 ] . fsyxgxizlr = _rtP ->
caerwfkxfed . P_171 ; } else { _rtB -> caerwfkxfed [ 0 ] . fsyxgxizlr =
iuixc4td42 ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0
] . fy2knprxfh = ( _rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 5 ] - _rtP ->
caerwfkxfed . P_173 [ 1 ] * _rtDW -> caerwfkxfed [ 0 ] . iuvpzqdghs ) / _rtP
-> caerwfkxfed . P_173 [ 0 ] ; dji2o12wzn = _rtP -> caerwfkxfed . P_175 ;
_rtB -> caerwfkxfed [ 0 ] . ccg4aidq12 = ( _rtP -> caerwfkxfed . P_172 [ 0 ]
* _rtDW -> caerwfkxfed [ 0 ] . fy2knprxfh + _rtP -> caerwfkxfed . P_172 [ 1 ]
* _rtDW -> caerwfkxfed [ 0 ] . iuvpzqdghs ) + _rtP -> caerwfkxfed . P_175 ; }
if ( _rtDW -> caerwfkxfed [ 0 ] . mfyayib1vs . IcNeedsLoading ) { ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w = _rtB -> caerwfkxfed [ 0
] . ccg4aidq12 ; } if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
oi11ijmh5w >= _rtP -> caerwfkxfed . P_176 ) { if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . oi11ijmh5w != _rtP -> caerwfkxfed . P_176 ) { ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w = _rtP -> caerwfkxfed .
P_176 ; ssSetSolverNeedsReset ( S ) ; } } else if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . oi11ijmh5w <= _rtP -> caerwfkxfed . P_177 ) { if ( (
( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w != _rtP -> caerwfkxfed .
P_177 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w = _rtP ->
caerwfkxfed . P_177 ; ssSetSolverNeedsReset ( S ) ; } } iuixc4td42 = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w ; mcxhbnq5q4_idx_2 = (
_rtB -> caerwfkxfed [ 0 ] . ccg4aidq12 - iuixc4td42 ) * _rtP -> caerwfkxfed .
P_178 ; if ( mcxhbnq5q4_idx_2 > _rtP -> caerwfkxfed . P_179 ) { _rtB ->
caerwfkxfed [ 0 ] . pnwyjyh04z = _rtP -> caerwfkxfed . P_179 ; } else if (
mcxhbnq5q4_idx_2 < _rtP -> caerwfkxfed . P_180 ) { _rtB -> caerwfkxfed [ 0 ]
. pnwyjyh04z = _rtP -> caerwfkxfed . P_180 ; } else { _rtB -> caerwfkxfed [ 0
] . pnwyjyh04z = mcxhbnq5q4_idx_2 ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) {
j4aqh4ovvp = _rtP -> caerwfkxfed . P_184 - ( _rtP -> caerwfkxfed . P_185 *
_rtDW -> caerwfkxfed [ 0 ] . kvy3yj5nb3 - _rtP -> caerwfkxfed . P_188 ) ;
dji2o12wzn = _rtP -> caerwfkxfed . P_183 * _rtDW -> caerwfkxfed [ 0 ] .
itm1fber1d + _rtP -> caerwfkxfed . P_189 * j4aqh4ovvp ; if ( dji2o12wzn >
_rtP -> caerwfkxfed . P_190 ) { gwnuww4u05_idx_1 = _rtP -> caerwfkxfed .
P_190 ; } else if ( dji2o12wzn < _rtP -> caerwfkxfed . P_191 ) {
gwnuww4u05_idx_1 = _rtP -> caerwfkxfed . P_191 ; } else { gwnuww4u05_idx_1 =
dji2o12wzn ; } pydf4ae103 = gwnuww4u05_idx_1 + _rtP -> caerwfkxfed . P_192 ;
if ( pydf4ae103 > _rtP -> caerwfkxfed . P_193 ) { pydf4ae103 = _rtP ->
caerwfkxfed . P_193 ; } else { if ( pydf4ae103 < _rtP -> caerwfkxfed . P_194
) { pydf4ae103 = _rtP -> caerwfkxfed . P_194 ; } } lwtpwyeioi = ( (
l4uine0f5r >= _rtP -> caerwfkxfed . P_200 ) && ( kq2lyhvs2k < kesz3x3i1i ( S
) -> caerwfkxfed . chk2o0agwv ) ) ; lwz1urnuzn = ( ( l4uine0f5r >= _rtP ->
caerwfkxfed . P_202 ) && ( kq2lyhvs2k > kesz3x3i1i ( S ) -> caerwfkxfed .
oowhapdzdr ) ) ; e34g13vyp1 = ( ( l4uine0f5r <= _rtP -> caerwfkxfed . P_199 )
&& ( kq2lyhvs2k > kesz3x3i1i ( S ) -> caerwfkxfed . e1sks34zzi ) ) ;
ggd4siidnl = ( ( l4uine0f5r <= _rtP -> caerwfkxfed . P_204 ) && ( kq2lyhvs2k
< kesz3x3i1i ( S ) -> caerwfkxfed . nz0a0fbmio ) ) ; if ( _rtP -> caerwfkxfed
. P_201 != 0.0 ) { tmp_g = lwtpwyeioi ; } else { tmp_g = lwz1urnuzn ; } if (
_rtP -> caerwfkxfed . P_203 != 0.0 ) { tmp_j = e34g13vyp1 ; } else { tmp_j =
ggd4siidnl ; } if ( ! ( _rtP -> caerwfkxfed . P_205 != 0.0 ) ) { lwz1urnuzn =
lwtpwyeioi ; } if ( ! ( _rtP -> caerwfkxfed . P_206 != 0.0 ) ) { ggd4siidnl =
e34g13vyp1 ; } _rtB -> caerwfkxfed [ 0 ] . mc3sfrfenr = ( real_T ) ( ( ( _rtP
-> caerwfkxfed . P_199 <= l4uine0f5r ) && ( l4uine0f5r <= _rtP -> caerwfkxfed
. P_200 ) ) || ( tmp_g || tmp_j ) || ( lwz1urnuzn && ggd4siidnl ) ) *
kq2lyhvs2k ; e34g13vyp1 = ( ( dji2o12wzn >= _rtP -> caerwfkxfed . P_212 ) &&
( j4aqh4ovvp < kesz3x3i1i ( S ) -> caerwfkxfed . ic0com5f0t ) ) ; i5s0bgfbyv
= _rtP -> caerwfkxfed . P_214 ; ggd4siidnl = ( ( dji2o12wzn >= _rtP ->
caerwfkxfed . P_214 ) && ( j4aqh4ovvp > kesz3x3i1i ( S ) -> caerwfkxfed .
alvuqr5y0v ) ) ; lwtpwyeioi = ( ( dji2o12wzn <= _rtP -> caerwfkxfed . P_211 )
&& ( j4aqh4ovvp > kesz3x3i1i ( S ) -> caerwfkxfed . pe5jqlpt3u ) ) ;
lwz1urnuzn = ( ( dji2o12wzn <= _rtP -> caerwfkxfed . P_216 ) && ( j4aqh4ovvp
< kesz3x3i1i ( S ) -> caerwfkxfed . fz5qvv5q4c ) ) ; if ( _rtP -> caerwfkxfed
. P_213 != 0.0 ) { tmp_g = e34g13vyp1 ; } else { tmp_g = ggd4siidnl ; } if (
_rtP -> caerwfkxfed . P_215 != 0.0 ) { tmp_j = lwtpwyeioi ; } else { tmp_j =
lwz1urnuzn ; } if ( ! ( _rtP -> caerwfkxfed . P_217 != 0.0 ) ) { ggd4siidnl =
e34g13vyp1 ; } if ( ! ( _rtP -> caerwfkxfed . P_218 != 0.0 ) ) { lwz1urnuzn =
lwtpwyeioi ; } _rtB -> caerwfkxfed [ 0 ] . iq4tus41ez = ( real_T ) ( ( ( _rtP
-> caerwfkxfed . P_211 <= dji2o12wzn ) && ( dji2o12wzn <= _rtP -> caerwfkxfed
. P_212 ) ) || ( tmp_g || tmp_j ) || ( ggd4siidnl && lwz1urnuzn ) ) *
j4aqh4ovvp ; e34g13vyp1 = ( ( moyzuytyxz >= _rtP -> caerwfkxfed . P_224 ) &&
( dclw24just < kesz3x3i1i ( S ) -> caerwfkxfed . gybyxqnbcw ) ) ; ggd4siidnl
= ( ( moyzuytyxz >= _rtP -> caerwfkxfed . P_226 ) && ( dclw24just >
kesz3x3i1i ( S ) -> caerwfkxfed . mtn2ks0eti ) ) ; lwtpwyeioi = ( (
moyzuytyxz <= _rtP -> caerwfkxfed . P_223 ) && ( dclw24just > kesz3x3i1i ( S
) -> caerwfkxfed . lzf5331rmm ) ) ; lwz1urnuzn = ( ( moyzuytyxz <= _rtP ->
caerwfkxfed . P_228 ) && ( dclw24just < kesz3x3i1i ( S ) -> caerwfkxfed .
mvg3tdppg1 ) ) ; if ( _rtP -> caerwfkxfed . P_225 != 0.0 ) { tmp_g =
e34g13vyp1 ; } else { tmp_g = ggd4siidnl ; } if ( _rtP -> caerwfkxfed . P_227
!= 0.0 ) { tmp_j = lwtpwyeioi ; } else { tmp_j = lwz1urnuzn ; } if ( ! ( _rtP
-> caerwfkxfed . P_229 != 0.0 ) ) { ggd4siidnl = e34g13vyp1 ; } if ( ! ( _rtP
-> caerwfkxfed . P_230 != 0.0 ) ) { lwz1urnuzn = lwtpwyeioi ; } _rtB ->
caerwfkxfed [ 0 ] . c4m3fnbvli = ( real_T ) ( ( ( _rtP -> caerwfkxfed . P_223
<= moyzuytyxz ) && ( moyzuytyxz <= _rtP -> caerwfkxfed . P_224 ) ) || ( tmp_g
|| tmp_j ) || ( ggd4siidnl && lwz1urnuzn ) ) * dclw24just ; e34g13vyp1 = ( (
j4y5quitjt >= _rtP -> caerwfkxfed . P_236 ) && ( p4gomrxwts < kesz3x3i1i ( S
) -> caerwfkxfed . ig232hp5bk ) ) ; ggd4siidnl = ( ( j4y5quitjt >= _rtP ->
caerwfkxfed . P_238 ) && ( p4gomrxwts > kesz3x3i1i ( S ) -> caerwfkxfed .
jxsecz4tme ) ) ; lwtpwyeioi = ( ( j4y5quitjt <= _rtP -> caerwfkxfed . P_235 )
&& ( p4gomrxwts > kesz3x3i1i ( S ) -> caerwfkxfed . ol345ukm4z ) ) ;
cqc1jds2od = _rtP -> caerwfkxfed . P_240 ; lwz1urnuzn = ( ( j4y5quitjt <=
_rtP -> caerwfkxfed . P_240 ) && ( p4gomrxwts < kesz3x3i1i ( S ) ->
caerwfkxfed . pyv1kc11ph ) ) ; if ( _rtP -> caerwfkxfed . P_237 != 0.0 ) {
tmp_g = e34g13vyp1 ; } else { tmp_g = ggd4siidnl ; } if ( _rtP -> caerwfkxfed
. P_239 != 0.0 ) { tmp_j = lwtpwyeioi ; } else { tmp_j = lwz1urnuzn ; } if (
! ( _rtP -> caerwfkxfed . P_241 != 0.0 ) ) { ggd4siidnl = e34g13vyp1 ; }
ht1jy4ffdq = _rtP -> caerwfkxfed . P_242 ; if ( ! ( _rtP -> caerwfkxfed .
P_242 != 0.0 ) ) { lwz1urnuzn = lwtpwyeioi ; } _rtB -> caerwfkxfed [ 0 ] .
ndsw5rbzw5 = ( real_T ) ( ( ( _rtP -> caerwfkxfed . P_235 <= j4y5quitjt ) &&
( j4y5quitjt <= _rtP -> caerwfkxfed . P_236 ) ) || ( tmp_g || tmp_j ) || (
ggd4siidnl && lwz1urnuzn ) ) * p4gomrxwts ; _rtB -> caerwfkxfed [ 0 ] .
copotoe1jl = _rtP -> caerwfkxfed . P_243 ; _rtB -> caerwfkxfed [ 0 ] .
h3cqvgbc03 = _rtP -> caerwfkxfed . P_244 ; } _rtB -> caerwfkxfed [ 0 ] .
gqlwzuylsk = muDoubleScalarMod ( p3wzaspxbp [ 0 ] + _rtB -> caerwfkxfed [ 0 ]
. copotoe1jl , _rtB -> caerwfkxfed [ 0 ] . h3cqvgbc03 ) - _rtB -> caerwfkxfed
[ 0 ] . copotoe1jl ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed
[ 0 ] . eiwbi0wgye = _rtP -> caerwfkxfed . P_245 ; _rtB -> caerwfkxfed [ 0 ]
. lii31b2nfv = _rtP -> caerwfkxfed . P_246 ; } _rtB -> caerwfkxfed [ 0 ] .
efpl3xsr4s = muDoubleScalarMod ( p3wzaspxbp [ 1 ] + _rtB -> caerwfkxfed [ 0 ]
. eiwbi0wgye , _rtB -> caerwfkxfed [ 0 ] . lii31b2nfv ) - _rtB -> caerwfkxfed
[ 0 ] . eiwbi0wgye ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW
-> caerwfkxfed [ 0 ] . jwmgh2kg2m ; _rtB -> caerwfkxfed [ 0 ] . pxkeb003ga =
_rtP -> caerwfkxfed . P_250 * _rtDW -> caerwfkxfed [ 0 ] . jwmgh2kg2m ; _rtB
-> caerwfkxfed [ 0 ] . farhzjgcnl = _rtP -> caerwfkxfed . P_251 ; _rtB ->
caerwfkxfed [ 0 ] . h0u1b2ktlh [ 0 ] = _rtDW -> caerwfkxfed [ 0 ] .
fhehrp2bxm [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . h0u1b2ktlh [ 1 ] = _rtDW ->
caerwfkxfed [ 0 ] . fhehrp2bxm [ 1 ] ; _rtB -> caerwfkxfed [ 0 ] . h0u1b2ktlh
[ 2 ] = _rtDW -> caerwfkxfed [ 0 ] . fhehrp2bxm [ 2 ] ; } brnqslniho_idx_0 =
_rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 0 ] + _rtB ->
caerwfkxfed [ 0 ] . h0u1b2ktlh [ 0 ] ; brnqslniho_idx_1 = _rtX -> caerwfkxfed
[ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] + _rtB -> caerwfkxfed [ 0 ] .
h0u1b2ktlh [ 1 ] ; brnqslniho_idx_2 = _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . d44k1xtr5y [ 2 ] + _rtB -> caerwfkxfed [ 0 ] . h0u1b2ktlh [ 2
] ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] .
nebwhznavk = _rtP -> caerwfkxfed . P_255 ; } if ( _rtB -> caerwfkxfed [ 0 ] .
nebwhznavk >= _rtP -> caerwfkxfed . P_256 ) { _rtB -> caerwfkxfed [ 0 ] .
oepibhm15s = ( _rtB -> caerwfkxfed [ 0 ] . pxkeb003ga + _rtB -> caerwfkxfed [
0 ] . farhzjgcnl ) + _rtP -> caerwfkxfed . P_254 * brnqslniho_idx_0 ; } else
{ _rtB -> caerwfkxfed [ 0 ] . oepibhm15s = brnqslniho_idx_0 ; } if (
ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] .
kcxjckmad1 ; _rtB -> caerwfkxfed [ 0 ] . mfnsehx05j = _rtP -> caerwfkxfed .
P_260 * _rtDW -> caerwfkxfed [ 0 ] . kcxjckmad1 ; _rtB -> caerwfkxfed [ 0 ] .
jpzbbqynwn = _rtP -> caerwfkxfed . P_261 ; _rtB -> caerwfkxfed [ 0 ] .
dieoikdgdi = _rtP -> caerwfkxfed . P_263 ; } if ( _rtB -> caerwfkxfed [ 0 ] .
dieoikdgdi >= _rtP -> caerwfkxfed . P_264 ) { _rtB -> caerwfkxfed [ 0 ] .
odhyzmaqlj = ( _rtB -> caerwfkxfed [ 0 ] . mfnsehx05j + _rtB -> caerwfkxfed [
0 ] . jpzbbqynwn ) + _rtP -> caerwfkxfed . P_262 * brnqslniho_idx_1 ; } else
{ _rtB -> caerwfkxfed [ 0 ] . odhyzmaqlj = brnqslniho_idx_1 ; } if (
ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] .
ecmyxunq25 ; _rtB -> caerwfkxfed [ 0 ] . fhmo3nvrto = _rtP -> caerwfkxfed .
P_268 * _rtDW -> caerwfkxfed [ 0 ] . ecmyxunq25 ; _rtB -> caerwfkxfed [ 0 ] .
hazuwcrlz0 = _rtP -> caerwfkxfed . P_269 ; _rtB -> caerwfkxfed [ 0 ] .
haudtmnjqk = _rtP -> caerwfkxfed . P_271 ; } if ( _rtB -> caerwfkxfed [ 0 ] .
haudtmnjqk >= _rtP -> caerwfkxfed . P_272 ) { _rtB -> caerwfkxfed [ 0 ] .
e5dh2fbj00 = ( _rtB -> caerwfkxfed [ 0 ] . fhmo3nvrto + _rtB -> caerwfkxfed [
0 ] . hazuwcrlz0 ) + _rtP -> caerwfkxfed . P_270 * brnqslniho_idx_2 ; } else
{ _rtB -> caerwfkxfed [ 0 ] . e5dh2fbj00 = brnqslniho_idx_2 ; } if (
ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] .
o1dm2gnr44 ; _rtB -> caerwfkxfed [ 0 ] . jqgsix4xns = _rtP -> caerwfkxfed .
P_276 * _rtDW -> caerwfkxfed [ 0 ] . o1dm2gnr44 ; _rtB -> caerwfkxfed [ 0 ] .
oj00fojr2r = _rtP -> caerwfkxfed . P_277 ; } pj5dx0krjn [ 0 ] = _rtP ->
caerwfkxfed . P_279 * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
jo1on23gqr [ 0 ] ; pj5dx0krjn [ 1 ] = _rtP -> caerwfkxfed . P_279 * _rtX ->
caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . jo1on23gqr [ 1 ] ; pj5dx0krjn [ 2 ] =
_rtP -> caerwfkxfed . P_279 * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
jo1on23gqr [ 2 ] ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [
0 ] . eqb205d5j3 [ 0 ] = _rtDW -> caerwfkxfed [ 0 ] . mbdfohgcix [ 0 ] ; _rtB
-> caerwfkxfed [ 0 ] . eqb205d5j3 [ 1 ] = _rtDW -> caerwfkxfed [ 0 ] .
mbdfohgcix [ 1 ] ; _rtB -> caerwfkxfed [ 0 ] . eqb205d5j3 [ 2 ] = _rtDW ->
caerwfkxfed [ 0 ] . mbdfohgcix [ 2 ] ; } g5o314ttux [ 0 ] = pj5dx0krjn [ 0 ]
+ _rtB -> caerwfkxfed [ 0 ] . eqb205d5j3 [ 0 ] ; g5o314ttux [ 1 ] =
pj5dx0krjn [ 1 ] + _rtB -> caerwfkxfed [ 0 ] . eqb205d5j3 [ 1 ] ; g5o314ttux
[ 2 ] = pj5dx0krjn [ 2 ] + _rtB -> caerwfkxfed [ 0 ] . eqb205d5j3 [ 2 ] ;
mcxhbnq5q4_idx_2 = g5o314ttux [ 1 ] / muDoubleScalarSqrt ( ( g5o314ttux [ 0 ]
* g5o314ttux [ 0 ] + g5o314ttux [ 1 ] * g5o314ttux [ 1 ] ) + g5o314ttux [ 2 ]
* g5o314ttux [ 2 ] ) ; muDoubleScalarSinCos ( muDoubleScalarAtan2 (
g5o314ttux [ 2 ] , g5o314ttux [ 0 ] ) , & mjmouk13zx_idx_0 , & j4aqh4ovvp ) ;
if ( mcxhbnq5q4_idx_2 > 1.0 ) { mcxhbnq5q4_idx_2 = 1.0 ; } else { if (
mcxhbnq5q4_idx_2 < - 1.0 ) { mcxhbnq5q4_idx_2 = - 1.0 ; } }
muDoubleScalarSinCos ( muDoubleScalarAsin ( mcxhbnq5q4_idx_2 ) , &
mjmouk13zx_idx_1 , & gwnuww4u05_idx_1 ) ; _rtB -> caerwfkxfed [ 0 ] .
dkvx5njht5 [ 0 ] = j4aqh4ovvp * gwnuww4u05_idx_1 ; _rtB -> caerwfkxfed [ 0 ]
. dkvx5njht5 [ 1 ] = - ( mjmouk13zx_idx_1 * j4aqh4ovvp ) ; _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 2 ] = - mjmouk13zx_idx_0 ; _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 ] = mjmouk13zx_idx_1 ; _rtB -> caerwfkxfed
[ 0 ] . dkvx5njht5 [ 4 ] = gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0
) ) { _rtB -> caerwfkxfed [ 0 ] . dkvx5njht5 [ 5 ] = _rtP -> caerwfkxfed .
P_281 ; } _rtB -> caerwfkxfed [ 0 ] . dkvx5njht5 [ 6 ] = mjmouk13zx_idx_0 *
gwnuww4u05_idx_1 ; _rtB -> caerwfkxfed [ 0 ] . dkvx5njht5 [ 7 ] = - (
mjmouk13zx_idx_0 * mjmouk13zx_idx_1 ) ; _rtB -> caerwfkxfed [ 0 ] .
dkvx5njht5 [ 8 ] = j4aqh4ovvp ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfed [ 0 ] . i153lbuuri [ 0 ] = _rtP -> caerwfkxfed . P_282 [ 0 ] ;
_rtB -> caerwfkxfed [ 0 ] . i153lbuuri [ 1 ] = _rtP -> caerwfkxfed . P_282 [
1 ] ; muDoubleScalarSinCos ( _rtP -> caerwfkxfed . P_284 * _rtP ->
caerwfkxfed . P_283 , & _rtB -> caerwfkxfed [ 0 ] . omrck52k2t , & _rtB ->
caerwfkxfed [ 0 ] . pjlvog4q1l ) ; i5s0bgfbyv = _rtP -> caerwfkxfed . P_290 -
_rtP -> caerwfkxfed . P_289 ; dji2o12wzn = muDoubleScalarSqrt ( _rtP ->
caerwfkxfed . P_288 - i5s0bgfbyv * i5s0bgfbyv ) ; i5s0bgfbyv = _rtP ->
caerwfkxfed . P_292 * _rtP -> caerwfkxfed . P_291 ; j4y5quitjt =
muDoubleScalarSin ( i5s0bgfbyv ) ; j4aqh4ovvp = _rtP -> caerwfkxfed . P_287 -
dji2o12wzn * dji2o12wzn * j4y5quitjt * j4y5quitjt ; cqc1jds2od = _rtP ->
caerwfkxfed . P_286 / muDoubleScalarSqrt ( j4aqh4ovvp ) ; j4y5quitjt = _rtP
-> caerwfkxfed . P_293 ; _rtB -> caerwfkxfed [ 0 ] . hnhpnfrq1n =
muDoubleScalarAtan2 ( _rtP -> caerwfkxfed . P_285 , ( _rtP -> caerwfkxfed .
P_293 - dji2o12wzn * dji2o12wzn ) * cqc1jds2od / j4aqh4ovvp ) ; ht1jy4ffdq =
_rtP -> caerwfkxfed . P_294 ; _rtB -> caerwfkxfed [ 0 ] . h55k13a4n0 =
muDoubleScalarAtan2 ( _rtP -> caerwfkxfed . P_294 , cqc1jds2od *
muDoubleScalarCos ( i5s0bgfbyv ) ) ; _rtB -> caerwfkxfed [ 0 ] . ittyfga3p5 =
_rtP -> caerwfkxfed . P_296 ; } phxjodriat = muDoubleScalarRem ( ( _rtB ->
caerwfkxfed [ 0 ] . c1ljjzcvru [ 0 ] * _rtB -> caerwfkxfed [ 0 ] . pjlvog4q1l
- _rtB -> caerwfkxfed [ 0 ] . c1ljjzcvru [ 1 ] * _rtB -> caerwfkxfed [ 0 ] .
omrck52k2t ) * _rtB -> caerwfkxfed [ 0 ] . hnhpnfrq1n * _rtP -> caerwfkxfed .
P_295 + _rtB -> caerwfkxfed [ 0 ] . i153lbuuri [ 0 ] , _rtB -> caerwfkxfed [
0 ] . ittyfga3p5 ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed
[ 0 ] . cmoo5mv44a = _rtP -> caerwfkxfed . P_297 ; } gwnuww4u05_idx_1 =
phxjodriat / _rtB -> caerwfkxfed [ 0 ] . cmoo5mv44a ; if ( gwnuww4u05_idx_1 <
0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil ( gwnuww4u05_idx_1 ) ; } else {
gwnuww4u05_idx_1 = muDoubleScalarFloor ( gwnuww4u05_idx_1 ) ; } phxjodriat -=
_rtP -> caerwfkxfed . P_298 * gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 ,
0 ) ) { _rtB -> caerwfkxfed [ 0 ] . pty5leb4ww = _rtP -> caerwfkxfed . P_299
; } ewjdtgxpyu = phxjodriat / _rtB -> caerwfkxfed [ 0 ] . pty5leb4ww ; if (
ewjdtgxpyu < 0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil ( ewjdtgxpyu ) ; }
else { gwnuww4u05_idx_1 = muDoubleScalarFloor ( ewjdtgxpyu ) ; } ewjdtgxpyu
*= _rtP -> caerwfkxfed . P_301 ; ewjdtgxpyu *= ewjdtgxpyu ; ewjdtgxpyu =
muDoubleScalarSqrt ( ewjdtgxpyu ) ; if ( ewjdtgxpyu < 0.0 ) { ewjdtgxpyu =
muDoubleScalarCeil ( ewjdtgxpyu ) ; } else { ewjdtgxpyu = muDoubleScalarFloor
( ewjdtgxpyu ) ; } ewjdtgxpyu *= _rtP -> caerwfkxfed . P_302 ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . btvy42xhz4 = _rtP
-> caerwfkxfed . P_303 ; } _rtB -> caerwfkxfed [ 0 ] . dgovplry5h = (
phxjodriat - _rtP -> caerwfkxfed . P_300 * gwnuww4u05_idx_1 ) - ewjdtgxpyu *
muDoubleScalarRem ( phxjodriat , _rtB -> caerwfkxfed [ 0 ] . btvy42xhz4 ) ;
if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . lgt2jwdklt =
_rtP -> caerwfkxfed . P_304 ; _rtB -> caerwfkxfed [ 0 ] . pfwhxcszmn = _rtP
-> caerwfkxfed . P_305 ; _rtB -> caerwfkxfed [ 0 ] . idd1hncav5 = _rtP ->
caerwfkxfed . P_307 ; } hg4dcusulx = muDoubleScalarRem ( ( ( _rtB ->
caerwfkxfed [ 0 ] . c1ljjzcvru [ 0 ] * _rtB -> caerwfkxfed [ 0 ] . omrck52k2t
+ _rtB -> caerwfkxfed [ 0 ] . c1ljjzcvru [ 1 ] * _rtB -> caerwfkxfed [ 0 ] .
pjlvog4q1l ) * _rtB -> caerwfkxfed [ 0 ] . h55k13a4n0 * _rtP -> caerwfkxfed .
P_295 + _rtB -> caerwfkxfed [ 0 ] . i153lbuuri [ 1 ] ) + ( real_T ) (
ewjdtgxpyu != 0.0 ) * _rtP -> caerwfkxfed . P_306 , _rtB -> caerwfkxfed [ 0 ]
. idd1hncav5 ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0
] . mhxtdk0dp4 = _rtP -> caerwfkxfed . P_308 ; } gwnuww4u05_idx_1 =
hg4dcusulx / _rtB -> caerwfkxfed [ 0 ] . mhxtdk0dp4 ; if ( gwnuww4u05_idx_1 <
0.0 ) { gwnuww4u05_idx_1 = muDoubleScalarCeil ( gwnuww4u05_idx_1 ) ; } else {
gwnuww4u05_idx_1 = muDoubleScalarFloor ( gwnuww4u05_idx_1 ) ; } _rtB ->
caerwfkxfed [ 0 ] . gfnrl0zrlf = hg4dcusulx - _rtP -> caerwfkxfed . P_309 *
gwnuww4u05_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [
0 ] . pavnndeaqv = _rtP -> caerwfkxfed . P_310 ; _rtB -> caerwfkxfed [ 0 ] .
npcbh01spt = _rtP -> caerwfkxfed . P_314 ; } mcxhbnq5q4_idx_2 = - _rtB ->
caerwfkxfed [ 0 ] . c1ljjzcvru [ 2 ] - _rtB -> caerwfkxfed [ 0 ] . npcbh01spt
; if ( mcxhbnq5q4_idx_2 > _rtP -> caerwfkxfed . P_315 ) { _rtB -> caerwfkxfed
[ 0 ] . ffs3amb5xn = _rtP -> caerwfkxfed . P_315 ; } else if (
mcxhbnq5q4_idx_2 < _rtP -> caerwfkxfed . P_316 ) { _rtB -> caerwfkxfed [ 0 ]
. ffs3amb5xn = _rtP -> caerwfkxfed . P_316 ; } else { _rtB -> caerwfkxfed [ 0
] . ffs3amb5xn = mcxhbnq5q4_idx_2 ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) {
_rtB -> caerwfkxfed [ 0 ] . adfuv1igle = _rtP -> caerwfkxfed . P_317 ; }
hg4dcusulx = ( rt_Lookup2D_Normal ( _rtP -> caerwfkxfed . P_311 , 181 , _rtP
-> caerwfkxfed . P_312 , 360 , _rtP -> caerwfkxfed . P_313 ,
muDoubleScalarMod ( _rtB -> caerwfkxfed [ 0 ] . dgovplry5h + _rtB ->
caerwfkxfed [ 0 ] . lgt2jwdklt , _rtB -> caerwfkxfed [ 0 ] . pfwhxcszmn ) -
_rtB -> caerwfkxfed [ 0 ] . lgt2jwdklt , muDoubleScalarMod ( _rtB ->
caerwfkxfed [ 0 ] . gfnrl0zrlf , _rtB -> caerwfkxfed [ 0 ] . pavnndeaqv ) ) +
_rtB -> caerwfkxfed [ 0 ] . ffs3amb5xn ) + _rtB -> caerwfkxfed [ 0 ] .
adfuv1igle ; _rtB -> caerwfkxfed [ 0 ] . mlugxefhbt = _rtP -> caerwfkxfed .
P_318 * hg4dcusulx ; { real_T * temp_table = ( real_T * ) & _rtDW ->
caerwfkxfed [ 0 ] . j5mgvckif5 [ 0 ] ; real_T * pres_table = ( real_T * ) &
_rtDW -> caerwfkxfed [ 0 ] . bcbn0o1u2i [ 0 ] ; CalcAtmosCOESA ( & _rtB ->
caerwfkxfed [ 0 ] . mlugxefhbt , & _rtB -> caerwfkxfed [ 0 ] . dks5lm4n3s , &
_rtB -> caerwfkxfed [ 0 ] . io2qxahfyj , & _rtB -> caerwfkxfed [ 0 ] .
fgqgs3ymr4 , & _rtB -> caerwfkxfed [ 0 ] . ep3qxv5qt0 , temp_table ,
pres_table , 1 ) ; } phxjodriat = _rtP -> caerwfkxfed . P_319 * _rtB ->
caerwfkxfed [ 0 ] . fgqgs3ymr4 ; ewjdtgxpyu = ( ( g5o314ttux [ 0 ] *
g5o314ttux [ 0 ] + g5o314ttux [ 1 ] * g5o314ttux [ 1 ] ) + g5o314ttux [ 2 ] *
g5o314ttux [ 2 ] ) * phxjodriat * _rtP -> caerwfkxfed . P_320 * _rtP ->
caerwfkxfed . P_321 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfed [ 0 ] . n3lhwgoaeo = _rtP -> caerwfkxfed . P_322 ; _rtB ->
caerwfkxfed [ 0 ] . aszgmwl43z = _rtP -> caerwfkxfed . P_323 ; } pg4naehcgd =
muDoubleScalarAtan2 ( g5o314ttux [ 2 ] , g5o314ttux [ 0 ] ) ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . o0vikyenpa = _rtP
-> caerwfkxfed . P_326 ; } eog11ippyj = muDoubleScalarSqrt ( ( g5o314ttux [ 0
] * g5o314ttux [ 0 ] + g5o314ttux [ 1 ] * g5o314ttux [ 1 ] ) + g5o314ttux [ 2
] * g5o314ttux [ 2 ] ) ; i5dtnopdzy = ( ( ( ( ( _rtP -> caerwfkxfed . P_325 *
brnqslniho_idx_1 * _rtB -> caerwfkxfed [ 0 ] . o0vikyenpa / ( _rtP ->
caerwfkxfed . P_327 * eog11ippyj ) + ( _rtP -> caerwfkxfed . P_324 *
pg4naehcgd + _rtB -> caerwfkxfed [ 0 ] . aszgmwl43z ) ) + _rtP -> caerwfkxfed
. P_328 * cer2wchkb3 ) + _rtP -> caerwfkxfed . P_329 * ezloddc3bo ) + _rtP ->
caerwfkxfed . P_330 * d4ajp443jd ) + _rtP -> caerwfkxfed . P_331 * f03gfuzt3a
) + _rtP -> caerwfkxfed . P_332 * egqvaqn2aq ; if ( ssIsSampleHit ( S , 1 , 0
) ) { _rtB -> caerwfkxfed [ 0 ] . mbvj4qphh0 = _rtP -> caerwfkxfed . P_333 ;
} fy45xp05wx = i5dtnopdzy - _rtB -> caerwfkxfed [ 0 ] . mbvj4qphh0 ;
cwtd4tub5j = _rtP -> caerwfkxfed . P_339 * f03gfuzt3a ; cwtd4tub5j =
muDoubleScalarAbs ( cwtd4tub5j ) ; bhh1f5lzvq = _rtP -> caerwfkxfed . P_340 *
egqvaqn2aq ; bhh1f5lzvq = muDoubleScalarAbs ( bhh1f5lzvq ) ; fy45xp05wx = ( (
( ( ( ( fy45xp05wx * fy45xp05wx * _rtP -> caerwfkxfed . P_334 + _rtB ->
caerwfkxfed [ 0 ] . n3lhwgoaeo ) + muDoubleScalarAbs ( _rtP -> caerwfkxfed .
P_335 * cer2wchkb3 ) ) + muDoubleScalarAbs ( _rtP -> caerwfkxfed . P_336 *
iuixc4td42 ) ) + muDoubleScalarAbs ( _rtP -> caerwfkxfed . P_337 * ezloddc3bo
) ) + muDoubleScalarAbs ( _rtP -> caerwfkxfed . P_338 * d4ajp443jd ) ) +
cwtd4tub5j ) + bhh1f5lzvq ; mcxhbnq5q4_idx_2 = g5o314ttux [ 1 ] / eog11ippyj
; if ( mcxhbnq5q4_idx_2 > 1.0 ) { mcxhbnq5q4_idx_2 = 1.0 ; } else { if (
mcxhbnq5q4_idx_2 < - 1.0 ) { mcxhbnq5q4_idx_2 = - 1.0 ; } } bhh1f5lzvq =
muDoubleScalarAsin ( mcxhbnq5q4_idx_2 ) ; pl4jpj0hcq = _rtP -> caerwfkxfed .
P_341 * bhh1f5lzvq ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed
[ 0 ] . c2hjx53324 = _rtP -> caerwfkxfed . P_347 ; } cwtd4tub5j = ( ( ( (
_rtP -> caerwfkxfed . P_342 * ezloddc3bo + pl4jpj0hcq ) + _rtP -> caerwfkxfed
. P_343 * d4ajp443jd ) + _rtP -> caerwfkxfed . P_344 * iuixc4td42 ) + ( _rtP
-> caerwfkxfed . P_345 * brnqslniho_idx_0 + _rtP -> caerwfkxfed . P_346 *
brnqslniho_idx_2 ) * _rtB -> caerwfkxfed [ 0 ] . c2hjx53324 / ( _rtP ->
caerwfkxfed . P_348 * eog11ippyj ) ) * _rtP -> caerwfkxfed . P_349 ;
c5gnm55e3f_idx_0 = _rtP -> caerwfkxfed . P_350 [ 0 ] * fy45xp05wx *
ewjdtgxpyu ; pl4jpj0hcq = _rtP -> caerwfkxfed . P_350 [ 1 ] * cwtd4tub5j *
ewjdtgxpyu ; c5gnm55e3f_idx_2 = _rtP -> caerwfkxfed . P_350 [ 2 ] *
i5dtnopdzy * ewjdtgxpyu ; for ( i = 0 ; i < 3 ; i ++ ) { tmp [ i ] = _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 * i + 2 ] * c5gnm55e3f_idx_2 + ( _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 * i + 1 ] * pl4jpj0hcq + _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 * i ] * c5gnm55e3f_idx_0 ) ; } if (
ssIsSampleHit ( S , 1 , 0 ) ) { muDoubleScalarSinCos ( _rtP -> caerwfkxfed .
P_351 [ 0 ] , & bhgkwh20ck [ 0 ] , & j4aqh4ovvp ) ; muDoubleScalarSinCos (
_rtP -> caerwfkxfed . P_351 [ 1 ] , & bhgkwh20ck [ 1 ] , & gwnuww4u05_idx_1 )
; muDoubleScalarSinCos ( _rtP -> caerwfkxfed . P_351 [ 2 ] , & bhgkwh20ck [ 2
] , & mcxhbnq5q4_idx_2 ) ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 0 ] =
gwnuww4u05_idx_1 * j4aqh4ovvp ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 1 ]
= bhgkwh20ck [ 2 ] * bhgkwh20ck [ 1 ] * j4aqh4ovvp - mcxhbnq5q4_idx_2 *
bhgkwh20ck [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 2 ] =
mcxhbnq5q4_idx_2 * bhgkwh20ck [ 1 ] * j4aqh4ovvp + bhgkwh20ck [ 2 ] *
bhgkwh20ck [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 3 ] =
gwnuww4u05_idx_1 * bhgkwh20ck [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv
[ 4 ] = bhgkwh20ck [ 2 ] * bhgkwh20ck [ 1 ] * bhgkwh20ck [ 0 ] +
mcxhbnq5q4_idx_2 * j4aqh4ovvp ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 5 ]
= mcxhbnq5q4_idx_2 * bhgkwh20ck [ 1 ] * bhgkwh20ck [ 0 ] - bhgkwh20ck [ 2 ] *
j4aqh4ovvp ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 6 ] = - bhgkwh20ck [ 1
] ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 7 ] = bhgkwh20ck [ 2 ] *
gwnuww4u05_idx_1 ; _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ 8 ] =
mcxhbnq5q4_idx_2 * gwnuww4u05_idx_1 ; _rtB -> caerwfkxfed [ 0 ] . cxqp1d24i0
= _rtP -> caerwfkxfed . P_352 ; } if ( ( ( f1xhd02yjc * ) ssGetContStates ( S
) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe
] . m41w0ewt02 >= _rtP -> caerwfkxfed . P_354 ) { if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . m41w0ewt02 != _rtP -> caerwfkxfed . P_354 ) { ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . m41w0ewt02 = _rtP -> caerwfkxfed .
P_354 ; ssSetSolverNeedsReset ( S ) ; } } else if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . m41w0ewt02 <= _rtP -> caerwfkxfed . P_355 ) { if ( (
( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . m41w0ewt02 != _rtP -> caerwfkxfed .
P_355 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . m41w0ewt02 = _rtP ->
caerwfkxfed . P_355 ; ssSetSolverNeedsReset ( S ) ; } } cwtd4tub5j = ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . m41w0ewt02 ; if ( ssIsSampleHit ( S
, 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . pttafnd3dy = _rtP -> caerwfkxfed .
P_356 ; } jz4qqgqklu = _rtB -> caerwfkxfed [ 0 ] . cxqp1d24i0 * eog11ippyj /
cwtd4tub5j / _rtB -> caerwfkxfed [ 0 ] . pttafnd3dy ; if ( jz4qqgqklu > _rtP
-> caerwfkxfed . P_357 ) { jz4qqgqklu = _rtP -> caerwfkxfed . P_357 ; } else
{ if ( jz4qqgqklu < _rtP -> caerwfkxfed . P_358 ) { jz4qqgqklu = _rtP ->
caerwfkxfed . P_358 ; } } if ( ssIsSampleHit ( S , 1 , 0 ) ) { if ( ( _rtP ->
caerwfkxfed . P_360 < 0.0 ) && ( _rtP -> caerwfkxfed . P_361 >
muDoubleScalarFloor ( _rtP -> caerwfkxfed . P_361 ) ) ) { j4aqh4ovvp = -
muDoubleScalarPower ( - _rtP -> caerwfkxfed . P_360 , _rtP -> caerwfkxfed .
P_361 ) ; } else { j4aqh4ovvp = muDoubleScalarPower ( _rtP -> caerwfkxfed .
P_360 , _rtP -> caerwfkxfed . P_361 ) ; } _rtB -> caerwfkxfed [ 0 ] .
j0bkwamlx1 = _rtP -> caerwfkxfed . P_362 * j4aqh4ovvp ; ht1jy4ffdq = _rtP ->
caerwfkxfed . P_363 ; cqc1jds2od = _rtP -> caerwfkxfed . P_364 ; if ( ( _rtP
-> caerwfkxfed . P_363 < 0.0 ) && ( _rtP -> caerwfkxfed . P_364 >
muDoubleScalarFloor ( _rtP -> caerwfkxfed . P_364 ) ) ) { _rtB -> caerwfkxfed
[ 0 ] . enzulo1z4f = - muDoubleScalarPower ( - _rtP -> caerwfkxfed . P_363 ,
_rtP -> caerwfkxfed . P_364 ) ; } else { _rtB -> caerwfkxfed [ 0 ] .
enzulo1z4f = muDoubleScalarPower ( _rtP -> caerwfkxfed . P_363 , _rtP ->
caerwfkxfed . P_364 ) ; } } fy45xp05wx = cwtd4tub5j * cwtd4tub5j ; i5dtnopdzy
= ( ( ( ( _rtP -> caerwfkxfed . P_359 [ 0 ] * jz4qqgqklu + _rtP ->
caerwfkxfed . P_359 [ 1 ] ) * jz4qqgqklu + _rtP -> caerwfkxfed . P_359 [ 2 ]
) * jz4qqgqklu + _rtP -> caerwfkxfed . P_359 [ 3 ] ) * jz4qqgqklu + _rtP ->
caerwfkxfed . P_359 [ 4 ] ) * _rtB -> caerwfkxfed [ 0 ] . j0bkwamlx1 * _rtB
-> caerwfkxfed [ 0 ] . enzulo1z4f * fy45xp05wx * phxjodriat ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . fx4zeiwnfg = _rtP
-> caerwfkxfed . P_365 ; _rtB -> caerwfkxfed [ 0 ] . iz2cfx0wtw = _rtP ->
caerwfkxfed . P_366 ; } for ( i = 0 ; i < 3 ; i ++ ) { tmp_p [ i ] = _rtB ->
caerwfkxfed [ 0 ] . ejiujbmebv [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] .
iz2cfx0wtw + ( _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i + 3 ] * _rtB ->
caerwfkxfed [ 0 ] . fx4zeiwnfg + _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i ]
* i5dtnopdzy ) ; } for ( i = 0 ; i < 3 ; i ++ ) { bhgkwh20ck [ i ] = _rtB ->
caerwfkxfed [ 0 ] . ejiujbmebv [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] .
iz2cfx0wtw + ( _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i + 3 ] * _rtB ->
caerwfkxfed [ 0 ] . fx4zeiwnfg + _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i ]
* i5dtnopdzy ) ; } for ( i = 0 ; i < 3 ; i ++ ) { tmp_i [ i ] = ( ( _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 * i + 1 ] * pl4jpj0hcq + _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 * i ] * c5gnm55e3f_idx_0 ) + _rtB ->
caerwfkxfed [ 0 ] . dkvx5njht5 [ 3 * i + 2 ] * c5gnm55e3f_idx_2 ) +
bhgkwh20ck [ i ] ; } dw55yfpcss [ 0 ] = _rtP -> caerwfkxfed . P_367 * tmp_i [
0 ] ; dw55yfpcss [ 1 ] = _rtP -> caerwfkxfed . P_367 * tmp_i [ 1 ] ;
dw55yfpcss [ 2 ] = _rtP -> caerwfkxfed . P_367 * tmp_i [ 2 ] ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . plhir45f15 = _rtP
-> caerwfkxfed . P_369 ; } if ( _rtB -> caerwfkxfed [ 0 ] . plhir45f15 >=
_rtP -> caerwfkxfed . P_370 ) { _rtB -> caerwfkxfed [ 0 ] . b4hacuigpw = (
_rtB -> caerwfkxfed [ 0 ] . jqgsix4xns + _rtB -> caerwfkxfed [ 0 ] .
oj00fojr2r ) + _rtP -> caerwfkxfed . P_368 * dw55yfpcss [ 0 ] ; } else { _rtB
-> caerwfkxfed [ 0 ] . b4hacuigpw = dw55yfpcss [ 0 ] ; } if ( ssIsSampleHit (
S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] . n5w1vbpkm1 ; _rtB
-> caerwfkxfed [ 0 ] . dge3m3ewk0 = _rtP -> caerwfkxfed . P_374 * _rtDW ->
caerwfkxfed [ 0 ] . n5w1vbpkm1 ; _rtB -> caerwfkxfed [ 0 ] . oq0izkh2m3 =
_rtP -> caerwfkxfed . P_375 ; _rtB -> caerwfkxfed [ 0 ] . fmm1ljtzuz = _rtP
-> caerwfkxfed . P_377 ; } if ( _rtB -> caerwfkxfed [ 0 ] . fmm1ljtzuz >=
_rtP -> caerwfkxfed . P_378 ) { _rtB -> caerwfkxfed [ 0 ] . gobfvkimf1 = (
_rtB -> caerwfkxfed [ 0 ] . dge3m3ewk0 + _rtB -> caerwfkxfed [ 0 ] .
oq0izkh2m3 ) + _rtP -> caerwfkxfed . P_376 * dw55yfpcss [ 1 ] ; } else { _rtB
-> caerwfkxfed [ 0 ] . gobfvkimf1 = dw55yfpcss [ 1 ] ; } if ( ssIsSampleHit (
S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] . ii3efjiukm ; _rtB
-> caerwfkxfed [ 0 ] . betireuuiy = _rtP -> caerwfkxfed . P_382 * _rtDW ->
caerwfkxfed [ 0 ] . ii3efjiukm ; _rtB -> caerwfkxfed [ 0 ] . c0nzo4wm5j =
_rtP -> caerwfkxfed . P_383 ; _rtB -> caerwfkxfed [ 0 ] . exyzxvq2hb = _rtP
-> caerwfkxfed . P_385 ; } if ( _rtB -> caerwfkxfed [ 0 ] . exyzxvq2hb >=
_rtP -> caerwfkxfed . P_386 ) { _rtB -> caerwfkxfed [ 0 ] . kaay5dy1tk = (
_rtB -> caerwfkxfed [ 0 ] . betireuuiy + _rtB -> caerwfkxfed [ 0 ] .
c0nzo4wm5j ) + _rtP -> caerwfkxfed . P_384 * dw55yfpcss [ 2 ] ; } else { _rtB
-> caerwfkxfed [ 0 ] . kaay5dy1tk = dw55yfpcss [ 2 ] ; } if ( ssIsSampleHit (
S , 1 , 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] . anzbkhzxt1 ; _rtB
-> caerwfkxfed [ 0 ] . ihwnvemttl = _rtP -> caerwfkxfed . P_390 * _rtDW ->
caerwfkxfed [ 0 ] . anzbkhzxt1 ; _rtB -> caerwfkxfed [ 0 ] . k2hwopmf2a =
_rtP -> caerwfkxfed . P_391 ; _rtB -> caerwfkxfed [ 0 ] . ag1vobzp1l = _rtP
-> caerwfkxfed . P_392 ; } hg4dcusulx -= _rtB -> caerwfkxfed [ 0 ] .
ag1vobzp1l ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] .
el3xwxwsfa = _rtP -> caerwfkxfed . P_394 ; } if ( _rtB -> caerwfkxfed [ 0 ] .
el3xwxwsfa >= _rtP -> caerwfkxfed . P_395 ) { _rtB -> caerwfkxfed [ 0 ] .
dda14iazcf = ( _rtB -> caerwfkxfed [ 0 ] . ihwnvemttl + _rtB -> caerwfkxfed [
0 ] . k2hwopmf2a ) + _rtP -> caerwfkxfed . P_393 * hg4dcusulx ; } else { _rtB
-> caerwfkxfed [ 0 ] . dda14iazcf = hg4dcusulx ; } if ( ssIsSampleHit ( S , 1
, 0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] . jfa2ekpuah ; _rtB ->
caerwfkxfed [ 0 ] . eho11pnoew = _rtP -> caerwfkxfed . P_399 * _rtDW ->
caerwfkxfed [ 0 ] . jfa2ekpuah ; _rtB -> caerwfkxfed [ 0 ] . bw0n4xvudq =
_rtP -> caerwfkxfed . P_400 ; _rtB -> caerwfkxfed [ 0 ] . aegvuej3nt = _rtP
-> caerwfkxfed . P_402 ; } if ( _rtB -> caerwfkxfed [ 0 ] . aegvuej3nt >=
_rtP -> caerwfkxfed . P_403 ) { _rtB -> caerwfkxfed [ 0 ] . pookjvxe2e = (
_rtB -> caerwfkxfed [ 0 ] . eho11pnoew + _rtB -> caerwfkxfed [ 0 ] .
bw0n4xvudq ) + _rtP -> caerwfkxfed . P_401 * eog11ippyj ; } else { _rtB ->
caerwfkxfed [ 0 ] . pookjvxe2e = eog11ippyj ; } if ( ssIsSampleHit ( S , 1 ,
0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] . eded13czzw ; _rtB ->
caerwfkxfed [ 0 ] . eapzcaqynp = _rtP -> caerwfkxfed . P_407 * _rtDW ->
caerwfkxfed [ 0 ] . eded13czzw ; _rtB -> caerwfkxfed [ 0 ] . coufgb54aj =
_rtP -> caerwfkxfed . P_408 ; _rtB -> caerwfkxfed [ 0 ] . ei0nmkkekk = _rtP
-> caerwfkxfed . P_410 ; } if ( _rtB -> caerwfkxfed [ 0 ] . ei0nmkkekk >=
_rtP -> caerwfkxfed . P_411 ) { _rtB -> caerwfkxfed [ 0 ] . mayyyzy1ws = (
_rtB -> caerwfkxfed [ 0 ] . eapzcaqynp + _rtB -> caerwfkxfed [ 0 ] .
coufgb54aj ) + _rtP -> caerwfkxfed . P_409 * pg4naehcgd ; } else { _rtB ->
caerwfkxfed [ 0 ] . mayyyzy1ws = pg4naehcgd ; } if ( ssIsSampleHit ( S , 1 ,
0 ) ) { ht1jy4ffdq = _rtDW -> caerwfkxfed [ 0 ] . fgy225ioz4 ; _rtB ->
caerwfkxfed [ 0 ] . kpbhuiey4q = _rtP -> caerwfkxfed . P_415 * _rtDW ->
caerwfkxfed [ 0 ] . fgy225ioz4 ; _rtB -> caerwfkxfed [ 0 ] . gxx4gz4dwf =
_rtP -> caerwfkxfed . P_416 ; } i5dtnopdzy = _rtP -> caerwfkxfed . P_417 *
bhh1f5lzvq ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] .
bvvpnwphkf = _rtP -> caerwfkxfed . P_418 ; } if ( _rtB -> caerwfkxfed [ 0 ] .
bvvpnwphkf >= _rtP -> caerwfkxfed . P_419 ) { _rtB -> caerwfkxfed [ 0 ] .
orrcalxp14 = ( _rtB -> caerwfkxfed [ 0 ] . kpbhuiey4q + _rtB -> caerwfkxfed [
0 ] . gxx4gz4dwf ) + i5dtnopdzy ; } else { _rtB -> caerwfkxfed [ 0 ] .
orrcalxp14 = bhh1f5lzvq ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq =
_rtP -> caerwfkxfed . P_420 * _rtB -> caerwfkxfed [ 0 ] . dgovplry5h ;
cqc1jds2od = _rtP -> caerwfkxfed . P_421 * _rtB -> caerwfkxfed [ 0 ] .
gfnrl0zrlf ; } muDoubleScalarSinCos ( p3wzaspxbp [ 2 ] , & dw55yfpcss [ 0 ] ,
& peirsr4iz0 [ 0 ] ) ; muDoubleScalarSinCos ( p3wzaspxbp [ 1 ] , & dw55yfpcss
[ 1 ] , & peirsr4iz0 [ 1 ] ) ; muDoubleScalarSinCos ( p3wzaspxbp [ 0 ] , &
dw55yfpcss [ 2 ] , & peirsr4iz0 [ 2 ] ) ; gdgwwi2lmx [ 0 ] = peirsr4iz0 [ 1 ]
* peirsr4iz0 [ 0 ] ; gdgwwi2lmx [ 1 ] = dw55yfpcss [ 2 ] * dw55yfpcss [ 1 ] *
peirsr4iz0 [ 0 ] - peirsr4iz0 [ 2 ] * dw55yfpcss [ 0 ] ; gdgwwi2lmx [ 2 ] =
peirsr4iz0 [ 2 ] * dw55yfpcss [ 1 ] * peirsr4iz0 [ 0 ] + dw55yfpcss [ 2 ] *
dw55yfpcss [ 0 ] ; gdgwwi2lmx [ 3 ] = peirsr4iz0 [ 1 ] * dw55yfpcss [ 0 ] ;
gdgwwi2lmx [ 4 ] = dw55yfpcss [ 2 ] * dw55yfpcss [ 1 ] * dw55yfpcss [ 0 ] +
peirsr4iz0 [ 2 ] * peirsr4iz0 [ 0 ] ; gdgwwi2lmx [ 5 ] = peirsr4iz0 [ 2 ] *
dw55yfpcss [ 1 ] * dw55yfpcss [ 0 ] - dw55yfpcss [ 2 ] * peirsr4iz0 [ 0 ] ;
gdgwwi2lmx [ 6 ] = - dw55yfpcss [ 1 ] ; gdgwwi2lmx [ 7 ] = dw55yfpcss [ 2 ] *
peirsr4iz0 [ 1 ] ; gdgwwi2lmx [ 8 ] = peirsr4iz0 [ 2 ] * peirsr4iz0 [ 1 ] ;
if ( ssIsSampleHit ( S , 1 , 0 ) ) { muDoubleScalarSinCos ( _rtP ->
caerwfkxfed . P_424 * _rtP -> caerwfkxfed . P_423 , & dji2o12wzn , &
i5s0bgfbyv ) ; j4y5quitjt = _rtP -> caerwfkxfed . P_425 ; _rtB -> caerwfkxfed
[ 0 ] . dksyau5gp0 [ 0 ] = _rtP -> caerwfkxfed . P_426 * i5s0bgfbyv * _rtP ->
caerwfkxfed . P_422 * _rtP -> caerwfkxfed . P_427 ; _rtB -> caerwfkxfed [ 0 ]
. dksyau5gp0 [ 1 ] = _rtP -> caerwfkxfed . P_426 * dji2o12wzn * _rtP ->
caerwfkxfed . P_422 * _rtP -> caerwfkxfed . P_427 ; _rtB -> caerwfkxfed [ 0 ]
. dksyau5gp0 [ 2 ] = _rtP -> caerwfkxfed . P_426 * _rtP -> caerwfkxfed .
P_425 * _rtP -> caerwfkxfed . P_422 * _rtP -> caerwfkxfed . P_427 ; } for ( i
= 0 ; i < 3 ; i ++ ) { _rtB -> caerwfkxfed [ 0 ] . ap4yxf0rbn [ i ] = ( (
gdgwwi2lmx [ 3 * i + 1 ] * pj5dx0krjn [ 1 ] + gdgwwi2lmx [ 3 * i ] *
pj5dx0krjn [ 0 ] ) + gdgwwi2lmx [ 3 * i + 2 ] * pj5dx0krjn [ 2 ] ) + _rtB ->
caerwfkxfed [ 0 ] . dksyau5gp0 [ i ] ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) {
_rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 0 ] = _rtB -> caerwfkxfed [ 0 ] .
gqlwzuylsk ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 1 ] = _rtB ->
caerwfkxfed [ 0 ] . efpl3xsr4s ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 2 ]
= _rtB -> caerwfkxfed [ 0 ] . h5gaeqtcng ; _rtB -> caerwfkxfed [ 0 ] .
lryuogk5kz [ 3 ] = _rtB -> caerwfkxfed [ 0 ] . oepibhm15s ; _rtB ->
caerwfkxfed [ 0 ] . lryuogk5kz [ 4 ] = _rtB -> caerwfkxfed [ 0 ] . odhyzmaqlj
; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 5 ] = _rtB -> caerwfkxfed [ 0 ] .
e5dh2fbj00 ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 6 ] = _rtB ->
caerwfkxfed [ 0 ] . b4hacuigpw ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 7 ]
= _rtB -> caerwfkxfed [ 0 ] . gobfvkimf1 ; _rtB -> caerwfkxfed [ 0 ] .
lryuogk5kz [ 8 ] = _rtB -> caerwfkxfed [ 0 ] . kaay5dy1tk ; _rtB ->
caerwfkxfed [ 0 ] . lryuogk5kz [ 9 ] = _rtB -> caerwfkxfed [ 0 ] . dda14iazcf
; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 10 ] = _rtB -> caerwfkxfed [ 0 ] .
pookjvxe2e ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 11 ] = _rtB ->
caerwfkxfed [ 0 ] . mayyyzy1ws ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 12
] = _rtB -> caerwfkxfed [ 0 ] . orrcalxp14 ; _rtB -> caerwfkxfed [ 0 ] .
lryuogk5kz [ 13 ] = ht1jy4ffdq ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 14
] = cqc1jds2od ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 15 ] = _rtB ->
caerwfkxfed [ 0 ] . ffs3amb5xn ; _rtB -> caerwfkxfed [ 0 ] . lryuogk5kz [ 16
] = _rtB -> caerwfkxfed [ 0 ] . ap4yxf0rbn [ 0 ] ; _rtB -> caerwfkxfed [ 0 ]
. lryuogk5kz [ 17 ] = _rtB -> caerwfkxfed [ 0 ] . ap4yxf0rbn [ 1 ] ; _rtB ->
caerwfkxfed [ 0 ] . lryuogk5kz [ 18 ] = _rtB -> caerwfkxfed [ 0 ] .
ap4yxf0rbn [ 2 ] ; _rtB -> caerwfkxfed [ 0 ] . l1intti0ij = _rtP ->
caerwfkxfed . P_428 * ht1jy4ffdq ; _rtB -> caerwfkxfed [ 0 ] . lb512rox2p =
_rtP -> caerwfkxfed . P_429 * cqc1jds2od ; } jbe23ejmq4 [ 0 ] = _rtB ->
caerwfkxfed [ 0 ] . l1intti0ij ; jbe23ejmq4 [ 1 ] = _rtB -> caerwfkxfed [ 0 ]
. lb512rox2p ; jbe23ejmq4 [ 2 ] = _rtB -> caerwfkxfed [ 0 ] . ffs3amb5xn ;
jbe23ejmq4 [ 3 ] = _rtP -> caerwfkxfed . P_431 * _rtB -> caerwfkxfed [ 0 ] .
h5gaeqtcng ; jbe23ejmq4 [ 4 ] = _rtP -> caerwfkxfed . P_430 * _rtB ->
caerwfkxfed [ 0 ] . efpl3xsr4s ; jbe23ejmq4 [ 5 ] = _rtP -> caerwfkxfed .
P_432 * _rtB -> caerwfkxfed [ 0 ] . gqlwzuylsk ; if ( ssIsSampleHit ( S , 1 ,
0 ) ) { memcpy ( & kb4gbgtxnr [ 0 ] , & _rtP -> caerwfkxfed . P_433 [ 0 ] ,
18U * sizeof ( real_T ) ) ; for ( i = 0 ; i < 3 ; i ++ ) { _rtB ->
caerwfkxfed [ 0 ] . fdhnbsuchh [ 3 * i ] = _rtP -> caerwfkxfed . P_433 [ 6 *
i ] ; _rtB -> caerwfkxfed [ 0 ] . fdhnbsuchh [ 1 + 3 * i ] = _rtP ->
caerwfkxfed . P_433 [ 6 * i + 1 ] ; _rtB -> caerwfkxfed [ 0 ] . fdhnbsuchh [
2 + 3 * i ] = _rtP -> caerwfkxfed . P_433 [ 6 * i + 2 ] ; } } for ( i = 0 ; i
< 3 ; i ++ ) { peirsr4iz0 [ i ] = _rtB -> caerwfkxfed [ 0 ] . fdhnbsuchh [ i
+ 6 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 2 ] + (
_rtB -> caerwfkxfed [ 0 ] . fdhnbsuchh [ i + 3 ] * _rtX -> caerwfkxfed [
_rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] + _rtB -> caerwfkxfed [ 0 ] .
fdhnbsuchh [ i ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [
0 ] ) ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { for ( i = 0 ; i < 3 ; i ++ ) {
_rtB -> caerwfkxfed [ 0 ] . coulb3gwb2 [ 3 * i ] = kb4gbgtxnr [ 6 * i + 3 ] ;
_rtB -> caerwfkxfed [ 0 ] . coulb3gwb2 [ 1 + 3 * i ] = kb4gbgtxnr [ 6 * i + 4
] ; _rtB -> caerwfkxfed [ 0 ] . coulb3gwb2 [ 2 + 3 * i ] = kb4gbgtxnr [ 6 * i
+ 5 ] ; } } mcxhbnq5q4_idx_2 = g5o314ttux [ 1 ] / muDoubleScalarSqrt ( (
g5o314ttux [ 0 ] * g5o314ttux [ 0 ] + g5o314ttux [ 1 ] * g5o314ttux [ 1 ] ) +
g5o314ttux [ 2 ] * g5o314ttux [ 2 ] ) ; muDoubleScalarSinCos (
muDoubleScalarAtan2 ( g5o314ttux [ 2 ] , g5o314ttux [ 0 ] ) , & j4aqh4ovvp ,
& mjmouk13zx_idx_0 ) ; if ( mcxhbnq5q4_idx_2 > 1.0 ) { mcxhbnq5q4_idx_2 = 1.0
; } else { if ( mcxhbnq5q4_idx_2 < - 1.0 ) { mcxhbnq5q4_idx_2 = - 1.0 ; } }
muDoubleScalarSinCos ( muDoubleScalarAsin ( mcxhbnq5q4_idx_2 ) , &
gwnuww4u05_idx_1 , & mjmouk13zx_idx_1 ) ; _rtB -> caerwfkxfed [ 0 ] .
mtxo4tuzvu [ 0 ] = mjmouk13zx_idx_0 * mjmouk13zx_idx_1 ; _rtB -> caerwfkxfed
[ 0 ] . mtxo4tuzvu [ 1 ] = - ( gwnuww4u05_idx_1 * mjmouk13zx_idx_0 ) ; _rtB
-> caerwfkxfed [ 0 ] . mtxo4tuzvu [ 2 ] = - j4aqh4ovvp ; _rtB -> caerwfkxfed
[ 0 ] . mtxo4tuzvu [ 3 ] = gwnuww4u05_idx_1 ; _rtB -> caerwfkxfed [ 0 ] .
mtxo4tuzvu [ 4 ] = mjmouk13zx_idx_1 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) {
_rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ 5 ] = _rtP -> caerwfkxfed . P_434 ;
} _rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ 6 ] = j4aqh4ovvp *
mjmouk13zx_idx_1 ; _rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ 7 ] = - (
j4aqh4ovvp * gwnuww4u05_idx_1 ) ; _rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ 8
] = mjmouk13zx_idx_0 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfed [ 0 ] . o3htsxvstm [ 0 ] = _rtP -> caerwfkxfed . P_435 [ 0 ] -
_rtP -> caerwfkxfed . P_436 [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . o3htsxvstm [
1 ] = _rtP -> caerwfkxfed . P_435 [ 1 ] - _rtP -> caerwfkxfed . P_436 [ 1 ] ;
_rtB -> caerwfkxfed [ 0 ] . o3htsxvstm [ 2 ] = _rtP -> caerwfkxfed . P_435 [
2 ] - _rtP -> caerwfkxfed . P_436 [ 2 ] ; } for ( i = 0 ; i < 3 ; i ++ ) {
g5o314ttux [ i ] = _rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ i + 6 ] * _rtB ->
caerwfkxfed [ 0 ] . o3htsxvstm [ 2 ] + ( _rtB -> caerwfkxfed [ 0 ] .
mtxo4tuzvu [ i + 3 ] * _rtB -> caerwfkxfed [ 0 ] . o3htsxvstm [ 1 ] + _rtB ->
caerwfkxfed [ 0 ] . mtxo4tuzvu [ i ] * _rtB -> caerwfkxfed [ 0 ] . o3htsxvstm
[ 0 ] ) ; } for ( i = 0 ; i < 3 ; i ++ ) { tmp_i [ i ] = _rtB -> caerwfkxfed
[ 0 ] . mtxo4tuzvu [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] . o3htsxvstm [ 2 ] +
( _rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ i + 3 ] * _rtB -> caerwfkxfed [ 0
] . o3htsxvstm [ 1 ] + _rtB -> caerwfkxfed [ 0 ] . mtxo4tuzvu [ i ] * _rtB ->
caerwfkxfed [ 0 ] . o3htsxvstm [ 0 ] ) ; } gha5nk3fuu = pl4jpj0hcq * tmp_i [
0 ] ; j4aqh4ovvp = pl4jpj0hcq * g5o314ttux [ 2 ] ; k1qflq4l35_idx_0 =
c5gnm55e3f_idx_2 * g5o314ttux [ 0 ] ; gwnuww4u05_idx_1 = c5gnm55e3f_idx_2 *
g5o314ttux [ 1 ] ; mjmouk13zx_idx_1 = c5gnm55e3f_idx_0 * g5o314ttux [ 2 ] ;
c5gnm55e3f_idx_2 = c5gnm55e3f_idx_0 * g5o314ttux [ 1 ] - gha5nk3fuu ;
i5dtnopdzy = _rtP -> caerwfkxfed . P_437 * bhh1f5lzvq ; if ( ssIsSampleHit (
S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . aoclqyw2ak = _rtP -> caerwfkxfed
. P_445 ; } gha5nk3fuu = ( ( ( ( ( _rtP -> caerwfkxfed . P_438 * iuixc4td42 +
i5dtnopdzy ) + _rtP -> caerwfkxfed . P_439 * ezloddc3bo ) + _rtP ->
caerwfkxfed . P_440 * d4ajp443jd ) + _rtP -> caerwfkxfed . P_441 * f03gfuzt3a
) + _rtP -> caerwfkxfed . P_442 * egqvaqn2aq ) + ( _rtP -> caerwfkxfed .
P_443 * brnqslniho_idx_0 + _rtP -> caerwfkxfed . P_444 * brnqslniho_idx_2 ) *
_rtB -> caerwfkxfed [ 0 ] . aoclqyw2ak / ( _rtP -> caerwfkxfed . P_446 *
eog11ippyj ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ]
. dqlk1105km = _rtP -> caerwfkxfed . P_447 ; _rtB -> caerwfkxfed [ 0 ] .
a2240if1no = _rtP -> caerwfkxfed . P_455 ; } i5dtnopdzy = _rtP -> caerwfkxfed
. P_457 * bhh1f5lzvq ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfed [ 0 ] . ftrr0dufus = _rtP -> caerwfkxfed . P_465 ; } bhh1f5lzvq =
( ( ( ( ( _rtP -> caerwfkxfed . P_458 * iuixc4td42 + i5dtnopdzy ) + _rtP ->
caerwfkxfed . P_459 * ezloddc3bo ) + _rtP -> caerwfkxfed . P_460 * d4ajp443jd
) + _rtP -> caerwfkxfed . P_461 * f03gfuzt3a ) + _rtP -> caerwfkxfed . P_462
* egqvaqn2aq ) + ( _rtP -> caerwfkxfed . P_463 * brnqslniho_idx_0 + _rtP ->
caerwfkxfed . P_464 * brnqslniho_idx_2 ) * _rtB -> caerwfkxfed [ 0 ] .
ftrr0dufus / ( _rtP -> caerwfkxfed . P_466 * eog11ippyj ) ; g5o314ttux [ 2 ]
= _rtP -> caerwfkxfed . P_467 [ 2 ] * ewjdtgxpyu * bhh1f5lzvq ; g5o314ttux [
0 ] = _rtP -> caerwfkxfed . P_467 [ 0 ] * ewjdtgxpyu * gha5nk3fuu + (
j4aqh4ovvp - gwnuww4u05_idx_1 ) ; mcxhbnq5q4_idx_2 = c5gnm55e3f_idx_2 +
g5o314ttux [ 2 ] ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = ( _rtP
-> caerwfkxfed . P_468 [ 0 ] * pydf4ae103 + _rtP -> caerwfkxfed . P_468 [ 1 ]
) * pydf4ae103 + _rtP -> caerwfkxfed . P_468 [ 2 ] ; if ( ht1jy4ffdq > _rtP
-> caerwfkxfed . P_469 ) { _rtB -> caerwfkxfed [ 0 ] . eckvkmm42k = _rtP ->
caerwfkxfed . P_469 ; } else if ( ht1jy4ffdq < _rtP -> caerwfkxfed . P_470 )
{ _rtB -> caerwfkxfed [ 0 ] . eckvkmm42k = _rtP -> caerwfkxfed . P_470 ; }
else { _rtB -> caerwfkxfed [ 0 ] . eckvkmm42k = ht1jy4ffdq ; } } if (
cwtd4tub5j > _rtP -> caerwfkxfed . P_471 ) { j4aqh4ovvp = _rtP -> caerwfkxfed
. P_471 ; } else if ( cwtd4tub5j < _rtP -> caerwfkxfed . P_472 ) { j4aqh4ovvp
= _rtP -> caerwfkxfed . P_472 ; } else { j4aqh4ovvp = cwtd4tub5j ; }
gha5nk3fuu = _rtB -> caerwfkxfed [ 0 ] . eckvkmm42k / j4aqh4ovvp ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { if ( ( _rtP -> caerwfkxfed . P_474 < 0.0 ) &&
( _rtP -> caerwfkxfed . P_475 > muDoubleScalarFloor ( _rtP -> caerwfkxfed .
P_475 ) ) ) { j4aqh4ovvp = - muDoubleScalarPower ( - _rtP -> caerwfkxfed .
P_474 , _rtP -> caerwfkxfed . P_475 ) ; } else { j4aqh4ovvp =
muDoubleScalarPower ( _rtP -> caerwfkxfed . P_474 , _rtP -> caerwfkxfed .
P_475 ) ; } _rtB -> caerwfkxfed [ 0 ] . hki2n0vxee = _rtP -> caerwfkxfed .
P_476 * j4aqh4ovvp ; ht1jy4ffdq = _rtP -> caerwfkxfed . P_477 ; cqc1jds2od =
_rtP -> caerwfkxfed . P_478 ; if ( ( _rtP -> caerwfkxfed . P_477 < 0.0 ) && (
_rtP -> caerwfkxfed . P_478 > muDoubleScalarFloor ( _rtP -> caerwfkxfed .
P_478 ) ) ) { _rtB -> caerwfkxfed [ 0 ] . l1iazkddrf = - muDoubleScalarPower
( - _rtP -> caerwfkxfed . P_477 , _rtP -> caerwfkxfed . P_478 ) ; } else {
_rtB -> caerwfkxfed [ 0 ] . l1iazkddrf = muDoubleScalarPower ( _rtP ->
caerwfkxfed . P_477 , _rtP -> caerwfkxfed . P_478 ) ; } } d52lfbl3ao = ( ( (
( _rtP -> caerwfkxfed . P_473 [ 0 ] * jz4qqgqklu + _rtP -> caerwfkxfed .
P_473 [ 1 ] ) * jz4qqgqklu + _rtP -> caerwfkxfed . P_473 [ 2 ] ) * jz4qqgqklu
+ _rtP -> caerwfkxfed . P_473 [ 3 ] ) * jz4qqgqklu + _rtP -> caerwfkxfed .
P_473 [ 4 ] ) * ( phxjodriat * fy45xp05wx ) * _rtB -> caerwfkxfed [ 0 ] .
hki2n0vxee * _rtB -> caerwfkxfed [ 0 ] . l1iazkddrf * _rtP -> caerwfkxfed .
P_479 + gha5nk3fuu ; gha5nk3fuu += d52lfbl3ao ; if ( ssIsSampleHit ( S , 1 ,
0 ) ) { _rtB -> caerwfkxfed [ 0 ] . pzp5ajxcvv = _rtP -> caerwfkxfed . P_480
; _rtB -> caerwfkxfed [ 0 ] . ashltneops = _rtP -> caerwfkxfed . P_481 ; }
for ( i = 0 ; i < 3 ; i ++ ) { tmp_i [ i ] = _rtB -> caerwfkxfed [ 0 ] .
ejiujbmebv [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] . ashltneops + ( _rtB ->
caerwfkxfed [ 0 ] . ejiujbmebv [ i + 3 ] * _rtB -> caerwfkxfed [ 0 ] .
pzp5ajxcvv + _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i ] * gha5nk3fuu ) ; }
c5gnm55e3f_idx_0 = _rtP -> caerwfkxfed . P_482 [ 0 ] * cwtd4tub5j ;
pl4jpj0hcq = _rtP -> caerwfkxfed . P_482 [ 1 ] * cwtd4tub5j ;
c5gnm55e3f_idx_2 = _rtP -> caerwfkxfed . P_482 [ 2 ] * cwtd4tub5j ; for ( i =
0 ; i < 3 ; i ++ ) { tmp_e [ i ] = _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i
+ 6 ] * c5gnm55e3f_idx_2 + ( _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i + 3 ]
* pl4jpj0hcq + _rtB -> caerwfkxfed [ 0 ] . ejiujbmebv [ i ] *
c5gnm55e3f_idx_0 ) ; } for ( i = 0 ; i < 3 ; i ++ ) { pj5dx0krjn [ i ] = _rtB
-> caerwfkxfed [ 0 ] . ejiujbmebv [ i + 6 ] * c5gnm55e3f_idx_2 + ( _rtB ->
caerwfkxfed [ 0 ] . ejiujbmebv [ i + 3 ] * pl4jpj0hcq + _rtB -> caerwfkxfed [
0 ] . ejiujbmebv [ i ] * c5gnm55e3f_idx_0 ) ; } gha5nk3fuu = brnqslniho_idx_1
* tmp_e [ 2 ] ; bhh1f5lzvq = brnqslniho_idx_2 * tmp_e [ 0 ] ; cwtd4tub5j =
brnqslniho_idx_0 * tmp_e [ 1 ] ; c5gnm55e3f_idx_0 = gha5nk3fuu -
brnqslniho_idx_2 * pj5dx0krjn [ 1 ] ; pl4jpj0hcq = bhh1f5lzvq -
brnqslniho_idx_0 * pj5dx0krjn [ 2 ] ; c5gnm55e3f_idx_2 = cwtd4tub5j -
brnqslniho_idx_1 * pj5dx0krjn [ 0 ] ; if ( ssIsSampleHit ( S , 1 , 0 ) ) {
_rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 0 ] = _rtP -> caerwfkxfed . P_483 [
0 ] - _rtP -> caerwfkxfed . P_484 [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] .
nodqcwex4n [ 1 ] = _rtP -> caerwfkxfed . P_483 [ 1 ] - _rtP -> caerwfkxfed .
P_484 [ 1 ] ; _rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 2 ] = _rtP ->
caerwfkxfed . P_483 [ 2 ] - _rtP -> caerwfkxfed . P_484 [ 2 ] ; } gha5nk3fuu
= tmp_p [ 1 ] * _rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 2 ] ; bhh1f5lzvq =
tmp_p [ 2 ] * _rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 0 ] ; cwtd4tub5j =
tmp_p [ 0 ] * _rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 1 ] ; pj5dx0krjn [ 0 ]
= gha5nk3fuu - bhgkwh20ck [ 2 ] * _rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 1
] ; pj5dx0krjn [ 1 ] = bhh1f5lzvq - bhgkwh20ck [ 0 ] * _rtB -> caerwfkxfed [
0 ] . nodqcwex4n [ 2 ] ; pj5dx0krjn [ 2 ] = cwtd4tub5j - bhgkwh20ck [ 1 ] *
_rtB -> caerwfkxfed [ 0 ] . nodqcwex4n [ 0 ] ; gha5nk3fuu = _rtX ->
caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] * peirsr4iz0 [ 2 ] ;
bhh1f5lzvq = _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 2 ] *
peirsr4iz0 [ 0 ] ; cwtd4tub5j = _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
d44k1xtr5y [ 0 ] * peirsr4iz0 [ 1 ] ; j4aqh4ovvp = bhh1f5lzvq ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { for ( i = 0 ; i < 3 ; i ++ ) { _rtB ->
caerwfkxfed [ 0 ] . nqmkpysy0v [ 3 * i ] = kb4gbgtxnr [ 6 * i ] ; _rtB ->
caerwfkxfed [ 0 ] . nqmkpysy0v [ 1 + 3 * i ] = kb4gbgtxnr [ 6 * i + 1 ] ;
_rtB -> caerwfkxfed [ 0 ] . nqmkpysy0v [ 2 + 3 * i ] = kb4gbgtxnr [ 6 * i + 2
] ; } } for ( i = 0 ; i < 3 ; i ++ ) { tmp_e [ i ] = _rtB -> caerwfkxfed [ 0
] . coulb3gwb2 [ i + 6 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
d44k1xtr5y [ 2 ] + ( _rtB -> caerwfkxfed [ 0 ] . coulb3gwb2 [ i + 3 ] * _rtX
-> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] + _rtB ->
caerwfkxfed [ 0 ] . coulb3gwb2 [ i ] * _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . d44k1xtr5y [ 0 ] ) ; } fuirhvhf5t [ 0 ] = ( ( ( ( tmp_i [ 0 ]
+ c5gnm55e3f_idx_0 ) + pj5dx0krjn [ 0 ] ) + g5o314ttux [ 0 ] ) - tmp_e [ 0 ]
) - ( gha5nk3fuu - _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [
2 ] * peirsr4iz0 [ 1 ] ) ; fuirhvhf5t [ 1 ] = ( ( ( ( ( ( ( ( ( ( _rtP ->
caerwfkxfed . P_448 * pg4naehcgd + _rtB -> caerwfkxfed [ 0 ] . dqlk1105km ) +
_rtP -> caerwfkxfed . P_449 * cer2wchkb3 ) + _rtP -> caerwfkxfed . P_450 *
f03gfuzt3a ) + _rtP -> caerwfkxfed . P_451 * egqvaqn2aq ) + _rtP ->
caerwfkxfed . P_452 * ezloddc3bo ) + _rtP -> caerwfkxfed . P_453 * d4ajp443jd
) + _rtP -> caerwfkxfed . P_454 * brnqslniho_idx_1 * _rtB -> caerwfkxfed [ 0
] . a2240if1no / ( _rtP -> caerwfkxfed . P_456 * eog11ippyj ) ) * ( _rtP ->
caerwfkxfed . P_467 [ 1 ] * ewjdtgxpyu ) + ( k1qflq4l35_idx_0 -
mjmouk13zx_idx_1 ) ) + ( ( tmp_i [ 1 ] + pl4jpj0hcq ) + pj5dx0krjn [ 1 ] ) )
- tmp_e [ 1 ] ) - ( j4aqh4ovvp - _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ]
. d44k1xtr5y [ 0 ] * peirsr4iz0 [ 2 ] ) ; fuirhvhf5t [ 2 ] = ( ( ( ( tmp_i [
2 ] + c5gnm55e3f_idx_2 ) + pj5dx0krjn [ 2 ] ) + mcxhbnq5q4_idx_2 ) - tmp_e [
2 ] ) - ( cwtd4tub5j - _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
d44k1xtr5y [ 1 ] * peirsr4iz0 [ 0 ] ) ; rt_mrdivide_U1d1x3_U2d3x3_Yd1x3_snf (
fuirhvhf5t , _rtB -> caerwfkxfed [ 0 ] . nqmkpysy0v , _rtB -> caerwfkxfed [ 0
] . d0z30eq4uk ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [
0 ] . khrylyefqf = _rtP -> caerwfkxfed . P_485 ; } gha5nk3fuu = _rtP ->
caerwfkxfed . P_486 * _rtB -> caerwfkxfed [ 0 ] . dgovplry5h ; bhh1f5lzvq =
_rtP -> caerwfkxfed . P_487 * _rtB -> caerwfkxfed [ 0 ] . gfnrl0zrlf ;
cwtd4tub5j = _rtP -> caerwfkxfed . P_488 * _rtB -> caerwfkxfed [ 0 ] .
ffs3amb5xn ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] .
mz5xfnrd2e = _rtP -> caerwfkxfed . P_489 ; } { int_T i ; real_T GM , opt_m2ft
, deg2rad ; real_T * phi_ptr , * height_ptr ; boolean_T phi_wrapped = false ;
real_T * phi = ( real_T * ) & _rtDW -> caerwfkxfed [ 0 ] . ajhxm1vpta ;
real_T * h = ( real_T * ) & _rtDW -> caerwfkxfed [ 0 ] . cw3mgup5uj ;
height_ptr = ( real_T * ) & cwtd4tub5j ; phi_ptr = ( real_T * ) & gha5nk3fuu
; opt_m2ft = 1.0 ; deg2rad = 1.0 ; GM = ( do3swhr3tu . fyja3tv3qw == 0 ) ?
WGS84_GM_DEF : WGS84_GM_PRM ; { for ( i = 0 ; i < 1 ; i ++ ) { real_T fphi ,
pi_2 ; phi [ i ] = phi_ptr [ i ] * deg2rad ; h [ i ] = height_ptr [ i ] /
opt_m2ft ; if ( phi [ i ] > AERO_PI || phi [ i ] < - AERO_PI ) { phi [ i ] =
muDoubleScalarRem ( phi [ i ] + AERO_PI , 2.0 * AERO_PI ) - AERO_PI ; } fphi
= muDoubleScalarAbs ( phi [ i ] ) ; pi_2 = AERO_PI / 2.0 ; if ( fphi > pi_2 )
{ real_T sign = phi [ i ] / fphi ; phi_wrapped = true ; phi [ i ] = sign * (
pi_2 - ( fphi - pi_2 ) ) ; } else { phi_wrapped = false ; } }
wgs84_taylor_series ( h , phi , opt_m2ft , & _rtB -> caerwfkxfed [ 0 ] .
me1vmoag0n [ 2 ] , 1 ) ; _rtB -> caerwfkxfed [ 0 ] . me1vmoag0n [ 0 ] = _rtDW
-> caerwfkxfed [ 0 ] . cs2gys33vf ; _rtB -> caerwfkxfed [ 0 ] . me1vmoag0n [
1 ] = _rtDW -> caerwfkxfed [ 0 ] . cs2gys33vf ; } } if ( ssIsSampleHit ( S ,
1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . mqzhj1ejew = _rtP -> caerwfkxfed .
P_491 ; } gha5nk3fuu = _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
jo1on23gqr [ 1 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [
2 ] ; bhh1f5lzvq = _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . jo1on23gqr [
2 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 0 ] ;
cwtd4tub5j = _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . jo1on23gqr [ 0 ] *
_rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] ; peirsr4iz0 [
0 ] = gha5nk3fuu - _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . jo1on23gqr [
2 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] ;
peirsr4iz0 [ 1 ] = bhh1f5lzvq - _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
jo1on23gqr [ 0 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [
2 ] ; peirsr4iz0 [ 2 ] = cwtd4tub5j - _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . jo1on23gqr [ 1 ] * _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ]
. d44k1xtr5y [ 0 ] ; for ( i = 0 ; i < 3 ; i ++ ) { _rtB -> caerwfkxfed [ 0 ]
. hdtkkl5ebe [ i ] = ( ( ( ( _rtP -> caerwfkxfed . P_490 * _rtB ->
caerwfkxfed [ 0 ] . me1vmoag0n [ 0 ] * _rtB -> caerwfkxfed [ 0 ] . mqzhj1ejew
* gdgwwi2lmx [ i ] + _rtP -> caerwfkxfed . P_490 * _rtB -> caerwfkxfed [ 0 ]
. me1vmoag0n [ 1 ] * _rtB -> caerwfkxfed [ 0 ] . mqzhj1ejew * gdgwwi2lmx [ i
+ 3 ] ) + _rtP -> caerwfkxfed . P_490 * _rtB -> caerwfkxfed [ 0 ] .
me1vmoag0n [ 2 ] * _rtB -> caerwfkxfed [ 0 ] . mqzhj1ejew * gdgwwi2lmx [ i +
6 ] ) + tmp [ i ] ) + tmp_p [ i ] ) / _rtB -> caerwfkxfed [ 0 ] . khrylyefqf
+ peirsr4iz0 [ i ] ; } muDoubleScalarSinCos ( p3wzaspxbp [ 0 ] , & p3wzaspxbp
[ 0 ] , & peirsr4iz0 [ 0 ] ) ; muDoubleScalarSinCos ( p3wzaspxbp [ 1 ] , &
p3wzaspxbp [ 1 ] , & peirsr4iz0 [ 1 ] ) ; muDoubleScalarSinCos ( p3wzaspxbp [
2 ] , & p3wzaspxbp [ 2 ] , & peirsr4iz0 [ 2 ] ) ; _rtB -> caerwfkxfed [ 0 ] .
ot2vszsggr = ( _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 1 ]
* p3wzaspxbp [ 0 ] + _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y
[ 2 ] * peirsr4iz0 [ 0 ] ) * ( p3wzaspxbp [ 1 ] / peirsr4iz0 [ 1 ] ) + _rtX
-> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 0 ] ; _rtB ->
caerwfkxfed [ 0 ] . olgvycc4jd = ( _rtX -> caerwfkxfed [ _rtDW -> fbn0fcdbpe
] . d44k1xtr5y [ 1 ] * p3wzaspxbp [ 0 ] + _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . d44k1xtr5y [ 2 ] * peirsr4iz0 [ 0 ] ) / peirsr4iz0 [ 1 ] ;
_rtB -> caerwfkxfed [ 0 ] . mjpqsog0ro = _rtX -> caerwfkxfed [ _rtDW ->
fbn0fcdbpe ] . d44k1xtr5y [ 1 ] * peirsr4iz0 [ 0 ] - _rtX -> caerwfkxfed [
_rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 2 ] * p3wzaspxbp [ 0 ] ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . monbtv53u1 = _rtP
-> caerwfkxfed . P_492 ; _rtB -> caerwfkxfed [ 0 ] . cq20mjqm3z = _rtP ->
caerwfkxfed . P_493 ; } if ( hg4dcusulx >= _rtP -> caerwfkxfed . P_494 ) {
_rtB -> caerwfkxfed [ 0 ] . mnusal02dz = _rtB -> caerwfkxfed [ 0 ] .
monbtv53u1 ; } else { _rtB -> caerwfkxfed [ 0 ] . mnusal02dz = _rtB ->
caerwfkxfed [ 0 ] . cq20mjqm3z ; } if ( ssIsSampleHit ( S , 1 , 0 ) && ( _rtB
-> caerwfkxfed [ 0 ] . mnusal02dz != 0.0 ) ) { ssSetStopRequested ( S , 1 ) ;
} if ( _rtB -> caerwfkxfed [ 0 ] . gfnrl0zrlf > _rtP -> caerwfkxfed . P_495 )
{ _rtB -> caerwfkxfed [ 0 ] . l11n3l1iti = _rtP -> caerwfkxfed . P_495 ; }
else if ( _rtB -> caerwfkxfed [ 0 ] . gfnrl0zrlf < _rtP -> caerwfkxfed .
P_496 ) { _rtB -> caerwfkxfed [ 0 ] . l11n3l1iti = _rtP -> caerwfkxfed .
P_496 ; } else { _rtB -> caerwfkxfed [ 0 ] . l11n3l1iti = _rtB -> caerwfkxfed
[ 0 ] . gfnrl0zrlf ; } if ( _rtB -> caerwfkxfed [ 0 ] . dgovplry5h > _rtP ->
caerwfkxfed . P_497 ) { _rtB -> caerwfkxfed [ 0 ] . lpy2ha45as = _rtP ->
caerwfkxfed . P_497 ; } else if ( _rtB -> caerwfkxfed [ 0 ] . dgovplry5h <
_rtP -> caerwfkxfed . P_498 ) { _rtB -> caerwfkxfed [ 0 ] . lpy2ha45as = _rtP
-> caerwfkxfed . P_498 ; } else { _rtB -> caerwfkxfed [ 0 ] . lpy2ha45as =
_rtB -> caerwfkxfed [ 0 ] . dgovplry5h ; } gha5nk3fuu = _rtP -> caerwfkxfed .
P_499 * _rtB -> caerwfkxfed [ 0 ] . ffs3amb5xn ; if ( ssIsSampleHit ( S , 1 ,
0 ) ) { _rtB -> caerwfkxfed [ 0 ] . caa55dl1xf = _rtP -> caerwfkxfed . P_502
; } if ( gha5nk3fuu > _rtP -> caerwfkxfed . P_500 ) { j4aqh4ovvp = _rtP ->
caerwfkxfed . P_500 ; } else if ( gha5nk3fuu < _rtP -> caerwfkxfed . P_501 )
{ j4aqh4ovvp = _rtP -> caerwfkxfed . P_501 ; } else { j4aqh4ovvp = gha5nk3fuu
; } _rtB -> caerwfkxfed [ 0 ] . hel2ehlw33 = _rtP -> caerwfkxfed . P_503 *
j4aqh4ovvp ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { iabk2erc5l = _rtB ->
caerwfkxfed [ 0 ] . caa55dl1xf - _rtP -> caerwfkxfed . P_504 ; ht1jy4ffdq =
_rtDW -> caerwfkxfed [ 0 ] . hke2uzx4jz ; _rtB -> caerwfkxfed [ 0 ] .
kegwvi0rpb = ( _rtB -> caerwfkxfed [ 0 ] . caa55dl1xf != _rtDW -> caerwfkxfed
[ 0 ] . hke2uzx4jz ) ; } muDoubleScalarSinCos ( _rtP -> caerwfkxfed . P_506 *
_rtB -> caerwfkxfed [ 0 ] . l11n3l1iti , & _rtB -> caerwfkxfed [ 0 ] .
ftgfcsqogt [ 0 ] , & _rtB -> caerwfkxfed [ 0 ] . hih2zpt5el [ 0 ] ) ;
muDoubleScalarSinCos ( _rtP -> caerwfkxfed . P_506 * _rtB -> caerwfkxfed [ 0
] . lpy2ha45as , & _rtB -> caerwfkxfed [ 0 ] . ftgfcsqogt [ 1 ] , & _rtB ->
caerwfkxfed [ 0 ] . hih2zpt5el [ 1 ] ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) {
_rtB -> caerwfkxfed [ 0 ] . k5qpmhsj3h = _rtDW -> caerwfkxfed [ 0 ] .
eh3f4zmls1 ; } _rtB -> caerwfkxfed [ 0 ] . bezv1aajud = ( _rtB -> caerwfkxfed
[ 0 ] . l11n3l1iti != _rtB -> caerwfkxfed [ 0 ] . k5qpmhsj3h ) ; if (
ssIsSampleHit ( S , 1 , 0 ) && ssIsMajorTimeStep ( S ) ) { if ( _rtB ->
caerwfkxfed [ 0 ] . bezv1aajud ) { if ( ! _rtDW -> caerwfkxfed [ 0 ] .
itpx4k3l1x ) { _rtDW -> caerwfkxfed [ 0 ] . itpx4k3l1x = true ; } } else { if
( _rtDW -> caerwfkxfed [ 0 ] . itpx4k3l1x ) { _rtDW -> caerwfkxfed [ 0 ] .
itpx4k3l1x = false ; } } } if ( _rtDW -> caerwfkxfed [ 0 ] . itpx4k3l1x ) {
_rtB -> caerwfkxfed [ 0 ] . ddkpcgpld1 = _rtB -> caerwfkxfed [ 0 ] .
ftgfcsqogt [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . oi05vmfege = _rtB ->
caerwfkxfed [ 0 ] . hih2zpt5el [ 0 ] ; if ( ssIsSampleHit ( S , 1 , 0 ) ) {
for ( s251_iter = 1 ; s251_iter <= _rtP -> caerwfkxfed . P_55 ; s251_iter ++
) { if ( s251_iter > _rtP -> caerwfkxfed . P_56 ) { mjmouk13zx_idx_0 = _rtDW
-> caerwfkxfed [ 0 ] . iij0cqpz3x [ 0 ] ; mjmouk13zx_idx_1 = _rtDW ->
caerwfkxfed [ 0 ] . iij0cqpz3x [ 1 ] ; } else { mjmouk13zx_idx_0 = _rtB ->
caerwfkxfed [ 0 ] . oi05vmfege ; mjmouk13zx_idx_1 = _rtB -> caerwfkxfed [ 0 ]
. ddkpcgpld1 ; } i5dtnopdzy = mjmouk13zx_idx_0 * _rtB -> caerwfkxfed [ 0 ] .
ddkpcgpld1 + mjmouk13zx_idx_1 * _rtB -> caerwfkxfed [ 0 ] . oi05vmfege ; if (
s251_iter == 1 ) { for ( i = 0 ; i < 11 ; i ++ ) { po2mgfbnrk [ i ] = _rtP ->
caerwfkxfed . P_53 [ i ] ; oqfpopasi5 [ i ] = _rtP -> caerwfkxfed . P_57 [ i
] ; } } po2mgfbnrk [ s251_iter - 1 ] = i5dtnopdzy ; fy45xp05wx =
mjmouk13zx_idx_0 * _rtB -> caerwfkxfed [ 0 ] . oi05vmfege - mjmouk13zx_idx_1
* _rtB -> caerwfkxfed [ 0 ] . ddkpcgpld1 ; oqfpopasi5 [ s251_iter - 1 ] =
fy45xp05wx ; _rtDW -> caerwfkxfed [ 0 ] . iij0cqpz3x [ 0 ] = fy45xp05wx ;
_rtDW -> caerwfkxfed [ 0 ] . iij0cqpz3x [ 1 ] = i5dtnopdzy ; } for ( i = 0 ;
i < 11 ; i ++ ) { _rtB -> caerwfkxfed [ 0 ] . lj5hjdxqno [ i ] = _rtP ->
caerwfkxfed . P_60 * oqfpopasi5 [ i ] ; _rtB -> caerwfkxfed [ 0 ] .
mj5021tb34 [ i ] = _rtP -> caerwfkxfed . P_61 * po2mgfbnrk [ i ] ; } _rtB ->
caerwfkxfed [ 0 ] . fe2rjh22yy = _rtP -> caerwfkxfed . P_62 ; _rtB ->
caerwfkxfed [ 0 ] . a2tlwtflou = _rtP -> caerwfkxfed . P_63 ; } if (
ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] .
kim0w0fqtt ) ; } } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [
0 ] . hyykwo5yh2 = _rtDW -> caerwfkxfed [ 0 ] . bd2u1zxgbl ; _rtB ->
caerwfkxfed [ 0 ] . fyhidrqwq1 = _rtDW -> caerwfkxfed [ 0 ] . eiplfbwsnl ; }
_rtB -> caerwfkxfed [ 0 ] . fg2k5w4t4h = ( ( _rtB -> caerwfkxfed [ 0 ] .
lpy2ha45as != _rtB -> caerwfkxfed [ 0 ] . hyykwo5yh2 ) || ( _rtB ->
caerwfkxfed [ 0 ] . hel2ehlw33 != _rtB -> caerwfkxfed [ 0 ] . fyhidrqwq1 ) )
; i5dtnopdzy = _rtB -> caerwfkxfed [ 0 ] . ftgfcsqogt [ 1 ] * _rtB ->
caerwfkxfed [ 0 ] . ftgfcsqogt [ 1 ] ; fy45xp05wx = _rtB -> caerwfkxfed [ 0 ]
. hih2zpt5el [ 1 ] * _rtB -> caerwfkxfed [ 0 ] . hih2zpt5el [ 1 ] ; if (
ssIsSampleHit ( S , 1 , 0 ) && ssIsMajorTimeStep ( S ) ) { if ( _rtB ->
caerwfkxfed [ 0 ] . fg2k5w4t4h ) { if ( ! _rtDW -> caerwfkxfed [ 0 ] .
clj4atglwt ) { _rtDW -> caerwfkxfed [ 0 ] . clj4atglwt = true ; } } else { if
( _rtDW -> caerwfkxfed [ 0 ] . clj4atglwt ) { _rtDW -> caerwfkxfed [ 0 ] .
clj4atglwt = false ; } } } if ( _rtDW -> caerwfkxfed [ 0 ] . clj4atglwt ) {
if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . e1kq5pkbyj =
_rtP -> caerwfkxfed . P_69 * _rtP -> caerwfkxfed . P_69 ; _rtB -> caerwfkxfed
[ 0 ] . iojga44p03 = _rtP -> caerwfkxfed . P_70 * _rtP -> caerwfkxfed . P_70
; _rtB -> caerwfkxfed [ 0 ] . hkglrhqx35 = _rtB -> caerwfkxfed [ 0 ] .
iojga44p03 - _rtB -> caerwfkxfed [ 0 ] . e1kq5pkbyj ; } pl4jpj0hcq =
muDoubleScalarSqrt ( _rtB -> caerwfkxfed [ 0 ] . iojga44p03 - i5dtnopdzy *
_rtB -> caerwfkxfed [ 0 ] . hkglrhqx35 ) * _rtB -> caerwfkxfed [ 0 ] .
hel2ehlw33 ; jz4qqgqklu = _rtB -> caerwfkxfed [ 0 ] . iojga44p03 + pl4jpj0hcq
; pl4jpj0hcq += _rtB -> caerwfkxfed [ 0 ] . e1kq5pkbyj ; _rtB -> caerwfkxfed
[ 0 ] . duxoc3xdlj = _rtB -> caerwfkxfed [ 0 ] . ftgfcsqogt [ 1 ] /
muDoubleScalarSqrt ( jz4qqgqklu * jz4qqgqklu / ( pl4jpj0hcq * pl4jpj0hcq ) *
fy45xp05wx + i5dtnopdzy ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfed [ 0 ] . d30vrvdt22 = _rtP -> caerwfkxfed . P_71 ; } _rtB ->
caerwfkxfed [ 0 ] . dd2hl32zs0 = muDoubleScalarSqrt ( _rtB -> caerwfkxfed [ 0
] . d30vrvdt22 - _rtB -> caerwfkxfed [ 0 ] . duxoc3xdlj * _rtB -> caerwfkxfed
[ 0 ] . duxoc3xdlj ) ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW ->
caerwfkxfed [ 0 ] . hnf5uinkz4 ) ; } } if ( ssIsSampleHit ( S , 1 , 0 ) ) {
_rtDW -> caerwfkxfed [ 0 ] . j011fg2gb3 = 1U ; for ( s202_iter = 1 ;
s202_iter <= _rtP -> caerwfkxfed . P_577 ; s202_iter ++ ) { qY = s202_iter +
_rtP -> caerwfkxfed . P_576 ; if ( ( s202_iter < 0 ) && ( ( _rtP ->
caerwfkxfed . P_576 < 0 ) && ( qY >= 0 ) ) ) { qY = MIN_int32_T ; } else { if
( ( s202_iter > 0 ) && ( ( _rtP -> caerwfkxfed . P_576 > 0 ) && ( qY <= 0 ) )
) { qY = MAX_int32_T ; } } if ( _rtDW -> caerwfkxfed [ 0 ] . e3iwx01iqw [ 4 ]
!= 0 ) { if ( ssIsFirstInitCond ( S ) ) { _rtB -> caerwfkxfed [ 0 ] .
fuwyyk3ygs = _rtP -> caerwfkxfed . P_104 ; } if ( ssIsFirstInitCond ( S ) ) {
_rtB -> caerwfkxfed [ 0 ] . lbmlimu05u = _rtP -> caerwfkxfed . P_105 ; } }
for ( i = 0 ; i < 7 ; i ++ ) { _rtDW -> caerwfkxfed [ 0 ] . e3iwx01iqw [ i ]
= 1U ; } for ( s210_iter = 1 ; s210_iter <= qY ; s210_iter ++ ) { qY_f =
s210_iter - _rtP -> caerwfkxfed . P_575 ; if ( ( s210_iter < 0 ) && ( ( _rtP
-> caerwfkxfed . P_575 >= 0 ) && ( qY_f >= 0 ) ) ) { qY_f = MIN_int32_T ; }
else { if ( ( s210_iter >= 0 ) && ( ( _rtP -> caerwfkxfed . P_575 < 0 ) && (
qY_f < 0 ) ) ) { qY_f = MAX_int32_T ; } } o2xdurj54y = ( ( _rtB ->
caerwfkxfed [ 0 ] . dd2hl32zs0 == _rtP -> caerwfkxfed . P_102 ) && ( _rtP ->
caerwfkxfed . P_574 == qY_f ) ) ; if ( o2xdurj54y ) { if ( ! _rtDW ->
caerwfkxfed [ 0 ] . i0zutswifm ) { _rtDW -> caerwfkxfed [ 0 ] . i0zutswifm =
true ; } if ( s202_iter == 1 ) { _rtDW -> caerwfkxfed [ 0 ] . f5ljezdpql = 4
; } else { _rtDW -> caerwfkxfed [ 0 ] . kumsispcxc = 4 ; } _rtDW ->
caerwfkxfed [ 0 ] . kdoua33mmz = 4 ; } else { if ( _rtDW -> caerwfkxfed [ 0 ]
. i0zutswifm ) { _rtDW -> caerwfkxfed [ 0 ] . i0zutswifm = false ; } } if (
_rtB -> caerwfkxfed [ 0 ] . kegwvi0rpb ) { qY_j = qY_f + _rtP -> caerwfkxfed
. P_571 ; if ( ( qY_f < 0 ) && ( ( _rtP -> caerwfkxfed . P_571 < 0 ) && (
qY_j >= 0 ) ) ) { qY_j = MIN_int32_T ; } else { if ( ( qY_f > 0 ) && ( ( _rtP
-> caerwfkxfed . P_571 > 0 ) && ( qY_j <= 0 ) ) ) { qY_j = MAX_int32_T ; } }
s251_iter = qY_j - 1 ; qY_j = s202_iter + _rtP -> caerwfkxfed . P_570 ; if (
( s202_iter < 0 ) && ( ( _rtP -> caerwfkxfed . P_570 < 0 ) && ( qY_j >= 0 ) )
) { qY_j = MIN_int32_T ; } else { if ( ( s202_iter > 0 ) && ( ( _rtP ->
caerwfkxfed . P_570 > 0 ) && ( qY_j <= 0 ) ) ) { qY_j = MAX_int32_T ; } } i =
qY_j - 1 ; if ( _rtDW -> caerwfkxfed [ 0 ] . e3iwx01iqw [ 5 ] < 2 ) { _rtDW
-> caerwfkxfed [ 0 ] . e3iwx01iqw [ 5 ] = 2U ; memcpy ( & _rtB -> caerwfkxfed
[ 0 ] . h5oxnzzoju [ 0 ] , & _rtDW -> caerwfkxfed [ 0 ] . kjklqetho5 [ 0 ] ,
169U * sizeof ( real_T ) ) ; } _rtB -> caerwfkxfed [ 0 ] . h5oxnzzoju [
s251_iter + 13 * i ] = _rtP -> caerwfkxfed . P_95 [ 13 * i + s251_iter ] *
iabk2erc5l + _rtP -> caerwfkxfed . P_94 [ 13 * i + s251_iter ] ; for ( i = 0
; i < 169 ; i ++ ) { if ( s202_iter > _rtP -> caerwfkxfed . P_573 ) {
nosdiig03u [ i ] = _rtDW -> caerwfkxfed [ 0 ] . alepk0hj0a [ i ] ; } else {
nosdiig03u [ i ] = _rtP -> caerwfkxfed . P_97 [ i ] ; } } if ( qY_f != 0 ) {
qY_j = s202_iter + _rtP -> caerwfkxfed . P_572 ; if ( ( s202_iter < 0 ) && (
( _rtP -> caerwfkxfed . P_572 < 0 ) && ( qY_j >= 0 ) ) ) { qY_j = MIN_int32_T
; } else { if ( ( s202_iter > 0 ) && ( ( _rtP -> caerwfkxfed . P_572 > 0 ) &&
( qY_j <= 0 ) ) ) { qY_j = MAX_int32_T ; } } i = qY_j - 1 ; if ( _rtDW ->
caerwfkxfed [ 0 ] . e3iwx01iqw [ 6 ] < 2 ) { _rtDW -> caerwfkxfed [ 0 ] .
e3iwx01iqw [ 6 ] = 2U ; memcpy ( & _rtB -> caerwfkxfed [ 0 ] . a4x0qt0evj [ 0
] , & nosdiig03u [ 0 ] , 169U * sizeof ( real_T ) ) ; } _rtB -> caerwfkxfed [
0 ] . a4x0qt0evj [ i + 13 * ( qY_f - 1 ) ] = _rtP -> caerwfkxfed . P_95 [ (
qY_f - 1 ) * 13 + i ] * iabk2erc5l + _rtP -> caerwfkxfed . P_94 [ ( qY_f - 1
) * 13 + i ] ; for ( i = 0 ; i < 169 ; i ++ ) { augykoos5l [ i ] = _rtP ->
caerwfkxfed . P_91 * _rtB -> caerwfkxfed [ 0 ] . a4x0qt0evj [ i ] ; } _rtDW
-> caerwfkxfed [ 0 ] . mwzbhxf5ad = 4 ; } else { memcpy ( & augykoos5l [ 0 ]
, & nosdiig03u [ 0 ] , 169U * sizeof ( real_T ) ) ; _rtDW -> caerwfkxfed [ 0
] . fjwc31wtut = 4 ; } for ( i = 0 ; i < 169 ; i ++ ) { _rtB -> caerwfkxfed [
0 ] . kzffzxfjod [ i ] = _rtB -> caerwfkxfed [ 0 ] . h5oxnzzoju [ i ] +
augykoos5l [ i ] ; } _rtDW -> caerwfkxfed [ 0 ] . f1hduiwxi5 = 4 ; }
i5dtnopdzy = ( real_T ) qY_f + _rtP -> caerwfkxfed . P_103 ; tmp_m [ 0 ] =
_rtB -> caerwfkxfed [ 0 ] . fe2rjh22yy ; tmp_m [ 1 ] = _rtB -> caerwfkxfed [
0 ] . oi05vmfege ; l4b0e1ozlo [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . a2tlwtflou
; l4b0e1ozlo [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . ddkpcgpld1 ; for ( i = 0 ; i
< 11 ; i ++ ) { tmp_m [ i + 2 ] = _rtB -> caerwfkxfed [ 0 ] . lj5hjdxqno [ i
] ; l4b0e1ozlo [ i + 2 ] = _rtB -> caerwfkxfed [ 0 ] . mj5021tb34 [ i ] ; }
if ( qY_f == 0 ) { mjmouk13zx_idx_0 = ( real_T ) s202_iter + _rtP ->
caerwfkxfed . P_75 ; _rtB -> caerwfkxfed [ 0 ] . fuwyyk3ygs = _rtB ->
caerwfkxfed [ 0 ] . kzffzxfjod [ ( ( ( int32_T ) mjmouk13zx_idx_0 - 1 ) * 13
+ ( int32_T ) _rtP -> caerwfkxfed . P_75 ) - 1 ] * tmp_m [ ( int32_T )
i5dtnopdzy - 1 ] * _rtP -> caerwfkxfed . P_76 ; _rtB -> caerwfkxfed [ 0 ] .
lbmlimu05u = _rtB -> caerwfkxfed [ 0 ] . kzffzxfjod [ ( ( ( int32_T )
mjmouk13zx_idx_0 - 1 ) * 13 + ( int32_T ) _rtP -> caerwfkxfed . P_75 ) - 1 ]
* l4b0e1ozlo [ ( int32_T ) i5dtnopdzy - 1 ] * _rtP -> caerwfkxfed . P_77 ;
_rtDW -> caerwfkxfed [ 0 ] . igghyvehej = 4 ; } else { mjmouk13zx_idx_0 = (
real_T ) s202_iter + _rtP -> caerwfkxfed . P_78 ; mjmouk13zx_idx_1 = ( real_T
) qY_f + _rtP -> caerwfkxfed . P_78 ; _rtB -> caerwfkxfed [ 0 ] . fuwyyk3ygs
= _rtB -> caerwfkxfed [ 0 ] . kzffzxfjod [ ( ( ( int32_T ) mjmouk13zx_idx_0 -
1 ) * 13 + ( int32_T ) mjmouk13zx_idx_1 ) - 1 ] * tmp_m [ ( int32_T )
i5dtnopdzy - 1 ] + _rtB -> caerwfkxfed [ 0 ] . kzffzxfjod [ ( ( qY_f - 1 ) *
13 + ( int32_T ) ( ( real_T ) s202_iter + _rtP -> caerwfkxfed . P_79 ) ) - 1
] * l4b0e1ozlo [ ( int32_T ) i5dtnopdzy - 1 ] ; _rtB -> caerwfkxfed [ 0 ] .
lbmlimu05u = _rtB -> caerwfkxfed [ 0 ] . kzffzxfjod [ ( ( ( int32_T )
mjmouk13zx_idx_0 - 1 ) * 13 + ( int32_T ) mjmouk13zx_idx_1 ) - 1 ] *
l4b0e1ozlo [ ( int32_T ) i5dtnopdzy - 1 ] - _rtB -> caerwfkxfed [ 0 ] .
kzffzxfjod [ ( ( qY_f - 1 ) * 13 + ( int32_T ) ( ( real_T ) s202_iter + _rtP
-> caerwfkxfed . P_79 ) ) - 1 ] * tmp_m [ ( int32_T ) i5dtnopdzy - 1 ] ;
_rtDW -> caerwfkxfed [ 0 ] . inxhyguz35 = 4 ; } _rtB -> caerwfkxfed [ 0 ] .
c3sdn005w2 = _rtB -> caerwfkxfed [ 0 ] . fg2k5w4t4h ; if ( _rtB ->
caerwfkxfed [ 0 ] . c3sdn005w2 ) { qY_j = s202_iter + _rtP -> caerwfkxfed .
P_567 ; if ( ( s202_iter < 0 ) && ( ( _rtP -> caerwfkxfed . P_567 < 0 ) && (
qY_j >= 0 ) ) ) { qY_j = MIN_int32_T ; } else { if ( ( s202_iter > 0 ) && ( (
_rtP -> caerwfkxfed . P_567 > 0 ) && ( qY_j <= 0 ) ) ) { qY_j = MAX_int32_T ;
} } qY_g = qY_f + _rtP -> caerwfkxfed . P_567 ; if ( ( qY_f < 0 ) && ( ( _rtP
-> caerwfkxfed . P_567 < 0 ) && ( qY_g >= 0 ) ) ) { qY_g = MIN_int32_T ; }
else { if ( ( qY_f > 0 ) && ( ( _rtP -> caerwfkxfed . P_567 > 0 ) && ( qY_g
<= 0 ) ) ) { qY_g = MAX_int32_T ; } } if ( s202_iter == qY_f ) { qY_m = qY_f
- _rtP -> caerwfkxfed . P_556 ; if ( ( qY_f < 0 ) && ( ( _rtP -> caerwfkxfed
. P_556 >= 0 ) && ( qY_m >= 0 ) ) ) { qY_m = MIN_int32_T ; } else { if ( (
qY_f >= 0 ) && ( ( _rtP -> caerwfkxfed . P_556 < 0 ) && ( qY_m < 0 ) ) ) {
qY_m = MAX_int32_T ; } } s251_iter = mul_s32_s32_s32_sat ( _rtP ->
caerwfkxfed . P_557 , qY_m ) ; qY_m = s202_iter + s251_iter ; if ( (
s202_iter < 0 ) && ( ( s251_iter < 0 ) && ( qY_m >= 0 ) ) ) { qY_m =
MIN_int32_T ; } else { if ( ( s202_iter > 0 ) && ( ( s251_iter > 0 ) && (
qY_m <= 0 ) ) ) { qY_m = MAX_int32_T ; } } _rtB -> caerwfkxfed [ 0 ] .
b3uoo2ghc1 = _rtDW -> caerwfkxfed [ 0 ] . dneaxvt4b0 [ qY_m - 1 ] * _rtB ->
caerwfkxfed [ 0 ] . dd2hl32zs0 ; qY_m = s202_iter + s251_iter ; if ( (
s202_iter < 0 ) && ( ( s251_iter < 0 ) && ( qY_m >= 0 ) ) ) { qY_m =
MIN_int32_T ; } else { if ( ( s202_iter > 0 ) && ( ( s251_iter > 0 ) && (
qY_m <= 0 ) ) ) { qY_m = MAX_int32_T ; } } _rtB -> caerwfkxfed [ 0 ] .
dyhurjpq0i = _rtDW -> caerwfkxfed [ 0 ] . kkbrjpfk4c [ ( ( s202_iter - 1 ) *
13 + qY_f ) - 1 ] * _rtB -> caerwfkxfed [ 0 ] . dd2hl32zs0 + _rtDW ->
caerwfkxfed [ 0 ] . dneaxvt4b0 [ qY_m - 1 ] * _rtB -> caerwfkxfed [ 0 ] .
duxoc3xdlj ; _rtDW -> caerwfkxfed [ 0 ] . mhfcrlq0jr = 4 ; } else if ( (
s202_iter == 1 ) && ( qY_f == 0 ) ) { i = mul_s32_s32_s32_sat ( _rtP ->
caerwfkxfed . P_559 , 0 ) ; qY_f = 1 + i ; if ( ( i > 0 ) && ( qY_f <= 0 ) )
{ qY_f = MAX_int32_T ; } _rtB -> caerwfkxfed [ 0 ] . b3uoo2ghc1 = _rtDW ->
caerwfkxfed [ 0 ] . dneaxvt4b0 [ qY_f - 1 ] * _rtB -> caerwfkxfed [ 0 ] .
duxoc3xdlj ; i = mul_s32_s32_s32_sat ( _rtP -> caerwfkxfed . P_559 , 0 ) ;
qY_f = 1 + i ; if ( ( i > 0 ) && ( qY_f <= 0 ) ) { qY_f = MAX_int32_T ; }
_rtB -> caerwfkxfed [ 0 ] . dyhurjpq0i = _rtDW -> caerwfkxfed [ 0 ] .
kkbrjpfk4c [ _rtP -> caerwfkxfed . P_558 - 1 ] * _rtB -> caerwfkxfed [ 0 ] .
duxoc3xdlj - _rtDW -> caerwfkxfed [ 0 ] . dneaxvt4b0 [ qY_f - 1 ] * _rtB ->
caerwfkxfed [ 0 ] . dd2hl32zs0 ; _rtDW -> caerwfkxfed [ 0 ] . mvcumqx4b0 = 4
; } else { if ( ( s202_iter > 1 ) && ( s202_iter != qY_f ) ) { qY_m =
s202_iter - _rtP -> caerwfkxfed . P_561 ; if ( ( _rtP -> caerwfkxfed . P_561
< 0 ) && ( qY_m < 0 ) ) { qY_m = MAX_int32_T ; } i = qY_f + _rtP ->
caerwfkxfed . P_560 ; if ( ( qY_f < 0 ) && ( ( _rtP -> caerwfkxfed . P_560 <
0 ) && ( i >= 0 ) ) ) { i = MIN_int32_T ; } else { if ( ( qY_f > 0 ) && ( (
_rtP -> caerwfkxfed . P_560 > 0 ) && ( i <= 0 ) ) ) { i = MAX_int32_T ; } }
s251_iter = s202_iter + _rtP -> caerwfkxfed . P_563 ; if ( ( _rtP ->
caerwfkxfed . P_563 > 0 ) && ( s251_iter <= 0 ) ) { s251_iter = MAX_int32_T ;
} qY_i = qY_f + _rtP -> caerwfkxfed . P_563 ; if ( ( qY_f < 0 ) && ( ( _rtP
-> caerwfkxfed . P_563 < 0 ) && ( qY_i >= 0 ) ) ) { qY_i = MIN_int32_T ; }
else { if ( ( qY_f > 0 ) && ( ( _rtP -> caerwfkxfed . P_563 > 0 ) && ( qY_i
<= 0 ) ) ) { qY_i = MAX_int32_T ; } } gjwdsuon2d = mul_s32_s32_s32_sat ( _rtP
-> caerwfkxfed . P_565 , qY_f ) ; qY_e = s202_iter - _rtP -> caerwfkxfed .
P_562 ; if ( ( _rtP -> caerwfkxfed . P_562 < 0 ) && ( qY_e < 0 ) ) { qY_e =
MAX_int32_T ; } qY_p = s202_iter + gjwdsuon2d ; if ( ( gjwdsuon2d > 0 ) && (
qY_p <= 0 ) ) { qY_p = MAX_int32_T ; } if ( ( qY_e >= qY_f ) > _rtP ->
caerwfkxfed . P_82 ) { gwnuww4u05_idx_1 = _rtDW -> caerwfkxfed [ 0 ] .
kkbrjpfk4c [ ( ( qY_m - 1 ) * 13 + i ) - 1 ] ; } else { gwnuww4u05_idx_1 =
_rtP -> caerwfkxfed . P_80 ; } _rtB -> caerwfkxfed [ 0 ] . dyhurjpq0i = (
_rtDW -> caerwfkxfed [ 0 ] . kkbrjpfk4c [ ( ( s202_iter - 1 ) * 13 + i ) - 1
] * _rtB -> caerwfkxfed [ 0 ] . duxoc3xdlj - _rtDW -> caerwfkxfed [ 0 ] .
dneaxvt4b0 [ qY_p - 1 ] * _rtB -> caerwfkxfed [ 0 ] . dd2hl32zs0 ) - _rtP ->
caerwfkxfed . P_83 [ ( ( s251_iter - 1 ) * 13 + qY_i ) - 1 ] *
gwnuww4u05_idx_1 ; qY_m = s202_iter - _rtP -> caerwfkxfed . P_566 ; if ( (
_rtP -> caerwfkxfed . P_566 < 0 ) && ( qY_m < 0 ) ) { qY_m = MAX_int32_T ; }
if ( ( qY_m >= qY_f ) > _rtP -> caerwfkxfed . P_84 ) { qY_f = s202_iter -
_rtP -> caerwfkxfed . P_564 ; if ( ( _rtP -> caerwfkxfed . P_564 < 0 ) && (
qY_f < 0 ) ) { qY_f = MAX_int32_T ; } qY_m = qY_f + gjwdsuon2d ; if ( ( qY_f
< 0 ) && ( ( gjwdsuon2d < 0 ) && ( qY_m >= 0 ) ) ) { qY_m = MIN_int32_T ; }
else { if ( ( qY_f > 0 ) && ( ( gjwdsuon2d > 0 ) && ( qY_m <= 0 ) ) ) { qY_m
= MAX_int32_T ; } } gwnuww4u05_idx_1 = _rtDW -> caerwfkxfed [ 0 ] .
dneaxvt4b0 [ qY_m - 1 ] ; } else { gwnuww4u05_idx_1 = _rtP -> caerwfkxfed .
P_81 ; } qY_f = s202_iter + gjwdsuon2d ; if ( ( gjwdsuon2d > 0 ) && ( qY_f <=
0 ) ) { qY_f = MAX_int32_T ; } _rtB -> caerwfkxfed [ 0 ] . b3uoo2ghc1 = _rtDW
-> caerwfkxfed [ 0 ] . dneaxvt4b0 [ qY_f - 1 ] * _rtB -> caerwfkxfed [ 0 ] .
duxoc3xdlj - _rtP -> caerwfkxfed . P_83 [ ( ( s251_iter - 1 ) * 13 + qY_i ) -
1 ] * gwnuww4u05_idx_1 ; _rtDW -> caerwfkxfed [ 0 ] . cbw4t0yn4o = 4 ; } } if
( _rtDW -> caerwfkxfed [ 0 ] . e3iwx01iqw [ 2 ] < 2 ) { _rtDW -> caerwfkxfed
[ 0 ] . e3iwx01iqw [ 2 ] = 2U ; memcpy ( & _rtB -> caerwfkxfed [ 0 ] .
oomp1vxa3q [ 0 ] , & _rtDW -> caerwfkxfed [ 0 ] . kkbrjpfk4c [ 0 ] , 169U *
sizeof ( real_T ) ) ; } _rtB -> caerwfkxfed [ 0 ] . oomp1vxa3q [ ( qY_g + 13
* ( qY_j - 1 ) ) - 1 ] = _rtB -> caerwfkxfed [ 0 ] . dyhurjpq0i ; if ( _rtDW
-> caerwfkxfed [ 0 ] . e3iwx01iqw [ 3 ] < 2 ) { _rtDW -> caerwfkxfed [ 0 ] .
e3iwx01iqw [ 3 ] = 2U ; memcpy ( & _rtB -> caerwfkxfed [ 0 ] . hgjo31ls2t [ 0
] , & _rtDW -> caerwfkxfed [ 0 ] . dneaxvt4b0 [ 0 ] , 169U * sizeof ( real_T
) ) ; } qY_f = qY_g - _rtP -> caerwfkxfed . P_568 ; if ( ( qY_g < 0 ) && ( (
_rtP -> caerwfkxfed . P_568 >= 0 ) && ( qY_f >= 0 ) ) ) { qY_f = MIN_int32_T
; } else { if ( ( qY_g >= 0 ) && ( ( _rtP -> caerwfkxfed . P_568 < 0 ) && (
qY_f < 0 ) ) ) { qY_f = MAX_int32_T ; } } _rtB -> caerwfkxfed [ 0 ] .
hgjo31ls2t [ ( int32_T ) ( ( real_T ) qY_j + ( real_T ) mul_s32_s32_s32_sat (
_rtP -> caerwfkxfed . P_569 , qY_f ) ) - 1 ] = _rtB -> caerwfkxfed [ 0 ] .
b3uoo2ghc1 ; _rtDW -> caerwfkxfed [ 0 ] . ne4hlioaea = 4 ; } for ( i = 0 ; i
< 169 ; i ++ ) { if ( _rtB -> caerwfkxfed [ 0 ] . kegwvi0rpb ) { _rtDW ->
caerwfkxfed [ 0 ] . kjklqetho5 [ i ] = _rtB -> caerwfkxfed [ 0 ] . h5oxnzzoju
[ i ] ; _rtDW -> caerwfkxfed [ 0 ] . alepk0hj0a [ i ] = augykoos5l [ i ] ; }
if ( _rtB -> caerwfkxfed [ 0 ] . c3sdn005w2 ) { _rtDW -> caerwfkxfed [ 0 ] .
kkbrjpfk4c [ i ] = _rtB -> caerwfkxfed [ 0 ] . oomp1vxa3q [ i ] ; _rtDW ->
caerwfkxfed [ 0 ] . dneaxvt4b0 [ i ] = _rtB -> caerwfkxfed [ 0 ] . hgjo31ls2t
[ i ] ; } } _rtDW -> caerwfkxfed [ 0 ] . bpoec53nus = 4 ; } } _rtB ->
caerwfkxfed [ 0 ] . ozjlp2wjfe = _rtP -> caerwfkxfed . P_510 ; } gha5nk3fuu =
ssGetT ( S ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ]
. kcxkqactdo = _rtP -> caerwfkxfed . P_511 ; } gha5nk3fuu = ( gha5nk3fuu >=
_rtB -> caerwfkxfed [ 0 ] . kcxkqactdo ) ; if ( ssIsSampleHit ( S , 1 , 0 ) )
{ _rtB -> caerwfkxfed [ 0 ] . pnz2q4w1yy = _rtP -> caerwfkxfed . P_512 ; }
_rtB -> caerwfkxfed [ 0 ] . mfeq53x4cq = ( ( gha5nk3fuu != 0.0 ) && ( _rtB ->
caerwfkxfed [ 0 ] . pnz2q4w1yy != 0.0 ) ) ; if ( ssIsSampleHit ( S , 1 , 0 )
&& ssIsMajorTimeStep ( S ) ) { if ( _rtB -> caerwfkxfed [ 0 ] . mfeq53x4cq )
{ if ( ! _rtDW -> caerwfkxfed [ 0 ] . dtafal24mu ) { ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . dh1nyl2cji = _rtP -> caerwfkxfed . P_48 ; _rtDW ->
caerwfkxfed [ 0 ] . dtafal24mu = true ; } } else { if ( _rtDW -> caerwfkxfed
[ 0 ] . dtafal24mu ) { _rtDW -> caerwfkxfed [ 0 ] . dtafal24mu = false ; } }
} if ( _rtDW -> caerwfkxfed [ 0 ] . dtafal24mu ) { if ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . dh1nyl2cji >= _rtP -> caerwfkxfed . P_49 ) { if ( ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji != _rtP -> caerwfkxfed .
P_49 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji = _rtP ->
caerwfkxfed . P_49 ; ssSetSolverNeedsReset ( S ) ; } } else if ( ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji <= _rtP -> caerwfkxfed .
P_50 ) { if ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji != _rtP ->
caerwfkxfed . P_50 ) { ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
dh1nyl2cji = _rtP -> caerwfkxfed . P_50 ; ssSetSolverNeedsReset ( S ) ; } }
_rtB -> caerwfkxfed [ 0 ] . i5ioc5v3ei = ( ( f1xhd02yjc * ) ssGetContStates (
S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
fbn0fcdbpe ] . dh1nyl2cji ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC (
_rtDW -> caerwfkxfed [ 0 ] . feyylggvjp ) ; } } if ( ssIsSampleHit ( S , 1 ,
0 ) ) { _rtB -> caerwfkxfed [ 0 ] . hsb1ov2dtk = _rtP -> caerwfkxfed . P_513
; } _rtB -> caerwfkxfed [ 0 ] . o1xt3g2rns = ( ( gha5nk3fuu != 0.0 ) && (
_rtB -> caerwfkxfed [ 0 ] . hsb1ov2dtk != 0.0 ) ) ; gamgx1mju3 ( S , _rtB ->
caerwfkxfed [ 0 ] . o1xt3g2rns , & _rtB -> caerwfkxfed [ 0 ] . kjarfumpbl , &
_rtDW -> caerwfkxfed [ 0 ] . kjarfumpbl , ( bw1rqnuzxz * ) & _rtP ->
caerwfkxfed . kjarfumpbl , & ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
kjarfumpbl ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ]
. lct1ufq0pb = _rtP -> caerwfkxfed . P_514 ; } _rtB -> caerwfkxfed [ 0 ] .
pfioblig5k = ( ( gha5nk3fuu != 0.0 ) && ( _rtB -> caerwfkxfed [ 0 ] .
lct1ufq0pb != 0.0 ) ) ; gamgx1mju3 ( S , _rtB -> caerwfkxfed [ 0 ] .
pfioblig5k , & _rtB -> caerwfkxfed [ 0 ] . gamgx1mju3p , & _rtDW ->
caerwfkxfed [ 0 ] . gamgx1mju3p , ( bw1rqnuzxz * ) & _rtP -> caerwfkxfed .
gamgx1mju3p , & ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ (
( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . gamgx1mju3p ) ;
bhgkwh20ck [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] . ozjlp2wjfe -
muDoubleScalarCos ( _rtP -> caerwfkxfed . P_515 [ 0 ] * _rtB -> caerwfkxfed [
0 ] . i5ioc5v3ei ) ) * _rtP -> caerwfkxfed . P_516 [ 0 ] * _rtP ->
caerwfkxfed . P_517 ; bhgkwh20ck [ 1 ] = ( _rtB -> caerwfkxfed [ 0 ] .
ozjlp2wjfe - muDoubleScalarCos ( _rtP -> caerwfkxfed . P_515 [ 1 ] * _rtB ->
caerwfkxfed [ 0 ] . kjarfumpbl . nulslvd1ds ) ) * _rtP -> caerwfkxfed . P_516
[ 1 ] * _rtP -> caerwfkxfed . P_517 ; bhgkwh20ck [ 2 ] = ( _rtB ->
caerwfkxfed [ 0 ] . ozjlp2wjfe - muDoubleScalarCos ( _rtP -> caerwfkxfed .
P_515 [ 2 ] * _rtB -> caerwfkxfed [ 0 ] . gamgx1mju3p . nulslvd1ds ) ) * _rtP
-> caerwfkxfed . P_516 [ 2 ] * _rtP -> caerwfkxfed . P_517 ; phxjodriat =
_rtP -> caerwfkxfed . P_518 * hg4dcusulx ; ewjdtgxpyu = _rtP -> caerwfkxfed .
P_519 * eog11ippyj ; if ( phxjodriat > _rtP -> caerwfkxfed . P_520 ) {
gha5nk3fuu = _rtP -> caerwfkxfed . P_520 ; } else if ( phxjodriat < _rtP ->
caerwfkxfed . P_521 ) { gha5nk3fuu = _rtP -> caerwfkxfed . P_521 ; } else {
gha5nk3fuu = phxjodriat ; } i5dtnopdzy = 0.000823 * gha5nk3fuu + 0.177 ; if (
i5dtnopdzy < 0.0 ) { i5dtnopdzy = - muDoubleScalarPower ( - i5dtnopdzy , 1.2
) ; } else { i5dtnopdzy = muDoubleScalarPower ( i5dtnopdzy , 1.2 ) ; }
pg4naehcgd = gha5nk3fuu / i5dtnopdzy ; if ( ssIsSampleHit ( S , 1 , 0 ) ) {
ht1jy4ffdq = _rtP -> caerwfkxfed . P_522 ; _rtB -> caerwfkxfed [ 0 ] .
kf3hsqzexg = _rtP -> caerwfkxfed . P_523 * _rtP -> caerwfkxfed . P_522 ; } if
( phxjodriat > _rtP -> caerwfkxfed . P_524 ) { gwnuww4u05_idx_1 = _rtP ->
caerwfkxfed . P_524 ; } else if ( phxjodriat < _rtP -> caerwfkxfed . P_525 )
{ gwnuww4u05_idx_1 = _rtP -> caerwfkxfed . P_525 ; } else { gwnuww4u05_idx_1
= phxjodriat ; } i5dtnopdzy = 0.000823 * gwnuww4u05_idx_1 + 0.177 ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = _rtP -> caerwfkxfed . P_526 ;
_rtB -> caerwfkxfed [ 0 ] . cbo0ipw342 = _rtP -> caerwfkxfed . P_527 * _rtP
-> caerwfkxfed . P_526 * _rtP -> caerwfkxfed . P_528 ; } if ( i5dtnopdzy <
0.0 ) { i5dtnopdzy = - muDoubleScalarPower ( - i5dtnopdzy , 0.4 ) ; } else {
i5dtnopdzy = muDoubleScalarPower ( i5dtnopdzy , 0.4 ) ; } jz4qqgqklu = 1.0 /
i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] . cbo0ipw342 ; fph4c4pnan =
plook_bincpa ( phxjodriat , _rtP -> caerwfkxfed . P_529 , 11U , & bhh1f5lzvq
, & _rtDW -> caerwfkxfed [ 0 ] . kjzk51hic4 ) ; if ( ssIsSampleHit ( S , 1 ,
0 ) ) { ht1jy4ffdq = _rtP -> caerwfkxfed . P_530 ; _rtB -> caerwfkxfed [ 0 ]
. k42130iflm = plook_bincpa ( _rtP -> caerwfkxfed . P_530 , _rtP ->
caerwfkxfed . P_531 , 6U , & _rtB -> caerwfkxfed [ 0 ] . ia5svbhyaq , & _rtDW
-> caerwfkxfed [ 0 ] . jrx3i4do02 ) ; } i5dtnopdzy = bhh1f5lzvq ; frac [ 0 ]
= i5dtnopdzy ; i5dtnopdzy = _rtB -> caerwfkxfed [ 0 ] . ia5svbhyaq ; frac [ 1
] = i5dtnopdzy ; bpIndex [ 0 ] = fph4c4pnan ; bpIndex [ 1 ] = _rtB ->
caerwfkxfed [ 0 ] . k42130iflm ; pl4jpj0hcq = intrp2d_la_pw ( bpIndex , frac
, _rtP -> caerwfkxfed . P_532 , 12U , _rtP -> caerwfkxfed . P_579 ) ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . beyucqwvq3 [ 0 ]
= _rtP -> caerwfkxfed . P_536 [ 0 ] * _rtDW -> caerwfkxfed [ 0 ] . oxlqqwwlxq
[ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . beyucqwvq3 [ 1 ] = _rtP -> caerwfkxfed .
P_536 [ 1 ] * _rtDW -> caerwfkxfed [ 0 ] . oxlqqwwlxq [ 1 ] ; _rtB ->
caerwfkxfed [ 0 ] . beyucqwvq3 [ 2 ] = _rtP -> caerwfkxfed . P_536 [ 2 ] *
_rtDW -> caerwfkxfed [ 0 ] . oxlqqwwlxq [ 2 ] ; _rtB -> caerwfkxfed [ 0 ] .
aonhxubt5t = _rtP -> caerwfkxfed . P_537 ; if ( ssIsMajorTimeStep ( S ) ) {
if ( _rtB -> caerwfkxfed [ 0 ] . aonhxubt5t > 0.0 ) { if ( ! _rtDW ->
caerwfkxfed [ 0 ] . bbt2ziimvg ) { _rtDW -> caerwfkxfed [ 0 ] . bgonkmaxgg [
0 ] = _rtP -> caerwfkxfed . P_26 ; _rtDW -> caerwfkxfed [ 0 ] . bgonkmaxgg [
1 ] = _rtP -> caerwfkxfed . P_26 ; _rtDW -> caerwfkxfed [ 0 ] . bbt2ziimvg =
true ; } } else { if ( _rtDW -> caerwfkxfed [ 0 ] . bbt2ziimvg ) { _rtB ->
caerwfkxfed [ 0 ] . h5ibc1nv05 [ 0 ] = _rtP -> caerwfkxfed . P_22 ; _rtB ->
caerwfkxfed [ 0 ] . h5ibc1nv05 [ 1 ] = _rtP -> caerwfkxfed . P_22 ; _rtDW ->
caerwfkxfed [ 0 ] . bbt2ziimvg = false ; } } } } if ( _rtDW -> caerwfkxfed [
0 ] . bbt2ziimvg ) { mjmouk13zx_idx_0 = ewjdtgxpyu / pg4naehcgd ;
mjmouk13zx_idx_1 = ewjdtgxpyu / _rtB -> caerwfkxfed [ 0 ] . kf3hsqzexg ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . ecwssazfhs = _rtP
-> caerwfkxfed . P_24 ; _rtB -> caerwfkxfed [ 0 ] . mcj52p5pju [ 0 ] = _rtDW
-> caerwfkxfed [ 0 ] . bgonkmaxgg [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] .
mcj52p5pju [ 1 ] = _rtDW -> caerwfkxfed [ 0 ] . bgonkmaxgg [ 1 ] ; } _rtB ->
caerwfkxfed [ 0 ] . h5ibc1nv05 [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] .
ecwssazfhs - _rtP -> caerwfkxfed . P_25 * mjmouk13zx_idx_0 ) * _rtB ->
caerwfkxfed [ 0 ] . mcj52p5pju [ 0 ] + muDoubleScalarSqrt ( _rtP ->
caerwfkxfed . P_23 * mjmouk13zx_idx_0 ) * _rtB -> caerwfkxfed [ 0 ] .
beyucqwvq3 [ 0 ] * jz4qqgqklu ; _rtB -> caerwfkxfed [ 0 ] . h5ibc1nv05 [ 1 ]
= ( _rtB -> caerwfkxfed [ 0 ] . ecwssazfhs - _rtP -> caerwfkxfed . P_25 *
mjmouk13zx_idx_1 ) * _rtB -> caerwfkxfed [ 0 ] . mcj52p5pju [ 1 ] +
muDoubleScalarSqrt ( _rtP -> caerwfkxfed . P_23 * mjmouk13zx_idx_1 ) * _rtB
-> caerwfkxfed [ 0 ] . beyucqwvq3 [ 0 ] * pl4jpj0hcq ; if ( ssIsMajorTimeStep
( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] . lhw25prq2n ) ; } }
mjmouk13zx_idx_0 = _rtP -> caerwfkxfed . P_538 * pg4naehcgd ;
mjmouk13zx_idx_1 = _rtP -> caerwfkxfed . P_538 * _rtB -> caerwfkxfed [ 0 ] .
kf3hsqzexg ; if ( ssIsSampleHit ( S , 1 , 0 ) && ssIsMajorTimeStep ( S ) ) {
if ( _rtB -> caerwfkxfed [ 0 ] . aonhxubt5t > 0.0 ) { if ( ! _rtDW ->
caerwfkxfed [ 0 ] . cmieftitsl ) { _rtDW -> caerwfkxfed [ 0 ] . loeehoagwe [
0 ] = _rtP -> caerwfkxfed . P_21 ; _rtDW -> caerwfkxfed [ 0 ] . loeehoagwe [
1 ] = _rtP -> caerwfkxfed . P_21 ; _rtDW -> caerwfkxfed [ 0 ] . cmieftitsl =
true ; } } else { if ( _rtDW -> caerwfkxfed [ 0 ] . cmieftitsl ) { _rtB ->
caerwfkxfed [ 0 ] . jowycjebg2 [ 0 ] = _rtP -> caerwfkxfed . P_17 ; _rtB ->
caerwfkxfed [ 0 ] . jowycjebg2 [ 1 ] = _rtP -> caerwfkxfed . P_17 ; _rtDW ->
caerwfkxfed [ 0 ] . cmieftitsl = false ; } } } if ( _rtDW -> caerwfkxfed [ 0
] . cmieftitsl ) { mjmouk13zx_idx_0 = ewjdtgxpyu / mjmouk13zx_idx_0 ;
gwnuww4u05_idx_1 = ewjdtgxpyu / mjmouk13zx_idx_1 ; if ( ssIsSampleHit ( S , 1
, 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . f5wwroljmp = _rtP -> caerwfkxfed . P_19
; _rtB -> caerwfkxfed [ 0 ] . amjgll5c2n [ 0 ] = _rtDW -> caerwfkxfed [ 0 ] .
loeehoagwe [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . amjgll5c2n [ 1 ] = _rtDW ->
caerwfkxfed [ 0 ] . loeehoagwe [ 1 ] ; } _rtB -> caerwfkxfed [ 0 ] .
jowycjebg2 [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] . f5wwroljmp - _rtP ->
caerwfkxfed . P_20 * mjmouk13zx_idx_0 ) * _rtB -> caerwfkxfed [ 0 ] .
amjgll5c2n [ 0 ] + muDoubleScalarSqrt ( _rtP -> caerwfkxfed . P_18 *
mjmouk13zx_idx_0 ) * _rtB -> caerwfkxfed [ 0 ] . beyucqwvq3 [ 1 ] *
jz4qqgqklu ; _rtB -> caerwfkxfed [ 0 ] . jowycjebg2 [ 1 ] = ( _rtB ->
caerwfkxfed [ 0 ] . f5wwroljmp - _rtP -> caerwfkxfed . P_20 *
gwnuww4u05_idx_1 ) * _rtB -> caerwfkxfed [ 0 ] . amjgll5c2n [ 1 ] +
muDoubleScalarSqrt ( _rtP -> caerwfkxfed . P_18 * gwnuww4u05_idx_1 ) * _rtB
-> caerwfkxfed [ 0 ] . beyucqwvq3 [ 1 ] * pl4jpj0hcq ; if ( ssIsMajorTimeStep
( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] . par0q1t1dw ) ; } }
k1qflq4l35_idx_0 = _rtP -> caerwfkxfed . P_539 * gha5nk3fuu ;
mcxhbnq5q4_idx_2 = _rtP -> caerwfkxfed . P_539 * _rtB -> caerwfkxfed [ 0 ] .
kf3hsqzexg ; if ( ssIsSampleHit ( S , 1 , 0 ) && ssIsMajorTimeStep ( S ) ) {
if ( _rtB -> caerwfkxfed [ 0 ] . aonhxubt5t > 0.0 ) { if ( ! _rtDW ->
caerwfkxfed [ 0 ] . hty3xldkx0 ) { _rtDW -> caerwfkxfed [ 0 ] . eczfn4i2re [
0 ] = _rtP -> caerwfkxfed . P_16 ; _rtDW -> caerwfkxfed [ 0 ] . eczfn4i2re [
1 ] = _rtP -> caerwfkxfed . P_16 ; _rtDW -> caerwfkxfed [ 0 ] . hty3xldkx0 =
true ; } } else { if ( _rtDW -> caerwfkxfed [ 0 ] . hty3xldkx0 ) { _rtB ->
caerwfkxfed [ 0 ] . lc1o51rpx2 [ 0 ] = _rtP -> caerwfkxfed . P_12 ; _rtB ->
caerwfkxfed [ 0 ] . lc1o51rpx2 [ 1 ] = _rtP -> caerwfkxfed . P_12 ; _rtDW ->
caerwfkxfed [ 0 ] . hty3xldkx0 = false ; } } } if ( _rtDW -> caerwfkxfed [ 0
] . hty3xldkx0 ) { mjmouk13zx_idx_0 = ewjdtgxpyu / k1qflq4l35_idx_0 ;
mjmouk13zx_idx_1 = ewjdtgxpyu / mcxhbnq5q4_idx_2 ; if ( ssIsSampleHit ( S , 1
, 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . ipg03gmron = _rtP -> caerwfkxfed . P_14
; _rtB -> caerwfkxfed [ 0 ] . nw5fwgd1pc [ 0 ] = _rtDW -> caerwfkxfed [ 0 ] .
eczfn4i2re [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . nw5fwgd1pc [ 1 ] = _rtDW ->
caerwfkxfed [ 0 ] . eczfn4i2re [ 1 ] ; } _rtB -> caerwfkxfed [ 0 ] .
lc1o51rpx2 [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] . ipg03gmron - _rtP ->
caerwfkxfed . P_15 * mjmouk13zx_idx_0 ) * _rtB -> caerwfkxfed [ 0 ] .
nw5fwgd1pc [ 0 ] + muDoubleScalarSqrt ( _rtP -> caerwfkxfed . P_13 *
mjmouk13zx_idx_0 ) * _rtB -> caerwfkxfed [ 0 ] . beyucqwvq3 [ 2 ] * _rtB ->
caerwfkxfed [ 0 ] . cbo0ipw342 ; _rtB -> caerwfkxfed [ 0 ] . lc1o51rpx2 [ 1 ]
= ( _rtB -> caerwfkxfed [ 0 ] . ipg03gmron - _rtP -> caerwfkxfed . P_15 *
mjmouk13zx_idx_1 ) * _rtB -> caerwfkxfed [ 0 ] . nw5fwgd1pc [ 1 ] +
muDoubleScalarSqrt ( _rtP -> caerwfkxfed . P_13 * mjmouk13zx_idx_1 ) * _rtB
-> caerwfkxfed [ 0 ] . beyucqwvq3 [ 2 ] * pl4jpj0hcq ; if ( ssIsMajorTimeStep
( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] . efeekygzjb ) ; } } if (
ssIsSampleHit ( S , 1 , 0 ) ) { ht1jy4ffdq = _rtP -> caerwfkxfed . P_540 ;
_rtB -> caerwfkxfed [ 0 ] . bwurd2gbtq = _rtP -> caerwfkxfed . P_541 * _rtP
-> caerwfkxfed . P_540 ; } if ( ssIsMajorTimeStep ( S ) ) { if ( phxjodriat
<= 1000.0 ) { rtAction = 0 ; } else if ( phxjodriat >= 2000.0 ) { rtAction =
1 ; } else { rtAction = 2 ; } _rtDW -> caerwfkxfed [ 0 ] . a5jzici00a =
rtAction ; } else { rtAction = _rtDW -> caerwfkxfed [ 0 ] . a5jzici00a ; }
switch ( rtAction ) { case 0 : muDoubleScalarSinCos ( _rtB -> caerwfkxfed [ 0
] . bwurd2gbtq , & i5dtnopdzy , & fy45xp05wx ) ; j4aqh4ovvp = _rtB ->
caerwfkxfed [ 0 ] . h5ibc1nv05 [ 0 ] * fy45xp05wx - i5dtnopdzy * _rtB ->
caerwfkxfed [ 0 ] . jowycjebg2 [ 0 ] ; gwnuww4u05_idx_1 = _rtB -> caerwfkxfed
[ 0 ] . jowycjebg2 [ 0 ] * fy45xp05wx + i5dtnopdzy * _rtB -> caerwfkxfed [ 0
] . h5ibc1nv05 [ 0 ] ; for ( i = 0 ; i < 3 ; i ++ ) { mnz5fs4iuo [ i ] =
gdgwwi2lmx [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] . lc1o51rpx2 [ 0 ] + (
gdgwwi2lmx [ i + 3 ] * gwnuww4u05_idx_1 + gdgwwi2lmx [ i ] * j4aqh4ovvp ) ; }
if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] .
bm3giqpwcx ) ; } break ; case 1 : mnz5fs4iuo [ 0 ] = _rtP -> caerwfkxfed .
P_2 * _rtB -> caerwfkxfed [ 0 ] . h5ibc1nv05 [ 1 ] ; mnz5fs4iuo [ 1 ] = _rtP
-> caerwfkxfed . P_2 * _rtB -> caerwfkxfed [ 0 ] . jowycjebg2 [ 1 ] ;
mnz5fs4iuo [ 2 ] = _rtP -> caerwfkxfed . P_2 * _rtB -> caerwfkxfed [ 0 ] .
lc1o51rpx2 [ 1 ] ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW ->
caerwfkxfed [ 0 ] . pdazpvqxoc ) ; } break ; case 2 : muDoubleScalarSinCos (
_rtB -> caerwfkxfed [ 0 ] . bwurd2gbtq , & i5dtnopdzy , & fy45xp05wx ) ;
gwnuww4u05_idx_1 = _rtB -> caerwfkxfed [ 0 ] . h5ibc1nv05 [ 0 ] * fy45xp05wx
- i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] . jowycjebg2 [ 0 ] ; j4aqh4ovvp =
_rtB -> caerwfkxfed [ 0 ] . jowycjebg2 [ 0 ] * fy45xp05wx + i5dtnopdzy * _rtB
-> caerwfkxfed [ 0 ] . h5ibc1nv05 [ 0 ] ; for ( i = 0 ; i < 3 ; i ++ ) {
dw55yfpcss [ i ] = gdgwwi2lmx [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] .
lc1o51rpx2 [ 0 ] + ( gdgwwi2lmx [ i + 3 ] * j4aqh4ovvp + gdgwwi2lmx [ i ] *
gwnuww4u05_idx_1 ) ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB ->
caerwfkxfed [ 0 ] . m1v1gzrvau = _rtP -> caerwfkxfed . P_4 ; } i5dtnopdzy =
phxjodriat - _rtB -> caerwfkxfed [ 0 ] . m1v1gzrvau ; if ( ssIsSampleHit ( S
, 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . hkmffguw4p = _rtP -> caerwfkxfed .
P_5 ; } fy45xp05wx = _rtB -> caerwfkxfed [ 0 ] . hkmffguw4p - _rtB ->
caerwfkxfed [ 0 ] . m1v1gzrvau ; mnz5fs4iuo [ 0 ] = ( _rtB -> caerwfkxfed [ 0
] . h5ibc1nv05 [ 1 ] - dw55yfpcss [ 0 ] ) * i5dtnopdzy / fy45xp05wx +
dw55yfpcss [ 0 ] ; mnz5fs4iuo [ 1 ] = ( _rtB -> caerwfkxfed [ 0 ] .
jowycjebg2 [ 1 ] - dw55yfpcss [ 1 ] ) * i5dtnopdzy / fy45xp05wx + dw55yfpcss
[ 1 ] ; mnz5fs4iuo [ 2 ] = ( _rtB -> caerwfkxfed [ 0 ] . lc1o51rpx2 [ 1 ] -
dw55yfpcss [ 2 ] ) * i5dtnopdzy / fy45xp05wx + dw55yfpcss [ 2 ] ; if (
ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] .
mnfjb0ucn2 ) ; } break ; } _rtB -> caerwfkxfed [ 0 ] . gvnmxyua32 [ 0 ] =
_rtP -> caerwfkxfed . P_542 * mnz5fs4iuo [ 0 ] * _rtP -> caerwfkxfed . P_543
+ bhgkwh20ck [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . gvnmxyua32 [ 1 ] = _rtP ->
caerwfkxfed . P_542 * mnz5fs4iuo [ 1 ] * _rtP -> caerwfkxfed . P_543 +
bhgkwh20ck [ 1 ] ; _rtB -> caerwfkxfed [ 0 ] . gvnmxyua32 [ 2 ] = _rtP ->
caerwfkxfed . P_542 * mnz5fs4iuo [ 2 ] * _rtP -> caerwfkxfed . P_543 +
bhgkwh20ck [ 2 ] ; _rtB -> caerwfkxfed [ 0 ] . mybhz34gua = _rtP ->
caerwfkxfed . P_544 * eog11ippyj ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB
-> caerwfkxfed [ 0 ] . khxha2ntol = _rtP -> caerwfkxfed . P_545 ; _rtB ->
caerwfkxfed [ 0 ] . apm25utvxo = _rtP -> caerwfkxfed . P_546 ; _rtB ->
caerwfkxfed [ 0 ] . pntyymhgs0 = _rtP -> caerwfkxfed . P_547 ; _rtB ->
caerwfkxfed [ 0 ] . hjp0332nbb = _rtP -> caerwfkxfed . P_551 * _rtDW ->
caerwfkxfed [ 0 ] . idpd1gggpl ; ht1jy4ffdq = _rtP -> caerwfkxfed . P_552 ;
_rtB -> caerwfkxfed [ 0 ] . dx0ocaj4yi = _rtP -> caerwfkxfed . P_553 * _rtP
-> caerwfkxfed . P_552 ; if ( ssIsMajorTimeStep ( S ) ) { if ( _rtB ->
caerwfkxfed [ 0 ] . khxha2ntol > 0.0 ) { if ( ! _rtDW -> caerwfkxfed [ 0 ] .
fh1n4qqnhr ) { _rtDW -> caerwfkxfed [ 0 ] . kyo3cp5usa [ 0 ] = _rtP ->
caerwfkxfed . P_46 ; _rtDW -> caerwfkxfed [ 0 ] . kyo3cp5usa [ 1 ] = _rtP ->
caerwfkxfed . P_46 ; _rtDW -> caerwfkxfed [ 0 ] . fh1n4qqnhr = true ; } }
else { if ( _rtDW -> caerwfkxfed [ 0 ] . fh1n4qqnhr ) { _rtB -> caerwfkxfed [
0 ] . g3gadhyjyx [ 0 ] = _rtP -> caerwfkxfed . P_39 ; _rtB -> caerwfkxfed [ 0
] . g3gadhyjyx [ 1 ] = _rtP -> caerwfkxfed . P_39 ; _rtDW -> caerwfkxfed [ 0
] . fh1n4qqnhr = false ; } } } } if ( _rtDW -> caerwfkxfed [ 0 ] . fh1n4qqnhr
) { if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] .
p3x21dfs2h = _rtP -> caerwfkxfed . P_40 ; } k1qflq4l35_idx_0 *= _rtB ->
caerwfkxfed [ 0 ] . dx0ocaj4yi ; gwnuww4u05_idx_1 = mcxhbnq5q4_idx_2 * _rtB
-> caerwfkxfed [ 0 ] . dx0ocaj4yi ; mjmouk13zx_idx_0 = _rtB -> caerwfkxfed [
0 ] . p3x21dfs2h / muDoubleScalarSqrt ( k1qflq4l35_idx_0 ) ; mjmouk13zx_idx_1
= _rtB -> caerwfkxfed [ 0 ] . p3x21dfs2h / muDoubleScalarSqrt (
gwnuww4u05_idx_1 ) ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed
[ 0 ] . esjqctmunt = _rtP -> caerwfkxfed . P_42 ; _rtB -> caerwfkxfed [ 0 ] .
opllwgbfzt = _rtP -> caerwfkxfed . P_43 ; _rtB -> caerwfkxfed [ 0 ] .
dflvobdfwo = _rtP -> caerwfkxfed . P_44 ; } k1qflq4l35_idx_0 *= _rtB ->
caerwfkxfed [ 0 ] . dx0ocaj4yi ; gwnuww4u05_idx_1 *= _rtB -> caerwfkxfed [ 0
] . dx0ocaj4yi ; if ( ( k1qflq4l35_idx_0 < 0.0 ) && ( _rtB -> caerwfkxfed [ 0
] . dflvobdfwo > muDoubleScalarFloor ( _rtB -> caerwfkxfed [ 0 ] . dflvobdfwo
) ) ) { k1qflq4l35_idx_0 = - muDoubleScalarPower ( - k1qflq4l35_idx_0 , _rtB
-> caerwfkxfed [ 0 ] . dflvobdfwo ) ; } else { k1qflq4l35_idx_0 =
muDoubleScalarPower ( k1qflq4l35_idx_0 , _rtB -> caerwfkxfed [ 0 ] .
dflvobdfwo ) ; } k1qflq4l35_idx_0 = _rtB -> caerwfkxfed [ 0 ] . opllwgbfzt /
k1qflq4l35_idx_0 * _rtB -> caerwfkxfed [ 0 ] . cbo0ipw342 ; if (
ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . frllw3a51c [ 0 ]
= _rtDW -> caerwfkxfed [ 0 ] . kyo3cp5usa [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] .
frllw3a51c [ 1 ] = _rtDW -> caerwfkxfed [ 0 ] . kyo3cp5usa [ 1 ] ; } _rtB ->
caerwfkxfed [ 0 ] . g3gadhyjyx [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] .
esjqctmunt - _rtP -> caerwfkxfed . P_45 * mjmouk13zx_idx_0 ) * _rtB ->
caerwfkxfed [ 0 ] . frllw3a51c [ 0 ] + muDoubleScalarSqrt ( _rtP ->
caerwfkxfed . P_41 * mjmouk13zx_idx_0 ) * k1qflq4l35_idx_0 * _rtB ->
caerwfkxfed [ 0 ] . hjp0332nbb ; if ( ( gwnuww4u05_idx_1 < 0.0 ) && ( _rtB ->
caerwfkxfed [ 0 ] . dflvobdfwo > muDoubleScalarFloor ( _rtB -> caerwfkxfed [
0 ] . dflvobdfwo ) ) ) { gwnuww4u05_idx_1 = - muDoubleScalarPower ( -
gwnuww4u05_idx_1 , _rtB -> caerwfkxfed [ 0 ] . dflvobdfwo ) ; } else {
gwnuww4u05_idx_1 = muDoubleScalarPower ( gwnuww4u05_idx_1 , _rtB ->
caerwfkxfed [ 0 ] . dflvobdfwo ) ; } _rtB -> caerwfkxfed [ 0 ] . g3gadhyjyx [
1 ] = _rtB -> caerwfkxfed [ 0 ] . opllwgbfzt / gwnuww4u05_idx_1 * pl4jpj0hcq
* muDoubleScalarSqrt ( _rtP -> caerwfkxfed . P_41 * mjmouk13zx_idx_1 ) * _rtB
-> caerwfkxfed [ 0 ] . hjp0332nbb + ( _rtB -> caerwfkxfed [ 0 ] . esjqctmunt
- _rtP -> caerwfkxfed . P_45 * mjmouk13zx_idx_1 ) * _rtB -> caerwfkxfed [ 0 ]
. frllw3a51c [ 1 ] ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW ->
caerwfkxfed [ 0 ] . csisu0rlja ) ; } } if ( ssIsSampleHit ( S , 1 , 0 ) &&
ssIsMajorTimeStep ( S ) ) { if ( _rtB -> caerwfkxfed [ 0 ] . apm25utvxo > 0.0
) { if ( ! _rtDW -> caerwfkxfed [ 0 ] . bhpes5cxsx ) { _rtDW -> caerwfkxfed [
0 ] . i3mmplfdom [ 0 ] = _rtP -> caerwfkxfed . P_37 ; _rtDW -> caerwfkxfed [
0 ] . i3mmplfdom [ 1 ] = _rtP -> caerwfkxfed . P_37 ; _rtDW -> caerwfkxfed [
0 ] . mwvb4h5q5n [ 0 ] = _rtP -> caerwfkxfed . P_38 ; _rtDW -> caerwfkxfed [
0 ] . mwvb4h5q5n [ 1 ] = _rtP -> caerwfkxfed . P_38 ; _rtDW -> caerwfkxfed [
0 ] . bhpes5cxsx = true ; } } else { if ( _rtDW -> caerwfkxfed [ 0 ] .
bhpes5cxsx ) { _rtB -> caerwfkxfed [ 0 ] . h2by3upa5l [ 0 ] = _rtP ->
caerwfkxfed . P_33 ; _rtB -> caerwfkxfed [ 0 ] . h2by3upa5l [ 1 ] = _rtP ->
caerwfkxfed . P_33 ; _rtDW -> caerwfkxfed [ 0 ] . bhpes5cxsx = false ; } } }
if ( _rtDW -> caerwfkxfed [ 0 ] . bhpes5cxsx ) { if ( ssIsSampleHit ( S , 1 ,
0 ) ) { _rtB -> caerwfkxfed [ 0 ] . g3f0dchuqj = _rtP -> caerwfkxfed . P_34 ;
_rtB -> caerwfkxfed [ 0 ] . mwiwsf1apc = _rtP -> caerwfkxfed . P_35 * _rtB ->
caerwfkxfed [ 0 ] . dx0ocaj4yi ; } i5dtnopdzy = _rtB -> caerwfkxfed [ 0 ] .
g3f0dchuqj - ewjdtgxpyu / _rtB -> caerwfkxfed [ 0 ] . mwiwsf1apc * _rtP ->
caerwfkxfed . P_36 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed
[ 0 ] . frmpdgcfv0 [ 0 ] = _rtDW -> caerwfkxfed [ 0 ] . i3mmplfdom [ 0 ] ;
_rtB -> caerwfkxfed [ 0 ] . frmpdgcfv0 [ 1 ] = _rtDW -> caerwfkxfed [ 0 ] .
i3mmplfdom [ 1 ] ; _rtB -> caerwfkxfed [ 0 ] . mqhqr3n5i1 [ 0 ] = _rtDW ->
caerwfkxfed [ 0 ] . mwvb4h5q5n [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . mqhqr3n5i1
[ 1 ] = _rtDW -> caerwfkxfed [ 0 ] . mwvb4h5q5n [ 1 ] ; } _rtB -> caerwfkxfed
[ 0 ] . h2by3upa5l [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] . lc1o51rpx2 [ 0 ] -
_rtB -> caerwfkxfed [ 0 ] . mqhqr3n5i1 [ 0 ] ) / _rtB -> caerwfkxfed [ 0 ] .
mwiwsf1apc + i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] . frmpdgcfv0 [ 0 ] ; _rtB
-> caerwfkxfed [ 0 ] . h2by3upa5l [ 1 ] = ( _rtB -> caerwfkxfed [ 0 ] .
lc1o51rpx2 [ 1 ] - _rtB -> caerwfkxfed [ 0 ] . mqhqr3n5i1 [ 1 ] ) / _rtB ->
caerwfkxfed [ 0 ] . mwiwsf1apc + i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] .
frmpdgcfv0 [ 1 ] ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW ->
caerwfkxfed [ 0 ] . agc3pnp1ib ) ; } } if ( ssIsSampleHit ( S , 1 , 0 ) &&
ssIsMajorTimeStep ( S ) ) { if ( _rtB -> caerwfkxfed [ 0 ] . pntyymhgs0 > 0.0
) { if ( ! _rtDW -> caerwfkxfed [ 0 ] . mpzqla0as5 ) { _rtDW -> caerwfkxfed [
0 ] . cz0yulgjkl [ 0 ] = _rtP -> caerwfkxfed . P_31 ; _rtDW -> caerwfkxfed [
0 ] . cz0yulgjkl [ 1 ] = _rtP -> caerwfkxfed . P_31 ; _rtDW -> caerwfkxfed [
0 ] . gkupuf105z [ 0 ] = _rtP -> caerwfkxfed . P_32 ; _rtDW -> caerwfkxfed [
0 ] . gkupuf105z [ 1 ] = _rtP -> caerwfkxfed . P_32 ; _rtDW -> caerwfkxfed [
0 ] . mpzqla0as5 = true ; } } else { if ( _rtDW -> caerwfkxfed [ 0 ] .
mpzqla0as5 ) { _rtB -> caerwfkxfed [ 0 ] . pd4szq5but [ 0 ] = _rtP ->
caerwfkxfed . P_27 ; _rtB -> caerwfkxfed [ 0 ] . pd4szq5but [ 1 ] = _rtP ->
caerwfkxfed . P_27 ; _rtDW -> caerwfkxfed [ 0 ] . mpzqla0as5 = false ; } } }
if ( _rtDW -> caerwfkxfed [ 0 ] . mpzqla0as5 ) { if ( ssIsSampleHit ( S , 1 ,
0 ) ) { _rtB -> caerwfkxfed [ 0 ] . ljqoc4w0hs = _rtP -> caerwfkxfed . P_28 ;
_rtB -> caerwfkxfed [ 0 ] . flb02nduap = _rtP -> caerwfkxfed . P_29 * _rtB ->
caerwfkxfed [ 0 ] . dx0ocaj4yi ; } i5dtnopdzy = _rtB -> caerwfkxfed [ 0 ] .
ljqoc4w0hs - ewjdtgxpyu / _rtB -> caerwfkxfed [ 0 ] . flb02nduap * _rtP ->
caerwfkxfed . P_30 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB -> caerwfkxfed
[ 0 ] . hgtnawpzgo [ 0 ] = _rtDW -> caerwfkxfed [ 0 ] . cz0yulgjkl [ 0 ] ;
_rtB -> caerwfkxfed [ 0 ] . hgtnawpzgo [ 1 ] = _rtDW -> caerwfkxfed [ 0 ] .
cz0yulgjkl [ 1 ] ; _rtB -> caerwfkxfed [ 0 ] . hvfdxrbjkf [ 0 ] = _rtDW ->
caerwfkxfed [ 0 ] . gkupuf105z [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] . hvfdxrbjkf
[ 1 ] = _rtDW -> caerwfkxfed [ 0 ] . gkupuf105z [ 1 ] ; } _rtB -> caerwfkxfed
[ 0 ] . pd4szq5but [ 0 ] = ( _rtB -> caerwfkxfed [ 0 ] . jowycjebg2 [ 0 ] -
_rtB -> caerwfkxfed [ 0 ] . hvfdxrbjkf [ 0 ] ) / _rtB -> caerwfkxfed [ 0 ] .
flb02nduap + i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] . hgtnawpzgo [ 0 ] ; _rtB
-> caerwfkxfed [ 0 ] . pd4szq5but [ 1 ] = ( _rtB -> caerwfkxfed [ 0 ] .
jowycjebg2 [ 1 ] - _rtB -> caerwfkxfed [ 0 ] . hvfdxrbjkf [ 1 ] ) / _rtB ->
caerwfkxfed [ 0 ] . flb02nduap + i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] .
hgtnawpzgo [ 1 ] ; if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW ->
caerwfkxfed [ 0 ] . meggtxwxz0 ) ; } } if ( ssIsMajorTimeStep ( S ) ) { if (
phxjodriat <= 1000.0 ) { rtAction = 0 ; } else if ( phxjodriat >= 2000.0 ) {
rtAction = 1 ; } else { rtAction = 2 ; } _rtDW -> caerwfkxfed [ 0 ] .
ddio1hlsuy = rtAction ; } else { rtAction = _rtDW -> caerwfkxfed [ 0 ] .
ddio1hlsuy ; } switch ( rtAction ) { case 0 : muDoubleScalarSinCos ( _rtB ->
caerwfkxfed [ 0 ] . bwurd2gbtq , & i5dtnopdzy , & fy45xp05wx ) ; j4aqh4ovvp =
_rtB -> caerwfkxfed [ 0 ] . g3gadhyjyx [ 0 ] * fy45xp05wx - i5dtnopdzy * _rtB
-> caerwfkxfed [ 0 ] . h2by3upa5l [ 0 ] ; gwnuww4u05_idx_1 = _rtB ->
caerwfkxfed [ 0 ] . h2by3upa5l [ 0 ] * fy45xp05wx + i5dtnopdzy * _rtB ->
caerwfkxfed [ 0 ] . g3gadhyjyx [ 0 ] ; for ( i = 0 ; i < 3 ; i ++ ) {
pjk02b11oj [ i ] = gdgwwi2lmx [ i + 6 ] * _rtB -> caerwfkxfed [ 0 ] .
pd4szq5but [ 0 ] + ( gdgwwi2lmx [ i + 3 ] * gwnuww4u05_idx_1 + gdgwwi2lmx [ i
] * j4aqh4ovvp ) ; } if ( ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW ->
caerwfkxfed [ 0 ] . iga4kh2ofg ) ; } break ; case 1 : pjk02b11oj [ 0 ] = _rtP
-> caerwfkxfed . P_8 * _rtB -> caerwfkxfed [ 0 ] . g3gadhyjyx [ 1 ] ;
pjk02b11oj [ 1 ] = _rtP -> caerwfkxfed . P_8 * _rtB -> caerwfkxfed [ 0 ] .
h2by3upa5l [ 1 ] ; pjk02b11oj [ 2 ] = _rtP -> caerwfkxfed . P_8 * _rtB ->
caerwfkxfed [ 0 ] . pd4szq5but [ 1 ] ; if ( ssIsMajorTimeStep ( S ) ) {
srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] . gx1euzzgim ) ; } break ; case 2 :
muDoubleScalarSinCos ( _rtB -> caerwfkxfed [ 0 ] . bwurd2gbtq , & i5dtnopdzy
, & fy45xp05wx ) ; j4aqh4ovvp = _rtB -> caerwfkxfed [ 0 ] . g3gadhyjyx [ 0 ]
* fy45xp05wx - i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] . h2by3upa5l [ 0 ] ;
gwnuww4u05_idx_1 = _rtB -> caerwfkxfed [ 0 ] . h2by3upa5l [ 0 ] * fy45xp05wx
+ i5dtnopdzy * _rtB -> caerwfkxfed [ 0 ] . g3gadhyjyx [ 0 ] ; for ( i = 0 ; i
< 3 ; i ++ ) { bhgkwh20ck [ i ] = gdgwwi2lmx [ i + 6 ] * _rtB -> caerwfkxfed
[ 0 ] . pd4szq5but [ 0 ] + ( gdgwwi2lmx [ i + 3 ] * gwnuww4u05_idx_1 +
gdgwwi2lmx [ i ] * j4aqh4ovvp ) ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtB
-> caerwfkxfed [ 0 ] . a2uuga2dfg = _rtP -> caerwfkxfed . P_10 ; } i5dtnopdzy
= phxjodriat - _rtB -> caerwfkxfed [ 0 ] . a2uuga2dfg ; if ( ssIsSampleHit (
S , 1 , 0 ) ) { _rtB -> caerwfkxfed [ 0 ] . mqdowgy3ii = _rtP -> caerwfkxfed
. P_11 ; } fy45xp05wx = _rtB -> caerwfkxfed [ 0 ] . mqdowgy3ii - _rtB ->
caerwfkxfed [ 0 ] . a2uuga2dfg ; pjk02b11oj [ 0 ] = ( _rtB -> caerwfkxfed [ 0
] . g3gadhyjyx [ 1 ] - bhgkwh20ck [ 0 ] ) * i5dtnopdzy / fy45xp05wx +
bhgkwh20ck [ 0 ] ; pjk02b11oj [ 1 ] = ( _rtB -> caerwfkxfed [ 0 ] .
h2by3upa5l [ 1 ] - bhgkwh20ck [ 1 ] ) * i5dtnopdzy / fy45xp05wx + bhgkwh20ck
[ 1 ] ; pjk02b11oj [ 2 ] = ( _rtB -> caerwfkxfed [ 0 ] . pd4szq5but [ 1 ] -
bhgkwh20ck [ 2 ] ) * i5dtnopdzy / fy45xp05wx + bhgkwh20ck [ 2 ] ; if (
ssIsMajorTimeStep ( S ) ) { srUpdateBC ( _rtDW -> caerwfkxfed [ 0 ] .
d3au0bbrng ) ; } break ; } _rtB -> caerwfkxfed [ 0 ] . od4wetk20n [ 0 ] =
_rtP -> caerwfkxfed . P_554 * pjk02b11oj [ 0 ] ; _rtB -> caerwfkxfed [ 0 ] .
od4wetk20n [ 1 ] = _rtP -> caerwfkxfed . P_554 * pjk02b11oj [ 1 ] ; _rtB ->
caerwfkxfed [ 0 ] . od4wetk20n [ 2 ] = _rtP -> caerwfkxfed . P_554 *
pjk02b11oj [ 2 ] ; _rtB -> caerwfkxfed [ 0 ] . bs5vug3gvb = _rtP ->
caerwfkxfed . P_555 * d52lfbl3ao ; for ( i = 0 ; i < 6 ; i ++ ) { _rtB ->
kbsgd40wlv [ i + _rtDW -> fbn0fcdbpe * 6 ] = jbe23ejmq4 [ i ] ; }
ssCallAccelCopyCacheForIIS ( S , 47 , ( void * ) 0 ) ; _rtDW -> fbn0fcdbpe ++
; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { ssCallAccelRunBlock ( S , 57 , 25 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 26 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 27 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 28 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 29 ,
SS_CALL_MDL_OUTPUTS ) ; ssCallAccelRunBlock ( S , 57 , 30 ,
SS_CALL_MDL_OUTPUTS ) ; } UNUSED_PARAMETER ( tid ) ; }
#define MDL_UPDATE
static void mdlUpdate ( SimStruct * S , int_T tid ) { int32_T idxWidth ;
n3qi1whofz * _rtB ; loikxjbxjg * _rtP ; ew10rzwqr2 * _rtDW ; _rtDW = ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ; _rtP = ( ( loikxjbxjg * )
ssGetDefaultParam ( S ) ) ; _rtB = ( ( n3qi1whofz * ) _ssGetBlockIO ( S ) ) ;
if ( ssIsSampleHit ( S , 1 , 0 ) ) { } _rtDW -> bpzo543yxr = 0 ; while (
_rtDW -> bpzo543yxr < 2 ) { ssCallAccelCopyCacheForIIS ( S , 5 , ( void * ) 1
) ; _rtB -> kbid4ztlyb [ 0 ] = _rtB -> kity0pstnv [ _rtDW -> bpzo543yxr << 1
] ; _rtB -> kbid4ztlyb [ 1 ] = _rtB -> kity0pstnv [ ( _rtDW -> bpzo543yxr <<
1 ) + 1 ] ; _rtDW -> caerwfkxfe [ 0 ] . hjm4gwoouy . IcNeedsLoading = 0 ;
ssCallAccelCopyCacheForIIS ( S , 5 , ( void * ) 0 ) ; _rtDW -> bpzo543yxr ++
; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { } _rtDW -> poe1w2tyiw = 0 ; while (
_rtDW -> poe1w2tyiw < 2 ) { ssCallAccelCopyCacheForIIS ( S , 56 , ( void * )
1 ) ; _rtDW -> caerwfkxfedn [ 0 ] . mgblklkgqd . IcNeedsLoading = 0 ; _rtDW
-> caerwfkxfedn [ 0 ] . bhm5j1kbvg . IcNeedsLoading = 0 ; { real_T * *
uBuffer = ( real_T * * ) & _rtDW -> caerwfkxfedn [ 0 ] . m3pamfoj4l .
TUbufferPtrs [ 0 ] ; real_T * * tBuffer = ( real_T * * ) & _rtDW ->
caerwfkxfedn [ 0 ] . m3pamfoj4l . TUbufferPtrs [ 4 ] ; real_T * * xBuffer = (
NULL ) ; real_T simTime = ssGetT ( S ) ; real_T appliedDelay ; appliedDelay =
_rtB -> caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP ->
caerwfkxfedn . P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } _rtDW ->
caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 0 ] = ( ( _rtDW -> caerwfkxfedn [ 0
] . bsw4sh0ine . Head [ 0 ] < ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 0 ] - 1 ) ) ? ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 0 ] + 1 ) : 0 ) ; if ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head
[ 0 ] == _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 0 ] ) { if ( !
MultiVehicleModel_acc_rt_TDelayUpdateTailOrGrowBuf ( & _rtDW -> caerwfkxfedn
[ 0 ] . bsw4sh0ine . CircularBufSize [ 0 ] , & _rtDW -> caerwfkxfedn [ 0 ] .
bsw4sh0ine . Tail [ 0 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [
0 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 0 ] , simTime -
_rtP -> caerwfkxfedn . P_1 , tBuffer , uBuffer , xBuffer , ( boolean_T ) 0 ,
( boolean_T ) 0 , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . MaxNewBufSize
) ) { ssSetErrorStatus ( S , "vtdelay memory allocation error" ) ; return ; }
} ( * tBuffer ++ ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 0 ] ]
= simTime ; ( * uBuffer ++ ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 0 ] ] = _rtB -> caerwfkxfedn [ 0 ] . i4b0fffgqb [ 1 ] ; appliedDelay =
_rtB -> caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP ->
caerwfkxfedn . P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } _rtDW ->
caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 1 ] = ( ( _rtDW -> caerwfkxfedn [ 0
] . bsw4sh0ine . Head [ 1 ] < ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 1 ] - 1 ) ) ? ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 1 ] + 1 ) : 0 ) ; if ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head
[ 1 ] == _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 1 ] ) { if ( !
MultiVehicleModel_acc_rt_TDelayUpdateTailOrGrowBuf ( & _rtDW -> caerwfkxfedn
[ 0 ] . bsw4sh0ine . CircularBufSize [ 1 ] , & _rtDW -> caerwfkxfedn [ 0 ] .
bsw4sh0ine . Tail [ 1 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [
1 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 1 ] , simTime -
_rtP -> caerwfkxfedn . P_1 , tBuffer , uBuffer , xBuffer , ( boolean_T ) 0 ,
( boolean_T ) 0 , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . MaxNewBufSize
) ) { ssSetErrorStatus ( S , "vtdelay memory allocation error" ) ; return ; }
} ( * tBuffer ++ ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 1 ] ]
= simTime ; ( * uBuffer ++ ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 1 ] ] = _rtB -> caerwfkxfedn [ 0 ] . cnhz12lf03 ; appliedDelay = _rtB
-> caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP -> caerwfkxfedn
. P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } _rtDW -> caerwfkxfedn
[ 0 ] . bsw4sh0ine . Head [ 2 ] = ( ( _rtDW -> caerwfkxfedn [ 0 ] .
bsw4sh0ine . Head [ 2 ] < ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 2 ] - 1 ) ) ? ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 2 ] + 1 ) : 0 ) ; if ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head
[ 2 ] == _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 2 ] ) { if ( !
MultiVehicleModel_acc_rt_TDelayUpdateTailOrGrowBuf ( & _rtDW -> caerwfkxfedn
[ 0 ] . bsw4sh0ine . CircularBufSize [ 2 ] , & _rtDW -> caerwfkxfedn [ 0 ] .
bsw4sh0ine . Tail [ 2 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [
2 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 2 ] , simTime -
_rtP -> caerwfkxfedn . P_1 , tBuffer , uBuffer , xBuffer , ( boolean_T ) 0 ,
( boolean_T ) 0 , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . MaxNewBufSize
) ) { ssSetErrorStatus ( S , "vtdelay memory allocation error" ) ; return ; }
} ( * tBuffer ++ ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 2 ] ]
= simTime ; ( * uBuffer ++ ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 2 ] ] = _rtB -> caerwfkxfedn [ 0 ] . jrvxsg5s30 ; appliedDelay = _rtB
-> caerwfkxfedn [ 0 ] . alncatz4jq ; if ( appliedDelay > _rtP -> caerwfkxfedn
. P_1 ) { appliedDelay = _rtP -> caerwfkxfedn . P_1 ; } _rtDW -> caerwfkxfedn
[ 0 ] . bsw4sh0ine . Head [ 3 ] = ( ( _rtDW -> caerwfkxfedn [ 0 ] .
bsw4sh0ine . Head [ 3 ] < ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
CircularBufSize [ 3 ] - 1 ) ) ? ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine .
Head [ 3 ] + 1 ) : 0 ) ; if ( _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head
[ 3 ] == _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Tail [ 3 ] ) { if ( !
MultiVehicleModel_acc_rt_TDelayUpdateTailOrGrowBuf ( & _rtDW -> caerwfkxfedn
[ 0 ] . bsw4sh0ine . CircularBufSize [ 3 ] , & _rtDW -> caerwfkxfedn [ 0 ] .
bsw4sh0ine . Tail [ 3 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [
3 ] , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Last [ 3 ] , simTime -
_rtP -> caerwfkxfedn . P_1 , tBuffer , uBuffer , xBuffer , ( boolean_T ) 0 ,
( boolean_T ) 0 , & _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . MaxNewBufSize
) ) { ssSetErrorStatus ( S , "vtdelay memory allocation error" ) ; return ; }
} ( * tBuffer ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 3 ] ] =
simTime ; ( * uBuffer ) [ _rtDW -> caerwfkxfedn [ 0 ] . bsw4sh0ine . Head [ 3
] ] = _rtB -> caerwfkxfedn [ 0 ] . bcbfy2i3tg ; } ssCallAccelCopyCacheForIIS
( S , 56 , ( void * ) 0 ) ; _rtDW -> poe1w2tyiw ++ ; } if ( ssIsSampleHit ( S
, 1 , 0 ) ) { } _rtDW -> fbn0fcdbpe = 0 ; while ( _rtDW -> fbn0fcdbpe < 1 ) {
ssCallAccelCopyCacheForIIS ( S , 47 , ( void * ) 1 ) ; _rtB -> o1jfak3lo1 [ 0
] = _rtB -> eyhhjczxkk [ 0 ] ; _rtB -> o1jfak3lo1 [ 1 ] = _rtB -> eyhhjczxkk
[ 1 ] ; _rtB -> o1jfak3lo1 [ 2 ] = _rtB -> eyhhjczxkk [ 2 ] ; _rtB ->
o1jfak3lo1 [ 3 ] = _rtB -> eyhhjczxkk [ 3 ] ; if ( ssIsSampleHit ( S , 1 , 0
) ) { _rtDW -> caerwfkxfed [ 0 ] . ng1z2jrijs += _rtP -> caerwfkxfed . P_107
* _rtB -> caerwfkxfed [ 0 ] . c4m3fnbvli ; _rtDW -> caerwfkxfed [ 0 ] .
nj0axyifa2 += _rtP -> caerwfkxfed . P_110 * _rtB -> caerwfkxfed [ 0 ] .
mc3sfrfenr ; } _rtDW -> caerwfkxfed [ 0 ] . fz52nilcra . IcNeedsLoading = 0 ;
if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] . gtkkyzyaof
= ( _rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 9 ] - _rtP -> caerwfkxfed .
P_117 [ 1 ] * _rtDW -> caerwfkxfed [ 0 ] . gtkkyzyaof ) / _rtP -> caerwfkxfed
. P_117 [ 0 ] ; for ( idxWidth = 0 ; idxWidth < 19 ; idxWidth ++ ) { _rtDW ->
caerwfkxfed [ 0 ] . ecr3a224ty [ ( uint32_T ) idxWidth ] = _rtDW ->
caerwfkxfed [ 0 ] . ecr3a224ty [ 19U + idxWidth ] ; } memcpy ( & _rtDW ->
caerwfkxfed [ 0 ] . ecr3a224ty [ 19 ] , & _rtB -> caerwfkxfed [ 0 ] .
lryuogk5kz [ 0 ] , 19U * sizeof ( real_T ) ) ; } _rtDW -> caerwfkxfed [ 0 ] .
ippukhhcqi . IcNeedsLoading = 0 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW
-> caerwfkxfed [ 0 ] . pdjtn40ptq += _rtP -> caerwfkxfed . P_135 * _rtB ->
caerwfkxfed [ 0 ] . ndsw5rbzw5 ; } _rtDW -> caerwfkxfed [ 0 ] . mdtrpadce1 .
IcNeedsLoading = 0 ; _rtDW -> caerwfkxfed [ 0 ] . ezyys0x2oe . IcNeedsLoading
= 0 ; _rtDW -> caerwfkxfed [ 0 ] . o5qsrxtfr0 . IcNeedsLoading = 0 ; _rtDW ->
caerwfkxfed [ 0 ] . buaseqaif4 . IcNeedsLoading = 0 ; if ( ssIsSampleHit ( S
, 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] . iuvpzqdghs = _rtDW -> caerwfkxfed
[ 0 ] . fy2knprxfh ; } _rtDW -> caerwfkxfed [ 0 ] . mfyayib1vs .
IcNeedsLoading = 0 ; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW ->
caerwfkxfed [ 0 ] . itm1fber1d += _rtP -> caerwfkxfed . P_181 * _rtB ->
caerwfkxfed [ 0 ] . iq4tus41ez ; _rtDW -> caerwfkxfed [ 0 ] . kvy3yj5nb3 = (
_rtB -> caerwfkxfed [ 0 ] . ldtz5l21bv [ 10 ] - _rtP -> caerwfkxfed . P_186 [
1 ] * _rtDW -> caerwfkxfed [ 0 ] . kvy3yj5nb3 ) / _rtP -> caerwfkxfed . P_186
[ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] . jwmgh2kg2m = rt_nrand_Upu32_Yd_f_pw_snf
( & _rtDW -> caerwfkxfed [ 0 ] . oowjxn5bpe ) * _rtP -> caerwfkxfed . P_248 +
_rtP -> caerwfkxfed . P_247 ; _rtDW -> caerwfkxfed [ 0 ] . fhehrp2bxm [ 0 ] =
_rtB -> caerwfkxfed [ 0 ] . od4wetk20n [ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] .
fhehrp2bxm [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . od4wetk20n [ 1 ] ; _rtDW ->
caerwfkxfed [ 0 ] . fhehrp2bxm [ 2 ] = _rtB -> caerwfkxfed [ 0 ] . od4wetk20n
[ 2 ] ; _rtDW -> caerwfkxfed [ 0 ] . kcxjckmad1 = rt_nrand_Upu32_Yd_f_pw_snf
( & _rtDW -> caerwfkxfed [ 0 ] . hn5qi2vxwm ) * _rtP -> caerwfkxfed . P_258 +
_rtP -> caerwfkxfed . P_257 ; _rtDW -> caerwfkxfed [ 0 ] . ecmyxunq25 =
rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ] . jtvcy50o1r ) *
_rtP -> caerwfkxfed . P_266 + _rtP -> caerwfkxfed . P_265 ; _rtDW ->
caerwfkxfed [ 0 ] . o1dm2gnr44 = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW ->
caerwfkxfed [ 0 ] . hltfskcdzq ) * _rtP -> caerwfkxfed . P_274 + _rtP ->
caerwfkxfed . P_273 ; _rtDW -> caerwfkxfed [ 0 ] . mbdfohgcix [ 0 ] = _rtB ->
caerwfkxfed [ 0 ] . gvnmxyua32 [ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] .
mbdfohgcix [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . gvnmxyua32 [ 1 ] ; _rtDW ->
caerwfkxfed [ 0 ] . mbdfohgcix [ 2 ] = _rtB -> caerwfkxfed [ 0 ] . gvnmxyua32
[ 2 ] ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] .
n5w1vbpkm1 = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ] .
ic4dmdfvpt ) * _rtP -> caerwfkxfed . P_372 + _rtP -> caerwfkxfed . P_371 ;
_rtDW -> caerwfkxfed [ 0 ] . ii3efjiukm = rt_nrand_Upu32_Yd_f_pw_snf ( &
_rtDW -> caerwfkxfed [ 0 ] . nxeftxvgnt ) * _rtP -> caerwfkxfed . P_380 +
_rtP -> caerwfkxfed . P_379 ; _rtDW -> caerwfkxfed [ 0 ] . anzbkhzxt1 =
rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ] . hpidrxtvg5 ) *
_rtP -> caerwfkxfed . P_388 + _rtP -> caerwfkxfed . P_387 ; _rtDW ->
caerwfkxfed [ 0 ] . jfa2ekpuah = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW ->
caerwfkxfed [ 0 ] . muraaxxixm ) * _rtP -> caerwfkxfed . P_397 + _rtP ->
caerwfkxfed . P_396 ; _rtDW -> caerwfkxfed [ 0 ] . eded13czzw =
rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ] . pvl1czxv5b ) *
_rtP -> caerwfkxfed . P_405 + _rtP -> caerwfkxfed . P_404 ; _rtDW ->
caerwfkxfed [ 0 ] . fgy225ioz4 = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW ->
caerwfkxfed [ 0 ] . gugm2rdkq4 ) * _rtP -> caerwfkxfed . P_413 + _rtP ->
caerwfkxfed . P_412 ; _rtDW -> caerwfkxfed [ 0 ] . hke2uzx4jz = _rtB ->
caerwfkxfed [ 0 ] . caa55dl1xf ; _rtDW -> caerwfkxfed [ 0 ] . eh3f4zmls1 =
_rtB -> caerwfkxfed [ 0 ] . l11n3l1iti ; _rtDW -> caerwfkxfed [ 0 ] .
bd2u1zxgbl = _rtB -> caerwfkxfed [ 0 ] . lpy2ha45as ; _rtDW -> caerwfkxfed [
0 ] . eiplfbwsnl = _rtB -> caerwfkxfed [ 0 ] . hel2ehlw33 ; } if ( _rtDW ->
caerwfkxfed [ 0 ] . dtafal24mu ) { } mn1012evq4 ( & _rtDW -> caerwfkxfed [ 0
] . kjarfumpbl ) ; mn1012evq4 ( & _rtDW -> caerwfkxfed [ 0 ] . gamgx1mju3p )
; if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] .
oxlqqwwlxq [ 0 ] = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ]
. kzcbnxj5n5 [ 0 ] ) * _rtP -> caerwfkxfed . P_534 + _rtP -> caerwfkxfed .
P_533 ; _rtDW -> caerwfkxfed [ 0 ] . oxlqqwwlxq [ 1 ] =
rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ] . kzcbnxj5n5 [ 1 ]
) * _rtP -> caerwfkxfed . P_534 + _rtP -> caerwfkxfed . P_533 ; _rtDW ->
caerwfkxfed [ 0 ] . oxlqqwwlxq [ 2 ] = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW
-> caerwfkxfed [ 0 ] . kzcbnxj5n5 [ 2 ] ) * _rtP -> caerwfkxfed . P_534 +
_rtP -> caerwfkxfed . P_533 ; } if ( _rtDW -> caerwfkxfed [ 0 ] . bbt2ziimvg
&& ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] . bgonkmaxgg [
0 ] = _rtB -> caerwfkxfed [ 0 ] . h5ibc1nv05 [ 0 ] ; _rtDW -> caerwfkxfed [ 0
] . bgonkmaxgg [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . h5ibc1nv05 [ 1 ] ; } if (
_rtDW -> caerwfkxfed [ 0 ] . cmieftitsl && ssIsSampleHit ( S , 1 , 0 ) ) {
_rtDW -> caerwfkxfed [ 0 ] . loeehoagwe [ 0 ] = _rtB -> caerwfkxfed [ 0 ] .
jowycjebg2 [ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] . loeehoagwe [ 1 ] = _rtB ->
caerwfkxfed [ 0 ] . jowycjebg2 [ 1 ] ; } if ( _rtDW -> caerwfkxfed [ 0 ] .
hty3xldkx0 && ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] .
eczfn4i2re [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . lc1o51rpx2 [ 0 ] ; _rtDW ->
caerwfkxfed [ 0 ] . eczfn4i2re [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . lc1o51rpx2
[ 1 ] ; } if ( ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] .
idpd1gggpl = rt_nrand_Upu32_Yd_f_pw_snf ( & _rtDW -> caerwfkxfed [ 0 ] .
pwtau02qvo ) * _rtP -> caerwfkxfed . P_549 + _rtP -> caerwfkxfed . P_548 ; }
if ( _rtDW -> caerwfkxfed [ 0 ] . fh1n4qqnhr && ssIsSampleHit ( S , 1 , 0 ) )
{ _rtDW -> caerwfkxfed [ 0 ] . kyo3cp5usa [ 0 ] = _rtB -> caerwfkxfed [ 0 ] .
g3gadhyjyx [ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] . kyo3cp5usa [ 1 ] = _rtB ->
caerwfkxfed [ 0 ] . g3gadhyjyx [ 1 ] ; } if ( _rtDW -> caerwfkxfed [ 0 ] .
bhpes5cxsx && ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] .
i3mmplfdom [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . h2by3upa5l [ 0 ] ; _rtDW ->
caerwfkxfed [ 0 ] . i3mmplfdom [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . h2by3upa5l
[ 1 ] ; _rtDW -> caerwfkxfed [ 0 ] . mwvb4h5q5n [ 0 ] = _rtB -> caerwfkxfed [
0 ] . lc1o51rpx2 [ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] . mwvb4h5q5n [ 1 ] = _rtB
-> caerwfkxfed [ 0 ] . lc1o51rpx2 [ 1 ] ; } if ( _rtDW -> caerwfkxfed [ 0 ] .
mpzqla0as5 && ssIsSampleHit ( S , 1 , 0 ) ) { _rtDW -> caerwfkxfed [ 0 ] .
cz0yulgjkl [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . pd4szq5but [ 0 ] ; _rtDW ->
caerwfkxfed [ 0 ] . cz0yulgjkl [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . pd4szq5but
[ 1 ] ; _rtDW -> caerwfkxfed [ 0 ] . gkupuf105z [ 0 ] = _rtB -> caerwfkxfed [
0 ] . jowycjebg2 [ 0 ] ; _rtDW -> caerwfkxfed [ 0 ] . gkupuf105z [ 1 ] = _rtB
-> caerwfkxfed [ 0 ] . jowycjebg2 [ 1 ] ; } ssCallAccelCopyCacheForIIS ( S ,
47 , ( void * ) 0 ) ; _rtDW -> fbn0fcdbpe ++ ; } if ( ssIsSampleHit ( S , 1 ,
0 ) ) { } UNUSED_PARAMETER ( tid ) ; }
#define MDL_DERIVATIVES
static void mdlDerivatives ( SimStruct * S ) { n3qi1whofz * _rtB ; loikxjbxjg
* _rtP ; f1xhd02yjc * _rtX ; pqmvzr1kvu * _rtXdot ; ew10rzwqr2 * _rtDW ;
_rtDW = ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ; _rtXdot = ( ( pqmvzr1kvu
* ) ssGetdX ( S ) ) ; _rtX = ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ;
_rtP = ( ( loikxjbxjg * ) ssGetDefaultParam ( S ) ) ; _rtB = ( ( n3qi1whofz *
) _ssGetBlockIO ( S ) ) ; _rtDW -> bpzo543yxr = 0 ; while ( _rtDW ->
bpzo543yxr < 2 ) { ssCallAccelCopyCacheForIIS ( S , 5 , ( void * ) 1 ) ; _rtB
-> kbid4ztlyb [ 0 ] = _rtB -> kity0pstnv [ _rtDW -> bpzo543yxr << 1 ] ; _rtB
-> kbid4ztlyb [ 1 ] = _rtB -> kity0pstnv [ ( _rtDW -> bpzo543yxr << 1 ) + 1 ]
; { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfe [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> bpzo543yxr ] . eohuwdncyi [ 0 ] = _rtB ->
caerwfkxfe [ 0 ] . n2igl21kkq ; ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) ->
caerwfkxfe [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> bpzo543yxr ] .
eohuwdncyi [ 1 ] = _rtB -> caerwfkxfe [ 0 ] . l5ngnxi3xc ; ( ( pqmvzr1kvu * )
ssGetdX ( S ) ) -> caerwfkxfe [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
bpzo543yxr ] . eohuwdncyi [ 2 ] = _rtB -> caerwfkxfe [ 0 ] . fni2ay52ur ; }
_rtXdot -> caerwfkxfe [ _rtDW -> bpzo543yxr ] . aknjejchsh = 0.0 ; _rtXdot ->
caerwfkxfe [ _rtDW -> bpzo543yxr ] . aknjejchsh += _rtP -> caerwfkxfe . P_33
* _rtX -> caerwfkxfe [ _rtDW -> bpzo543yxr ] . aknjejchsh ; _rtXdot ->
caerwfkxfe [ _rtDW -> bpzo543yxr ] . aknjejchsh += _rtB -> caerwfkxfe [ 0 ] .
n2lo13q3bt ; ssCallAccelCopyCacheForIIS ( S , 5 , ( void * ) 0 ) ; _rtDW ->
bpzo543yxr ++ ; } _rtDW -> poe1w2tyiw = 0 ; while ( _rtDW -> poe1w2tyiw < 2 )
{ ssCallAccelCopyCacheForIIS ( S , 56 , ( void * ) 1 ) ; { ( ( pqmvzr1kvu * )
ssGetdX ( S ) ) -> caerwfkxfedn [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) )
-> poe1w2tyiw ] . omleyqegil [ 0 ] = _rtB -> caerwfkxfedn [ 0 ] . ciylkhjfxx
[ 0 ] ; ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfedn [ ( ( ew10rzwqr2 *
) ssGetRootDWork ( S ) ) -> poe1w2tyiw ] . omleyqegil [ 1 ] = _rtB ->
caerwfkxfedn [ 0 ] . ciylkhjfxx [ 1 ] ; ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) ->
caerwfkxfedn [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> poe1w2tyiw ] .
omleyqegil [ 2 ] = _rtB -> caerwfkxfedn [ 0 ] . onquqayms1 ; } { ( (
pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfedn [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> poe1w2tyiw ] . nk4n0e1wzr = _rtB -> caerwfkxfedn [
0 ] . p0ypdf02cf ; } { } _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
fqzeriji0s = 0.0 ; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
fqzeriji0s += _rtP -> caerwfkxfedn . P_11 * _rtX -> caerwfkxfedn [ _rtDW ->
poe1w2tyiw ] . fqzeriji0s ; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
fqzeriji0s += _rtB -> caerwfkxfedn [ 0 ] . mbhzv5o4u4 ; _rtXdot ->
caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . an4vvbaly0 = 0.0 ; _rtXdot ->
caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . an4vvbaly0 += _rtP -> caerwfkxfedn .
P_14 * _rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . an4vvbaly0 ; _rtXdot ->
caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . an4vvbaly0 += _rtB -> caerwfkxfedn [ 0
] . ajggpqb1ch ; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . c1j0xx0tdy
= 0.0 ; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . c1j0xx0tdy += _rtP
-> caerwfkxfedn . P_17 * _rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
c1j0xx0tdy ; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . c1j0xx0tdy +=
_rtB -> caerwfkxfedn [ 0 ] . lhaxx34w2u ; _rtXdot -> caerwfkxfedn [ _rtDW ->
poe1w2tyiw ] . jbtfdrl5ag = 0.0 ; _rtXdot -> caerwfkxfedn [ _rtDW ->
poe1w2tyiw ] . jbtfdrl5ag += _rtP -> caerwfkxfedn . P_19 * _rtX ->
caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . jbtfdrl5ag ; _rtXdot -> caerwfkxfedn [
_rtDW -> poe1w2tyiw ] . jbtfdrl5ag += _rtB -> caerwfkxfedn [ 0 ] . n2yhmwdnxy
; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . ekznrhxfnh = 0.0 ;
_rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . ekznrhxfnh += _rtP ->
caerwfkxfedn . P_21 * _rtX -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] .
ekznrhxfnh ; _rtXdot -> caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . ekznrhxfnh +=
_rtB -> caerwfkxfedn [ 0 ] . gw2c2lyxy5 ; _rtXdot -> caerwfkxfedn [ _rtDW ->
poe1w2tyiw ] . duh05ekusm = 0.0 ; _rtXdot -> caerwfkxfedn [ _rtDW ->
poe1w2tyiw ] . duh05ekusm += _rtP -> caerwfkxfedn . P_23 * _rtX ->
caerwfkxfedn [ _rtDW -> poe1w2tyiw ] . duh05ekusm ; _rtXdot -> caerwfkxfedn [
_rtDW -> poe1w2tyiw ] . duh05ekusm += _rtB -> caerwfkxfedn [ 0 ] . cwkmcmdzfo
; ssCallAccelCopyCacheForIIS ( S , 56 , ( void * ) 0 ) ; _rtDW -> poe1w2tyiw
++ ; } _rtDW -> fbn0fcdbpe = 0 ; while ( _rtDW -> fbn0fcdbpe < 1 ) {
ssCallAccelCopyCacheForIIS ( S , 47 , ( void * ) 1 ) ; _rtB -> o1jfak3lo1 [ 0
] = _rtB -> eyhhjczxkk [ 0 ] ; _rtB -> o1jfak3lo1 [ 1 ] = _rtB -> eyhhjczxkk
[ 1 ] ; _rtB -> o1jfak3lo1 [ 2 ] = _rtB -> eyhhjczxkk [ 2 ] ; _rtB ->
o1jfak3lo1 [ 3 ] = _rtB -> eyhhjczxkk [ 3 ] ; { ( ( pqmvzr1kvu * ) ssGetdX (
S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
fbn0fcdbpe ] . n0vhadqx00 [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . ot2vszsggr ; (
( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . n0vhadqx00 [ 1 ] = _rtB ->
caerwfkxfed [ 0 ] . mjpqsog0ro ; ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
n0vhadqx00 [ 2 ] = _rtB -> caerwfkxfed [ 0 ] . olgvycc4jd ; } _rtXdot ->
caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . ihl3kytsj1 [ 0 ] = _rtB -> caerwfkxfed
[ 0 ] . ap4yxf0rbn [ 0 ] ; _rtXdot -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] .
ihl3kytsj1 [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . ap4yxf0rbn [ 1 ] ; _rtXdot ->
caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . ihl3kytsj1 [ 2 ] = _rtB -> caerwfkxfed
[ 0 ] . ap4yxf0rbn [ 2 ] ; { boolean_T lsat ; boolean_T usat ; lsat = ( ( (
f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . ckcker4qqi <= _rtP -> caerwfkxfed .
P_131 ) ; usat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed
[ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . ckcker4qqi >=
_rtP -> caerwfkxfed . P_130 ) ; if ( ( ! lsat && ! usat ) || ( lsat && ( _rtB
-> caerwfkxfed [ 0 ] . lf33jo1eey > 0 ) ) || ( usat && ( _rtB -> caerwfkxfed
[ 0 ] . lf33jo1eey < 0 ) ) ) { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
ckcker4qqi = _rtB -> caerwfkxfed [ 0 ] . lf33jo1eey ; } else { ( ( pqmvzr1kvu
* ) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S )
) -> fbn0fcdbpe ] . ckcker4qqi = 0.0 ; } } { boolean_T lsat ; boolean_T usat
; lsat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to <= _rtP ->
caerwfkxfed . P_149 ) ; usat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) )
-> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
jl2gr241to >= _rtP -> caerwfkxfed . P_148 ) ; if ( ( ! lsat && ! usat ) || (
lsat && ( _rtB -> caerwfkxfed [ 0 ] . mzqc2pyano > 0 ) ) || ( usat && ( _rtB
-> caerwfkxfed [ 0 ] . mzqc2pyano < 0 ) ) ) { ( ( pqmvzr1kvu * ) ssGetdX ( S
) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe
] . jl2gr241to = _rtB -> caerwfkxfed [ 0 ] . mzqc2pyano ; } else { ( (
pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . jl2gr241to = 0.0 ; } } { boolean_T
lsat ; boolean_T usat ; lsat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) )
-> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
bz1moouyu2 <= _rtP -> caerwfkxfed . P_156 ) ; usat = ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . bz1moouyu2 >= _rtP -> caerwfkxfed . P_155 ) ; if ( (
! lsat && ! usat ) || ( lsat && ( _rtB -> caerwfkxfed [ 0 ] . eeaqjfivi2 > 0
) ) || ( usat && ( _rtB -> caerwfkxfed [ 0 ] . eeaqjfivi2 < 0 ) ) ) { ( (
pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . bz1moouyu2 = _rtB -> caerwfkxfed [ 0
] . eeaqjfivi2 ; } else { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [
( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . bz1moouyu2 = 0.0
; } } { boolean_T lsat ; boolean_T usat ; lsat = ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . he501jqmwr <= _rtP -> caerwfkxfed . P_162 ) ; usat =
( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2
* ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . he501jqmwr >= _rtP ->
caerwfkxfed . P_161 ) ; if ( ( ! lsat && ! usat ) || ( lsat && ( _rtB ->
caerwfkxfed [ 0 ] . mxwdorti1i > 0 ) ) || ( usat && ( _rtB -> caerwfkxfed [ 0
] . mxwdorti1i < 0 ) ) ) { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed
[ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . he501jqmwr =
_rtB -> caerwfkxfed [ 0 ] . mxwdorti1i ; } else { ( ( pqmvzr1kvu * ) ssGetdX
( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
fbn0fcdbpe ] . he501jqmwr = 0.0 ; } } { boolean_T lsat ; boolean_T usat ;
lsat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . fhxf25u0ju <= _rtP ->
caerwfkxfed . P_168 ) ; usat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) )
-> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
fhxf25u0ju >= _rtP -> caerwfkxfed . P_167 ) ; if ( ( ! lsat && ! usat ) || (
lsat && ( _rtB -> caerwfkxfed [ 0 ] . fsyxgxizlr > 0 ) ) || ( usat && ( _rtB
-> caerwfkxfed [ 0 ] . fsyxgxizlr < 0 ) ) ) { ( ( pqmvzr1kvu * ) ssGetdX ( S
) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe
] . fhxf25u0ju = _rtB -> caerwfkxfed [ 0 ] . fsyxgxizlr ; } else { ( (
pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . fhxf25u0ju = 0.0 ; } } { boolean_T
lsat ; boolean_T usat ; lsat = ( ( ( f1xhd02yjc * ) ssGetContStates ( S ) )
-> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
oi11ijmh5w <= _rtP -> caerwfkxfed . P_177 ) ; usat = ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . oi11ijmh5w >= _rtP -> caerwfkxfed . P_176 ) ; if ( (
! lsat && ! usat ) || ( lsat && ( _rtB -> caerwfkxfed [ 0 ] . pnwyjyh04z > 0
) ) || ( usat && ( _rtB -> caerwfkxfed [ 0 ] . pnwyjyh04z < 0 ) ) ) { ( (
pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * )
ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w = _rtB -> caerwfkxfed [ 0
] . pnwyjyh04z ; } else { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [
( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . oi11ijmh5w = 0.0
; } } _rtXdot -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 0 ] =
_rtB -> caerwfkxfed [ 0 ] . d0z30eq4uk [ 0 ] ; _rtXdot -> caerwfkxfed [ _rtDW
-> fbn0fcdbpe ] . d44k1xtr5y [ 1 ] = _rtB -> caerwfkxfed [ 0 ] . d0z30eq4uk [
1 ] ; _rtXdot -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . d44k1xtr5y [ 2 ] =
_rtB -> caerwfkxfed [ 0 ] . d0z30eq4uk [ 2 ] ; _rtXdot -> caerwfkxfed [ _rtDW
-> fbn0fcdbpe ] . jo1on23gqr [ 0 ] = _rtB -> caerwfkxfed [ 0 ] . hdtkkl5ebe [
0 ] ; _rtXdot -> caerwfkxfed [ _rtDW -> fbn0fcdbpe ] . jo1on23gqr [ 1 ] =
_rtB -> caerwfkxfed [ 0 ] . hdtkkl5ebe [ 1 ] ; _rtXdot -> caerwfkxfed [ _rtDW
-> fbn0fcdbpe ] . jo1on23gqr [ 2 ] = _rtB -> caerwfkxfed [ 0 ] . hdtkkl5ebe [
2 ] ; { boolean_T lsat ; boolean_T usat ; lsat = ( ( ( f1xhd02yjc * )
ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork (
S ) ) -> fbn0fcdbpe ] . m41w0ewt02 <= _rtP -> caerwfkxfed . P_355 ) ; usat =
( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2
* ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . m41w0ewt02 >= _rtP ->
caerwfkxfed . P_354 ) ; if ( ( ! lsat && ! usat ) || ( lsat && ( _rtB ->
caerwfkxfed [ 0 ] . bs5vug3gvb > 0 ) ) || ( usat && ( _rtB -> caerwfkxfed [ 0
] . bs5vug3gvb < 0 ) ) ) { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed
[ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . m41w0ewt02 =
_rtB -> caerwfkxfed [ 0 ] . bs5vug3gvb ; } else { ( ( pqmvzr1kvu * ) ssGetdX
( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
fbn0fcdbpe ] . m41w0ewt02 = 0.0 ; } } if ( _rtDW -> caerwfkxfed [ 0 ] .
dtafal24mu ) { { boolean_T lsat ; boolean_T usat ; lsat = ( ( ( f1xhd02yjc *
) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork
( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji <= _rtP -> caerwfkxfed . P_50 ) ; usat =
( ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2
* ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji >= _rtP ->
caerwfkxfed . P_49 ) ; if ( ( ! lsat && ! usat ) || ( lsat && ( _rtB ->
caerwfkxfed [ 0 ] . mybhz34gua > 0 ) ) || ( usat && ( _rtB -> caerwfkxfed [ 0
] . mybhz34gua < 0 ) ) ) { ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed
[ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . dh1nyl2cji =
_rtB -> caerwfkxfed [ 0 ] . mybhz34gua ; } else { ( ( pqmvzr1kvu * ) ssGetdX
( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) ->
fbn0fcdbpe ] . dh1nyl2cji = 0.0 ; } } } else { ( ( pqmvzr1kvu * ) ssGetdX ( S
) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe
] . dh1nyl2cji = 0.0 ; } bdg4dfoelg ( _rtB -> caerwfkxfed [ 0 ] . mybhz34gua
, & _rtDW -> caerwfkxfed [ 0 ] . kjarfumpbl , ( bw1rqnuzxz * ) & _rtP ->
caerwfkxfed . kjarfumpbl , & ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) ->
caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] .
kjarfumpbl , & ( ( pqmvzr1kvu * ) ssGetdX ( S ) ) -> caerwfkxfed [ ( (
ew10rzwqr2 * ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . kjarfumpbl ) ;
bdg4dfoelg ( _rtB -> caerwfkxfed [ 0 ] . mybhz34gua , & _rtDW -> caerwfkxfed
[ 0 ] . gamgx1mju3p , ( bw1rqnuzxz * ) & _rtP -> caerwfkxfed . gamgx1mju3p ,
& ( ( f1xhd02yjc * ) ssGetContStates ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2
* ) ssGetRootDWork ( S ) ) -> fbn0fcdbpe ] . gamgx1mju3p , & ( ( pqmvzr1kvu *
) ssGetdX ( S ) ) -> caerwfkxfed [ ( ( ew10rzwqr2 * ) ssGetRootDWork ( S ) )
-> fbn0fcdbpe ] . gamgx1mju3p ) ; ssCallAccelCopyCacheForIIS ( S , 47 , (
void * ) 0 ) ; _rtDW -> fbn0fcdbpe ++ ; } } static void mdlInitializeSizes (
SimStruct * S ) { ssSetChecksumVal ( S , 0 , 3272287921U ) ; ssSetChecksumVal
( S , 1 , 152616418U ) ; ssSetChecksumVal ( S , 2 , 268042307U ) ;
ssSetChecksumVal ( S , 3 , 876997105U ) ; { mxArray * slVerStructMat = NULL ;
mxArray * slStrMat = mxCreateString ( "simulink" ) ; char slVerChar [ 10 ] ;
int status = mexCallMATLAB ( 1 , & slVerStructMat , 1 , & slStrMat , "ver" )
; if ( status == 0 ) { mxArray * slVerMat = mxGetField ( slVerStructMat , 0 ,
"Version" ) ; if ( slVerMat == NULL ) { status = 1 ; } else { status =
mxGetString ( slVerMat , slVerChar , 10 ) ; } } mxDestroyArray ( slStrMat ) ;
mxDestroyArray ( slVerStructMat ) ; if ( ( status == 1 ) || ( strcmp (
slVerChar , "8.3" ) != 0 ) ) { return ; } } ssSetOptions ( S ,
SS_OPTION_EXCEPTION_FREE_CODE ) ; if ( ssGetSizeofDWork ( S ) != sizeof (
ew10rzwqr2 ) ) { ssSetErrorStatus ( S ,
"Unexpected error: Internal DWork sizes do "
"not match for accelerator mex file." ) ; } if ( ssGetSizeofGlobalBlockIO ( S
) != sizeof ( n3qi1whofz ) ) { ssSetErrorStatus ( S ,
"Unexpected error: Internal BlockIO sizes do "
"not match for accelerator mex file." ) ; } { int ssSizeofParams ;
ssGetSizeofParams ( S , & ssSizeofParams ) ; if ( ssSizeofParams != sizeof (
loikxjbxjg ) ) { static char msg [ 256 ] ; sprintf ( msg ,
"Unexpected error: Internal Parameters sizes do "
"not match for accelerator mex file." ) ; } } _ssSetDefaultParam ( S , (
real_T * ) & o2iu0a2jke ) ; _ssSetConstBlockIO ( S , & odcn43wyyk ) ;
rt_InitInfAndNaN ( sizeof ( real_T ) ) ; ( ( loikxjbxjg * ) ssGetDefaultParam
( S ) ) -> caerwfkxfedn . P_57 = rtInf ; ( ( loikxjbxjg * ) ssGetDefaultParam
( S ) ) -> caerwfkxfed . P_315 = rtInf ; ( ( loikxjbxjg * ) ssGetDefaultParam
( S ) ) -> caerwfkxfe . P_29 = rtInf ; } static void mdlInitializeSampleTimes
( SimStruct * S ) { { SimStruct * childS ; SysOutputFcn * callSysFcns ;
childS = ssGetSFunction ( S , 0 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 1 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 2 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 3 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 4 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 5 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 6 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 7 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 8 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 9 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; childS = ssGetSFunction ( S , 10 ) ; callSysFcns =
ssGetCallSystemOutputFcnList ( childS ) ; callSysFcns [ 3 + 0 ] = (
SysOutputFcn ) ( NULL ) ; } } static void mdlTerminate ( SimStruct * S ) { }
#include "simulink.c"
