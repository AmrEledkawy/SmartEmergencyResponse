classdef GeManager < handle
    %GEMANAGER This class recieves positional data from the GeCommunicator
    %and updates the Google earth interface accordingly    
    properties
       LAIdx;      
       Views;
    end
    
    properties (Access = protected)   
        
        GVudp;      %UDP connections for the vehicles
        QCudp;
        FWudp;
        
        GVdata;     %Data of vehicles locations
        QCdata;
        FWdata;     
        
        IEwindow;        
        GeTimer;       
        cmNr;
    end
    
    methods 
        function obj = GeManager(nGV,nQC,nFW)            
            
            % Open ActiveX-Control from Microsoft-Internet-Explorer
            GeInterface(obj);
            explorer = actxcontrol('Shell.Explorer.2',[0 0 805 645]);                       
            
            webpage = [pwd '/web/ge_interface.html'];
            Navigate(explorer, webpage); 
            obj.IEwindow = explorer.Document.parentWindow;
            obj.initFleets(nGV,nQC,nFW);
            obj.startUDP();
            obj.GeTimer = timer('ExecutionMode','fixedRate','Period',0.025,'TimerFcn',@obj.updateGe);
            start(obj.GeTimer);
                        
        end              
        
    end
    
    methods (Access = protected)
        function startUDP(obj)
                         
            GVport = 4012;
            QCport = 4013;            
            FWport = 4014;                       
            
            GeIP = '127.0.0.1';
            
            obj.GVudp = udp(GeIP,'LocalPort',GVport+30);
            obj.QCudp = udp(GeIP,'LocalPort',QCport+30);
            obj.FWudp = udp(GeIP,'LocalPort',FWport+30);
            
            obj.GVudp.DatagramReceivedFcn = @(~,~)obj.updateGV();
            obj.QCudp.DatagramReceivedFcn = @(~,~)obj.updateQC();
            obj.FWudp.DatagramReceivedFcn = @(~,~)obj.updateFW();
            
            fopen(obj.GVudp);
            fopen(obj.QCudp);
            fopen(obj.FWudp);
        end
        
        function delete(obj)
            fclose(obj.GVudp);
            fclose(obj.QCudp);
            fclose(obj.FWudp);             
        end
        
        
        % Read UDP data from the other computer
        function updateGV(obj)
            obj.GVdata = fread(obj.GVudp);            
            %obj.GVdata = obj.parseUDP(data);
        end
        
        function updateQC(obj)
            obj.QCdata = fread(obj.QCudp);
            %obj.QCdata = obj.parseUDP(data);
        end
        
        function updateFW(obj)
            obj.FWdata = fread(obj.FWudp);
            %obj.FWdata = obj.parseUDP(data);
        end                
                       
        function out = parseUDP(~,data)
            dataStr = mat2str(data');
            dataCell = strsplit(dataStr(2:end-1),';');            
            out = cellfun(@(x) ['[' regexprep(x,' ',', ') ']'],dataCell,'UniformOutput',false);
        end               
        
      
        
        function initFleets(obj,nGV,nQC,nFW) 
            
            lat = 37.798889;
            lon = -122.443889;
            head = 0;

            la_lat = 37.798889;
            la_lon = -122.443889;
            la_alt = 0;
            la_head = 0;
            la_tilt = 70;
            la_range = 5;

            cm_lat = [37.798889;37.801250];
            cm_lon = [-122.443889;-122.455211];
            cm_alt = [0;120];
            cm_head = [0;-60];
            cm_tilt = [70;20];
            cm_roll = [0;0];
    
            obj.cmNr = length(cm_lat);
            obj.Views = nGV + nQC + nFW + obj.cmNr; 
            pause(5);           
            
            %init all fleet data
            obj.GVdata = repmat([37.798889 -122.443889 0 0 0 0],nGV,1);
            obj.QCdata = repmat([37.798889 -122.443889 40 0 0 0],nQC,1);
            obj.FWdata = repmat([37.798889 -122.443889 45 0 0 0],nFW,1);
            

            for i = 1:obj.cmNr
                obj.IEwindow.execScript(['addCmView(' num2str(cm_lat(i))  ',' num2str(cm_lon(i))   ','  num2str(cm_alt(i))  ',' num2str(cm_head(i)) ',' num2str(cm_tilt(i)) ',' num2str(cm_roll(i)) ')'], 'Jscript');
            end
            
            for i = 1:obj.Views-obj.cmNr
                obj.IEwindow.execScript(['addLaView(' num2str(la_range) ',' num2str(la_tilt) ',' num2str(la_alt) ')'], 'Jscript');
                % pause(3);
                obj.IEwindow.execScript(['teleportTo(' num2str(la_lat) ',' num2str(la_lon) ',' num2str(la_head) ')'], 'Jscript');
                % pause(3);
            end
            for i=1:nGV
                obj.IEwindow.execScript('addGroundVehicle()', 'Jscript');
                pause(2)
                obj.IEwindow.execScript( ...
                ['addGVModel(' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
                pause(2)
            end
            
            for i=1:nQC
                obj.IEwindow.execScript('addArDroneVehicle()', 'Jscript');
                pause(2)
                obj.IEwindow.execScript( ...
                ['addARModel(' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
                pause(2)
            end
            
            for i=1:nFW
                obj.IEwindow.execScript('addFixedWingVehicle()', 'Jscript');
                pause(2)
                obj.IEwindow.execScript( ...
                ['addFWModel(' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
                pause(2)
            end
            
             obj.IEwindow.execScript('addAtlas()', 'Jscript');
             pause(2)
             obj.IEwindow.execScript( ...
             ['addATModel(' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
             pause(2)
             
             obj.IEwindow.execScript('addBiobot()', 'Jscript');
             pause(2)
             obj.IEwindow.execScript( ...
             ['addBBModel(' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
             pause(2)
             
             obj.IEwindow.execScript('addKuka()', 'Jscript');
             pause(2)
             obj.IEwindow.execScript( ...
             ['addKKModel(' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
             pause(2)
            %obj.IEwindow.execScript(['addGroundVehicle(' num2str(nGV) ',' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');    
            %obj.IEwindow.execScript(['addArDroneVehicle(' num2str(nQC) ',' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
            %obj.IEwindow.execScript(['addFixedWingVehicle(' num2str(nFW) ',' num2str(lat) ',' num2str(lon) ',' num2str(head) ')'], 'Jscript');
        end
        
        function updateGe(obj,~,~)
                                         
              GV = reshape(obj.GVdata,numel(obj.GVdata)/6,6);
              QC = reshape(obj.QCdata,numel(obj.QCdata)/6,6);
              FW = reshape(obj.FWdata,numel(obj.FWdata)/6,6);
              
              VC = [GV; QC; FW];
              LA = repmat([VC(obj.LAIdx,1),VC(obj.LAIdx,2),50,0,90,10,30],size(VC,1),1);            
              
              GV = obj.parseUDP(GV);
              QC = obj.parseUDP(QC);
              FW = obj.parseUDP(FW);
              LA = obj.parseUDP(LA);
              
              obj.IEwindow.execScript(['move6GV(' GV{1} ',' GV{2} ',' GV{3} ',' GV{4} ',' GV{5} ',' GV{6} ')'], 'Jscript');
              obj.IEwindow.execScript(['move6AR(' QC{1} ',' QC{2} ',' QC{3} ',' QC{4} ',' QC{5} ',' QC{6} ')'], 'Jscript');
              obj.IEwindow.execScript(['move6FW(' FW{1} ',' FW{2} ',' FW{3} ',' FW{4} ',' FW{5} ',' FW{6} ')'], 'Jscript');
              
              if obj.LAIdx < obj.Views - obj.cmNr;
                obj.IEwindow.execScript(['moveFullLaView(' num2str(obj.LAIdx) ',' LA{1} ',' LA{2} ',' LA{3} ',' LA{4} ',' LA{5} ',' LA{6} ',' LA{7} ')'], 'Jscript');
              else
                obj.IEwindow.execScript(['moveFullCmView(' num2str(obj.Views - obj.LAIdx) ',' LA{1} ',' LA{2} ',' LA{3} ',' LA{5} ',' LA{6} ',' LA{7} ')'], 'Jscript');
              end
              
              % Set LAIdx to -1 to not update
              obj.IEwindow.execScript(['synchronousUpdate(' num2str(obj.LAIdx) ', 0, 0, 0, 0, 0)'], 'Jscript');
             
        end
    end
    
end

