/* Include files */

#include "MultiVehicleModel_sfun.h"
#include "MultiVehicleModel_sfun_debug_macros.h"
#include "c1_MultiVehicleModel.h"
#include "c2_MultiVehicleModel.h"
#include "c3_MultiVehicleModel.h"
#include "c4_MultiVehicleModel.h"
#include "c5_MultiVehicleModel.h"
#include "c6_MultiVehicleModel.h"
#include "c9_MultiVehicleModel.h"
#include "c10_MultiVehicleModel.h"
#include "c11_MultiVehicleModel.h"
#include "c12_MultiVehicleModel.h"
#include "c13_MultiVehicleModel.h"

/* Type Definitions */

/* Named Constants */

/* Variable Declarations */

/* Variable Definitions */
uint32_T _MultiVehicleModelMachineNumber_;

/* Function Declarations */

/* Function Definitions */
void MultiVehicleModel_initializer(void)
{
}

void MultiVehicleModel_terminator(void)
{
}

/* SFunction Glue Code */
unsigned int sf_MultiVehicleModel_method_dispatcher(SimStruct *simstructPtr,
  unsigned int chartFileNumber, const char* specsCksum, int_T method, void *data)
{
  if (chartFileNumber==1) {
    c1_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==2) {
    c2_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==3) {
    c3_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==4) {
    c4_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==5) {
    c5_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==6) {
    c6_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==9) {
    c9_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==10) {
    c10_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==11) {
    c11_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==12) {
    c12_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  if (chartFileNumber==13) {
    c13_MultiVehicleModel_method_dispatcher(simstructPtr, method, data);
    return 1;
  }

  return 0;
}

unsigned int sf_MultiVehicleModel_process_check_sum_call( int nlhs, mxArray *
  plhs[], int nrhs, const mxArray * prhs[] )
{

#ifdef MATLAB_MEX_FILE

  char commandName[20];
  if (nrhs<1 || !mxIsChar(prhs[0]) )
    return 0;

  /* Possible call to get the checksum */
  mxGetString(prhs[0], commandName,sizeof(commandName)/sizeof(char));
  commandName[(sizeof(commandName)/sizeof(char)-1)] = '\0';
  if (strcmp(commandName,"sf_get_check_sum"))
    return 0;
  plhs[0] = mxCreateDoubleMatrix( 1,4,mxREAL);
  if (nrhs>1 && mxIsChar(prhs[1])) {
    mxGetString(prhs[1], commandName,sizeof(commandName)/sizeof(char));
    commandName[(sizeof(commandName)/sizeof(char)-1)] = '\0';
    if (!strcmp(commandName,"machine")) {
      ((real_T *)mxGetPr((plhs[0])))[0] = (real_T)(177914100U);
      ((real_T *)mxGetPr((plhs[0])))[1] = (real_T)(1862844393U);
      ((real_T *)mxGetPr((plhs[0])))[2] = (real_T)(873534908U);
      ((real_T *)mxGetPr((plhs[0])))[3] = (real_T)(680188768U);
    } else if (!strcmp(commandName,"exportedFcn")) {
      ((real_T *)mxGetPr((plhs[0])))[0] = (real_T)(0U);
      ((real_T *)mxGetPr((plhs[0])))[1] = (real_T)(0U);
      ((real_T *)mxGetPr((plhs[0])))[2] = (real_T)(0U);
      ((real_T *)mxGetPr((plhs[0])))[3] = (real_T)(0U);
    } else if (!strcmp(commandName,"makefile")) {
      ((real_T *)mxGetPr((plhs[0])))[0] = (real_T)(1894257879U);
      ((real_T *)mxGetPr((plhs[0])))[1] = (real_T)(699457606U);
      ((real_T *)mxGetPr((plhs[0])))[2] = (real_T)(4241921810U);
      ((real_T *)mxGetPr((plhs[0])))[3] = (real_T)(1527169243U);
    } else if (nrhs==3 && !strcmp(commandName,"chart")) {
      unsigned int chartFileNumber;
      chartFileNumber = (unsigned int)mxGetScalar(prhs[2]);
      switch (chartFileNumber) {
       case 1:
        {
          extern void sf_c1_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c1_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 2:
        {
          extern void sf_c2_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c2_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 3:
        {
          extern void sf_c3_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c3_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 4:
        {
          extern void sf_c4_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c4_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 5:
        {
          extern void sf_c5_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c5_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 6:
        {
          extern void sf_c6_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c6_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 9:
        {
          extern void sf_c9_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c9_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 10:
        {
          extern void sf_c10_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c10_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 11:
        {
          extern void sf_c11_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c11_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 12:
        {
          extern void sf_c12_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c12_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       case 13:
        {
          extern void sf_c13_MultiVehicleModel_get_check_sum(mxArray *plhs[]);
          sf_c13_MultiVehicleModel_get_check_sum(plhs);
          break;
        }

       default:
        ((real_T *)mxGetPr((plhs[0])))[0] = (real_T)(0.0);
        ((real_T *)mxGetPr((plhs[0])))[1] = (real_T)(0.0);
        ((real_T *)mxGetPr((plhs[0])))[2] = (real_T)(0.0);
        ((real_T *)mxGetPr((plhs[0])))[3] = (real_T)(0.0);
      }
    } else if (!strcmp(commandName,"target")) {
      ((real_T *)mxGetPr((plhs[0])))[0] = (real_T)(272314902U);
      ((real_T *)mxGetPr((plhs[0])))[1] = (real_T)(2584324858U);
      ((real_T *)mxGetPr((plhs[0])))[2] = (real_T)(1204694939U);
      ((real_T *)mxGetPr((plhs[0])))[3] = (real_T)(833814741U);
    } else {
      return 0;
    }
  } else {
    ((real_T *)mxGetPr((plhs[0])))[0] = (real_T)(2835551662U);
    ((real_T *)mxGetPr((plhs[0])))[1] = (real_T)(1466440613U);
    ((real_T *)mxGetPr((plhs[0])))[2] = (real_T)(2726284160U);
    ((real_T *)mxGetPr((plhs[0])))[3] = (real_T)(2005653980U);
  }

  return 1;

#else

  return 0;

#endif

}

unsigned int sf_MultiVehicleModel_autoinheritance_info( int nlhs, mxArray *
  plhs[], int nrhs, const mxArray * prhs[] )
{

#ifdef MATLAB_MEX_FILE

  char commandName[32];
  char aiChksum[64];
  if (nrhs<3 || !mxIsChar(prhs[0]) )
    return 0;

  /* Possible call to get the autoinheritance_info */
  mxGetString(prhs[0], commandName,sizeof(commandName)/sizeof(char));
  commandName[(sizeof(commandName)/sizeof(char)-1)] = '\0';
  if (strcmp(commandName,"get_autoinheritance_info"))
    return 0;
  mxGetString(prhs[2], aiChksum,sizeof(aiChksum)/sizeof(char));
  aiChksum[(sizeof(aiChksum)/sizeof(char)-1)] = '\0';

  {
    unsigned int chartFileNumber;
    chartFileNumber = (unsigned int)mxGetScalar(prhs[1]);
    switch (chartFileNumber) {
     case 1:
      {
        if (strcmp(aiChksum, "REbaJx2P8vUplQkRftoZGH") == 0) {
          extern mxArray *sf_c1_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c1_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 2:
      {
        if (strcmp(aiChksum, "qErgGXPp8BuDJ20SWQov3G") == 0) {
          extern mxArray *sf_c2_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c2_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 3:
      {
        if (strcmp(aiChksum, "hf5dlTMq0Z41m7SKxGrj9D") == 0) {
          extern mxArray *sf_c3_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c3_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 4:
      {
        if (strcmp(aiChksum, "ipgm5eXXKOsJ6BTynKrgPE") == 0) {
          extern mxArray *sf_c4_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c4_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 5:
      {
        if (strcmp(aiChksum, "KA9rilVdpJM8KP1bpqyGRG") == 0) {
          extern mxArray *sf_c5_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c5_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 6:
      {
        if (strcmp(aiChksum, "Rde9hYWHcet5weBzX8CsuD") == 0) {
          extern mxArray *sf_c6_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c6_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 9:
      {
        if (strcmp(aiChksum, "POlTffquFSckDGX9JNjkTB") == 0) {
          extern mxArray *sf_c9_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c9_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 10:
      {
        if (strcmp(aiChksum, "1BaPyVJhxknQfsnjlfcAJG") == 0) {
          extern mxArray *sf_c10_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c10_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 11:
      {
        if (strcmp(aiChksum, "2lwCtaU0H4aro3Xvz63ZxD") == 0) {
          extern mxArray *sf_c11_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c11_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 12:
      {
        if (strcmp(aiChksum, "kkNw8glF1xWgCbK2VEUelE") == 0) {
          extern mxArray *sf_c12_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c12_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     case 13:
      {
        if (strcmp(aiChksum, "LEldE7np6oGiff9KvRqX1B") == 0) {
          extern mxArray *sf_c13_MultiVehicleModel_get_autoinheritance_info(void);
          plhs[0] = sf_c13_MultiVehicleModel_get_autoinheritance_info();
          break;
        }

        plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
        break;
      }

     default:
      plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
    }
  }

  return 1;

#else

  return 0;

#endif

}

unsigned int sf_MultiVehicleModel_get_eml_resolved_functions_info( int nlhs,
  mxArray * plhs[], int nrhs, const mxArray * prhs[] )
{

#ifdef MATLAB_MEX_FILE

  char commandName[64];
  if (nrhs<2 || !mxIsChar(prhs[0]))
    return 0;

  /* Possible call to get the get_eml_resolved_functions_info */
  mxGetString(prhs[0], commandName,sizeof(commandName)/sizeof(char));
  commandName[(sizeof(commandName)/sizeof(char)-1)] = '\0';
  if (strcmp(commandName,"get_eml_resolved_functions_info"))
    return 0;

  {
    unsigned int chartFileNumber;
    chartFileNumber = (unsigned int)mxGetScalar(prhs[1]);
    switch (chartFileNumber) {
     case 1:
      {
        extern const mxArray
          *sf_c1_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c1_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 2:
      {
        extern const mxArray
          *sf_c2_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c2_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 3:
      {
        extern const mxArray
          *sf_c3_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c3_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 4:
      {
        extern const mxArray
          *sf_c4_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c4_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 5:
      {
        extern const mxArray
          *sf_c5_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c5_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 6:
      {
        extern const mxArray
          *sf_c6_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c6_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 9:
      {
        extern const mxArray
          *sf_c9_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c9_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 10:
      {
        extern const mxArray
          *sf_c10_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c10_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 11:
      {
        extern const mxArray
          *sf_c11_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c11_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 12:
      {
        extern const mxArray
          *sf_c12_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c12_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     case 13:
      {
        extern const mxArray
          *sf_c13_MultiVehicleModel_get_eml_resolved_functions_info(void);
        mxArray *persistentMxArray = (mxArray *)
          sf_c13_MultiVehicleModel_get_eml_resolved_functions_info();
        plhs[0] = mxDuplicateArray(persistentMxArray);
        mxDestroyArray(persistentMxArray);
        break;
      }

     default:
      plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
    }
  }

  return 1;

#else

  return 0;

#endif

}

unsigned int sf_MultiVehicleModel_third_party_uses_info( int nlhs, mxArray *
  plhs[], int nrhs, const mxArray * prhs[] )
{
  char commandName[64];
  char tpChksum[64];
  if (nrhs<3 || !mxIsChar(prhs[0]))
    return 0;

  /* Possible call to get the third_party_uses_info */
  mxGetString(prhs[0], commandName,sizeof(commandName)/sizeof(char));
  commandName[(sizeof(commandName)/sizeof(char)-1)] = '\0';
  mxGetString(prhs[2], tpChksum,sizeof(tpChksum)/sizeof(char));
  tpChksum[(sizeof(tpChksum)/sizeof(char)-1)] = '\0';
  if (strcmp(commandName,"get_third_party_uses_info"))
    return 0;

  {
    unsigned int chartFileNumber;
    chartFileNumber = (unsigned int)mxGetScalar(prhs[1]);
    switch (chartFileNumber) {
     case 1:
      {
        if (strcmp(tpChksum, "GFITvAm5wkbYApaUZsg8tF") == 0) {
          extern mxArray *sf_c1_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c1_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 2:
      {
        if (strcmp(tpChksum, "V4ed6uUSzTDfUiZrLuwqQB") == 0) {
          extern mxArray *sf_c2_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c2_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 3:
      {
        if (strcmp(tpChksum, "k8nrhW9haxlqV0IF2JbmjB") == 0) {
          extern mxArray *sf_c3_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c3_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 4:
      {
        if (strcmp(tpChksum, "lCGXEyD3DTEXpX6JvArRZH") == 0) {
          extern mxArray *sf_c4_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c4_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 5:
      {
        if (strcmp(tpChksum, "qtVBHz5VqCH29FtoavjgfF") == 0) {
          extern mxArray *sf_c5_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c5_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 6:
      {
        if (strcmp(tpChksum, "EgM25WXy866Zya1KGpGceH") == 0) {
          extern mxArray *sf_c6_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c6_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 9:
      {
        if (strcmp(tpChksum, "fp4IprLbU2uipnklNpIuaF") == 0) {
          extern mxArray *sf_c9_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c9_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 10:
      {
        if (strcmp(tpChksum, "HeJOe7WNfYf9JBaLv99HGB") == 0) {
          extern mxArray *sf_c10_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c10_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 11:
      {
        if (strcmp(tpChksum, "xWBCRDAiNbQ0oOgxNCtZ8F") == 0) {
          extern mxArray *sf_c11_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c11_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 12:
      {
        if (strcmp(tpChksum, "IQjHuuTolYCMF9EoP0Gs9") == 0) {
          extern mxArray *sf_c12_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c12_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     case 13:
      {
        if (strcmp(tpChksum, "GSDzEPaJPUQpgnxgta3SpH") == 0) {
          extern mxArray *sf_c13_MultiVehicleModel_third_party_uses_info(void);
          plhs[0] = sf_c13_MultiVehicleModel_third_party_uses_info();
          break;
        }
      }

     default:
      plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
    }
  }

  return 1;
}

unsigned int sf_MultiVehicleModel_updateBuildInfo_args_info( int nlhs, mxArray *
  plhs[], int nrhs, const mxArray * prhs[] )
{
  char commandName[64];
  char tpChksum[64];
  if (nrhs<3 || !mxIsChar(prhs[0]))
    return 0;

  /* Possible call to get the updateBuildInfo_args_info */
  mxGetString(prhs[0], commandName,sizeof(commandName)/sizeof(char));
  commandName[(sizeof(commandName)/sizeof(char)-1)] = '\0';
  mxGetString(prhs[2], tpChksum,sizeof(tpChksum)/sizeof(char));
  tpChksum[(sizeof(tpChksum)/sizeof(char)-1)] = '\0';
  if (strcmp(commandName,"get_updateBuildInfo_args_info"))
    return 0;

  {
    unsigned int chartFileNumber;
    chartFileNumber = (unsigned int)mxGetScalar(prhs[1]);
    switch (chartFileNumber) {
     case 1:
      {
        if (strcmp(tpChksum, "GFITvAm5wkbYApaUZsg8tF") == 0) {
          extern mxArray *sf_c1_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c1_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 2:
      {
        if (strcmp(tpChksum, "V4ed6uUSzTDfUiZrLuwqQB") == 0) {
          extern mxArray *sf_c2_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c2_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 3:
      {
        if (strcmp(tpChksum, "k8nrhW9haxlqV0IF2JbmjB") == 0) {
          extern mxArray *sf_c3_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c3_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 4:
      {
        if (strcmp(tpChksum, "lCGXEyD3DTEXpX6JvArRZH") == 0) {
          extern mxArray *sf_c4_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c4_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 5:
      {
        if (strcmp(tpChksum, "qtVBHz5VqCH29FtoavjgfF") == 0) {
          extern mxArray *sf_c5_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c5_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 6:
      {
        if (strcmp(tpChksum, "EgM25WXy866Zya1KGpGceH") == 0) {
          extern mxArray *sf_c6_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c6_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 9:
      {
        if (strcmp(tpChksum, "fp4IprLbU2uipnklNpIuaF") == 0) {
          extern mxArray *sf_c9_MultiVehicleModel_updateBuildInfo_args_info(void);
          plhs[0] = sf_c9_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 10:
      {
        if (strcmp(tpChksum, "HeJOe7WNfYf9JBaLv99HGB") == 0) {
          extern mxArray *sf_c10_MultiVehicleModel_updateBuildInfo_args_info
            (void);
          plhs[0] = sf_c10_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 11:
      {
        if (strcmp(tpChksum, "xWBCRDAiNbQ0oOgxNCtZ8F") == 0) {
          extern mxArray *sf_c11_MultiVehicleModel_updateBuildInfo_args_info
            (void);
          plhs[0] = sf_c11_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 12:
      {
        if (strcmp(tpChksum, "IQjHuuTolYCMF9EoP0Gs9") == 0) {
          extern mxArray *sf_c12_MultiVehicleModel_updateBuildInfo_args_info
            (void);
          plhs[0] = sf_c12_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     case 13:
      {
        if (strcmp(tpChksum, "GSDzEPaJPUQpgnxgta3SpH") == 0) {
          extern mxArray *sf_c13_MultiVehicleModel_updateBuildInfo_args_info
            (void);
          plhs[0] = sf_c13_MultiVehicleModel_updateBuildInfo_args_info();
          break;
        }
      }

     default:
      plhs[0] = mxCreateDoubleMatrix(0,0,mxREAL);
    }
  }

  return 1;
}

void MultiVehicleModel_debug_initialize(struct SfDebugInstanceStruct*
  debugInstance)
{
  _MultiVehicleModelMachineNumber_ = sf_debug_initialize_machine(debugInstance,
    "MultiVehicleModel","sfun",0,11,0,0,0);
  sf_debug_set_machine_event_thresholds(debugInstance,
    _MultiVehicleModelMachineNumber_,0,0);
  sf_debug_set_machine_data_thresholds(debugInstance,
    _MultiVehicleModelMachineNumber_,0);
}

void MultiVehicleModel_register_exported_symbols(SimStruct* S)
{
}

static mxArray* sRtwOptimizationInfoStruct= NULL;
mxArray* load_MultiVehicleModel_optimization_info(void)
{
  if (sRtwOptimizationInfoStruct==NULL) {
    sRtwOptimizationInfoStruct = sf_load_rtw_optimization_info(
      "MultiVehicleModel", "MultiVehicleModel");
    mexMakeArrayPersistent(sRtwOptimizationInfoStruct);
  }

  return(sRtwOptimizationInfoStruct);
}

void unload_MultiVehicleModel_optimization_info(void)
{
  if (sRtwOptimizationInfoStruct!=NULL) {
    mxDestroyArray(sRtwOptimizationInfoStruct);
    sRtwOptimizationInfoStruct = NULL;
  }
}
